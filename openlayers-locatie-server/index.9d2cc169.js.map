{"mappings":"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","sources":["node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/WMTSRequestEncoding.js","node_modules/ol/src/uri.js","node_modules/ol/src/tilegrid/WMTS.js","node_modules/ol/src/source/WMTS.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/TextFeature.js","node_modules/ol/src/format/WKT.js","node_modules/autocompleter/autocomplete.ts","node_modules/rbush/rbush.min.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","index.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  preventDefault() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*=} opt_target Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean=} opt_managed Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\nimport {toString} from '../transform.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let div;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!div) {\n          div = document.createElement('div');\n          div.innerHTML = 'M';\n          div.style.margin = '0 !important';\n          div.style.padding = '0 !important';\n          div.style.position = 'absolute !important';\n          div.style.left = '-99999px !important';\n        }\n        div.style.font = fontSpec;\n        document.body.appendChild(div);\n        height = div.offsetHeight;\n        document.body.removeChild(div);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nlet createTransformStringCanvas = null;\n\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return toString(transform);\n  } else {\n    if (!createTransformStringCanvas) {\n      createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n    }\n    createTransformStringCanvas.style.transform = toString(transform);\n    return createTransformStringCanvas.style.transform;\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*=} opt_element Element.\n   * @param {number=} opt_index The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>=} opt_array Array.\n   * @param {Options=} opt_options Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    this.originalEvent.preventDefault();\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    this.originalEvent.stopPropagation();\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends EventTarget {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.propagationStopped &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    if (\n      !this.originalPointerMoveEvent_ ||\n      this.originalPointerMoveEvent_.defaultPrevented\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions=} opt_options View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * Padding (in css pixels).\n     * If the map viewport is partially covered with other content (overlays) along\n     * its edges, this setting allows to shift the center of the viewport away from that\n     * content. The order of the values in the array is top, right, bottom, left.\n     * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n     * @type {Array<number>|undefined}\n     * @api\n     */\n    this.padding = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view shoud allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions=} opt_options Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n   * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number=} opt_duration The animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {\n  DEVICE_PIXEL_RATIO,\n  IMAGE_DECODE,\n  PASSIVE_EVENT_LISTENERS,\n} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    return this.getTargetElement()\n      ? this.getTargetElement().ownerDocument\n      : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target =\n        'host' in rootNode // ShadowRoot\n          ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(\n              originalEvent.clientX,\n              originalEvent.clientY\n            )\n          : /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget =\n            !IMAGE_DECODE && Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      const computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth']),\n      ]);\n    }\n\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options=} opt_options Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options=} opt_options Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options=} opt_options Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n   * @param {boolean=} opt_renderEdges Render reprojection edges.\n   * @param {object=} opt_contextOptions Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*=} opt_options Options (reserverd for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number=} opt_direction If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(\n            tileCoordKey\n          ));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(\n          projection\n        );\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST', // see spec §10\n};\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  opt_extent,\n  opt_matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {appendParams} from '../uri.js';\nimport {assign} from '../obj.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {find, findIndex, includes} from '../array.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined\n        ? /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding)\n        : WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n      assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == WMTSRequestEncoding.KVP\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this\n      .tileGrid);\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': tileCoord[2],\n          };\n          assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == WMTSRequestEncoding.KVP) {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function (elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        const tileMatrixSet = find(tileMatrixSets, function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        } else {\n          return supportedCRS == config['projection'];\n        }\n      });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function (elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function (elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  const wrapX = false;\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // substract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = find(\n      matrixSetObj.TileMatrix,\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchOriginXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n\n  const extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (projection.getExtent() === null) {\n    projection.setExtent(extent);\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {createTransformString} from '../../render/canvas.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n        }\n        this.renderedTiles.push(tile);\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>=} opt_geometries Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = null;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.defaultFeatureProjection = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.TEXT;\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport TextFeature from './TextFeature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, import(\"../geom/GeometryLayout.js\").default)}\n */\nconst GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon,\n};\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY';\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z';\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M';\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM';\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6,\n};\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst WKTGeometryType = {};\nfor (const type in GeometryType) {\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n\n/**\n * Class to tokenize a WKT string.\n */\nclass Lexer {\n  /**\n   * @param {string} wkt WKT string.\n   */\n  constructor(wkt) {\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = -1;\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n  isAlpha_(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');\n  }\n\n  /**\n   * @param {string} c Character.\n   * @param {boolean=} opt_decimal Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n  isNumeric_(c, opt_decimal) {\n    const decimal = opt_decimal !== undefined ? opt_decimal : false;\n    return (c >= '0' && c <= '9') || (c == '.' && !decimal);\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n  isWhiteSpace_(c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n  }\n\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n  nextChar_() {\n    return this.wkt.charAt(++this.index_);\n  }\n\n  /**\n   * Fetch and return the next token.\n   * @return {!Token} Next string token.\n   */\n  nextToken() {\n    const c = this.nextChar_();\n    const position = this.index_;\n    /** @type {number|string} */\n    let value = c;\n    let type;\n\n    if (c == '(') {\n      type = TokenType.LEFT_PAREN;\n    } else if (c == ',') {\n      type = TokenType.COMMA;\n    } else if (c == ')') {\n      type = TokenType.RIGHT_PAREN;\n    } else if (this.isNumeric_(c) || c == '-') {\n      type = TokenType.NUMBER;\n      value = this.readNumber_();\n    } else if (this.isAlpha_(c)) {\n      type = TokenType.TEXT;\n      value = this.readText_();\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken();\n    } else if (c === '') {\n      type = TokenType.EOF;\n    } else {\n      throw new Error('Unexpected character: ' + c);\n    }\n\n    return {position: position, value: value, type: type};\n  }\n\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n  readNumber_() {\n    let c;\n    const index = this.index_;\n    let decimal = false;\n    let scientificNotation = false;\n    do {\n      if (c == '.') {\n        decimal = true;\n      } else if (c == 'e' || c == 'E') {\n        scientificNotation = true;\n      }\n      c = this.nextChar_();\n    } while (\n      this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      (!scientificNotation && (c == 'e' || c == 'E')) ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      (scientificNotation && (c == '-' || c == '+'))\n    );\n    return parseFloat(this.wkt.substring(index, this.index_--));\n  }\n\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n  readText_() {\n    let c;\n    const index = this.index_;\n    do {\n      c = this.nextChar_();\n    } while (this.isAlpha_(c));\n    return this.wkt.substring(index, this.index_--).toUpperCase();\n  }\n}\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nclass Parser {\n  /**\n   * @param {Lexer} lexer The lexer.\n   */\n  constructor(lexer) {\n    /**\n     * @type {Lexer}\n     * @private\n     */\n    this.lexer_ = lexer;\n\n    /**\n     * @type {Token}\n     * @private\n     */\n    this.token_;\n\n    /**\n     * @type {import(\"../geom/GeometryLayout.js\").default}\n     * @private\n     */\n    this.layout_ = GeometryLayout.XY;\n  }\n\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n  consume_() {\n    this.token_ = this.lexer_.nextToken();\n  }\n\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  isTokenType(type) {\n    const isMatch = this.token_.type == type;\n    return isMatch;\n  }\n\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  match(type) {\n    const isMatch = this.isTokenType(type);\n    if (isMatch) {\n      this.consume_();\n    }\n    return isMatch;\n  }\n\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   */\n  parse() {\n    this.consume_();\n    const geometry = this.parseGeometry_();\n    return geometry;\n  }\n\n  /**\n   * Try to parse the dimensional info.\n   * @return {import(\"../geom/GeometryLayout.js\").default} The layout.\n   * @private\n   */\n  parseGeometryLayout_() {\n    let layout = GeometryLayout.XY;\n    const dimToken = this.token_;\n    if (this.isTokenType(TokenType.TEXT)) {\n      const dimInfo = dimToken.value;\n      if (dimInfo === Z) {\n        layout = GeometryLayout.XYZ;\n      } else if (dimInfo === M) {\n        layout = GeometryLayout.XYM;\n      } else if (dimInfo === ZM) {\n        layout = GeometryLayout.XYZM;\n      }\n      if (layout !== GeometryLayout.XY) {\n        this.consume_();\n      }\n    }\n    return layout;\n  }\n\n  /**\n   * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n   * @private\n   */\n  parseGeometryCollectionText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const geometries = [];\n      do {\n        geometries.push(this.parseGeometry_());\n      } while (this.match(TokenType.COMMA));\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return geometries;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} All values in a point.\n   * @private\n   */\n  parsePointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePoint_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return null;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a linestring.\n   * @private\n   */\n  parseLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePointList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n   * @private\n   */\n  parsePolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a multipoint.\n   * @private\n   */\n  parseMultiPointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      let coordinates;\n      if (this.token_.type == TokenType.LEFT_PAREN) {\n        coordinates = this.parsePointTextList_();\n      } else {\n        coordinates = this.parsePointList_();\n      }\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} All linestring points\n   *                                          in a multilinestring.\n   * @private\n   */\n  parseMultiLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n   * @private\n   */\n  parseMultiPolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePolygonTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<number>} A point.\n   * @private\n   */\n  parsePoint_() {\n    const coordinates = [];\n    const dimensions = this.layout_.length;\n    for (let i = 0; i < dimensions; ++i) {\n      const token = this.token_;\n      if (this.match(TokenType.NUMBER)) {\n        coordinates.push(/** @type {number} */ (token.value));\n      } else {\n        break;\n      }\n    }\n    if (coordinates.length == dimensions) {\n      return coordinates;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointList_() {\n    const coordinates = [this.parsePoint_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePoint_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointTextList_() {\n    const coordinates = [this.parsePointText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePointText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} An array of points.\n   * @private\n   */\n  parseLineStringTextList_() {\n    const coordinates = [this.parseLineStringText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parseLineStringText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n   * @private\n   */\n  parsePolygonTextList_() {\n    const coordinates = [this.parsePolygonText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePolygonText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n  isEmptyGeometry_() {\n    const isEmpty =\n      this.isTokenType(TokenType.TEXT) && this.token_.value == EMPTY;\n    if (isEmpty) {\n      this.consume_();\n    }\n    return isEmpty;\n  }\n\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n  formatErrorMessage_() {\n    return (\n      'Unexpected `' +\n      this.token_.value +\n      '` at position ' +\n      this.token_.position +\n      ' in `' +\n      this.lexer_.wkt +\n      '`'\n    );\n  }\n\n  /**\n   * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n   * @private\n   */\n  parseGeometry_() {\n    const token = this.token_;\n    if (this.match(TokenType.TEXT)) {\n      const geomType = token.value;\n      this.layout_ = this.parseGeometryLayout_();\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        const geometries = this.parseGeometryCollectionText_();\n        return new GeometryCollection(geometries);\n      } else {\n        const ctor = GeometryConstructor[geomType];\n        if (!ctor) {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n\n        let coordinates;\n        switch (geomType) {\n          case 'POINT': {\n            coordinates = this.parsePointText_();\n            break;\n          }\n          case 'LINESTRING': {\n            coordinates = this.parseLineStringText_();\n            break;\n          }\n          case 'POLYGON': {\n            coordinates = this.parsePolygonText_();\n            break;\n          }\n          case 'MULTIPOINT': {\n            coordinates = this.parseMultiPointText_();\n            break;\n          }\n          case 'MULTILINESTRING': {\n            coordinates = this.parseMultiLineStringText_();\n            break;\n          }\n          case 'MULTIPOLYGON': {\n            coordinates = this.parseMultiPolygonText_();\n            break;\n          }\n          default: {\n            throw new Error('Invalid geometry type: ' + geomType);\n          }\n        }\n\n        if (!coordinates) {\n          if (ctor === GeometryConstructor['POINT']) {\n            coordinates = [NaN, NaN];\n          } else {\n            coordinates = [];\n          }\n        }\n        return new ctor(coordinates, this.layout_);\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n}\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nclass WKT extends TextFeature {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ =\n      options.splitCollection !== undefined ? options.splitCollection : false;\n  }\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default|undefined}\n   *     The geometry created.\n   * @private\n   */\n  parse_(wkt) {\n    const lexer = new Lexer(wkt);\n    const parser = new Parser(lexer);\n    return parser.parse();\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    const geom = this.readGeometryFromText(text, opt_options);\n    if (geom) {\n      const feature = new Feature();\n      feature.setGeometry(geom);\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    let geometries = [];\n    const geometry = this.readGeometryFromText(text, opt_options);\n    if (\n      this.splitCollection_ &&\n      geometry.getType() == GeometryType.GEOMETRY_COLLECTION\n    ) {\n      geometries = /** @type {GeometryCollection} */ (geometry).getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    const features = [];\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    const geometry = this.parse_(text);\n    if (geometry) {\n      return transformGeometryWithOptions(geometry, false, opt_options);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    }\n    return '';\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], opt_options);\n    }\n    const geometries = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    const collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, opt_options);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    return encode(transformGeometryWithOptions(geometry, true, opt_options));\n  }\n}\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = [];\n  const components = geom.getPoints();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = [];\n  const geoms = geom.getGeometries();\n  for (let i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  const array = [];\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = [];\n  const components = geom.getLineStrings();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = [];\n  const rings = geom.getLinearRings();\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = [];\n  const components = geom.getPolygons();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  const layout = geom.getLayout();\n  let dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry,\n};\n\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  let type = geom.getType();\n  const geometryEncoder = GeometryEncoder[type];\n  const enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (typeof (/** @type {?} */ (geom).getFlatCoordinates) === 'function') {\n    const dimInfo = encodeGeometryLayout(\n      /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom)\n    );\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\nexport default WKT;\n"," /*\r\n  * https://github.com/kraaden/autocomplete\r\n  * Copyright (c) 2016 Denys Krasnoshchok\r\n  * MIT License\r\n  */\r\n\r\nexport const enum EventTrigger {\r\n    Keyboard = 0,\r\n    Focus = 1\r\n}\r\n\r\nexport interface AutocompleteItem {\r\n    label?: string;\r\n    group?: string;\r\n}\r\n\r\nexport interface AutocompleteSettings<T extends AutocompleteItem> {\r\n    input: HTMLInputElement;\r\n    render?: (item: T, currentValue: string) => HTMLDivElement | undefined;\r\n    renderGroup?: (name: string, currentValue: string) => HTMLDivElement | undefined;\r\n    className?: string;\r\n    minLength?: number;\r\n    emptyMsg?: string;\r\n    onSelect: (item: T, input: HTMLInputElement) => void;\r\n    /**\r\n     * Show autocomplete on focus event. Focus event will ignore the `minLength` property and will always call `fetch`.\r\n     */\r\n    showOnFocus?: boolean;\r\n    fetch: (text: string, update: (items: T[] | false) => void, trigger: EventTrigger) => void;\r\n    debounceWaitMs?: number;\r\n    /**\r\n     * Callback for additional autocomplete customization\r\n     * @param {HTMLInputElement} input - input box associated with autocomplete\r\n     * @param {ClientRect | DOMRect} inputRect - size of the input box and its position relative to the viewport\r\n     * @param {HTMLDivElement} container - container with suggestions\r\n     * @param {number} maxHeight - max height that can be used by autocomplete\r\n     */\r\n    customize?: (input: HTMLInputElement, inputRect: ClientRect | DOMRect, container: HTMLDivElement, maxHeight: number) => void;\r\n    /**\r\n     * Prevents automatic form submit when ENTER is pressed\r\n     */\r\n    preventSubmit?: boolean;\r\n    /**\r\n     * Prevents the first item in the list from being selected automatically. This option allows you\r\n     * to submit a custom text by pressing ENTER even when autocomplete is displayed.\r\n     */\r\n    disableAutoSelect?: boolean;\r\n}\r\n\r\nexport interface AutocompleteResult {\r\n    destroy: () => void;\r\n}\r\n\r\nconst enum Keys {\r\n    Enter = 13,\r\n    Esc = 27,\r\n    Up = 38,\r\n    Down = 40,\r\n    Left = 37,\r\n    Right = 39,\r\n    Shift = 16,\r\n    Ctrl = 17,\r\n    Alt = 18,\r\n    CapsLock = 20,\r\n    WindowsKey = 91,\r\n    Tab = 9,\r\n    F1 = 112,\r\n    F12 = 123\r\n}\r\n\r\nexport default function autocomplete<T extends AutocompleteItem>(settings: AutocompleteSettings<T>): AutocompleteResult {\r\n\r\n    // just an alias to minimize JS file size\r\n    const doc = document;\r\n\r\n    const container: HTMLDivElement = doc.createElement(\"div\");\r\n    const containerStyle = container.style;\r\n    const userAgent = navigator.userAgent;\r\n    const mobileFirefox = userAgent.indexOf(\"Firefox\") !== -1 && userAgent.indexOf(\"Mobile\") !== -1;\r\n    const debounceWaitMs = settings.debounceWaitMs || 0;\r\n    const preventSubmit = settings.preventSubmit || false;\r\n    const disableAutoSelect = settings.disableAutoSelect || false;\r\n    \r\n    // 'keyup' event will not be fired on Mobile Firefox, so we have to use 'input' event instead\r\n    const keyUpEventName = mobileFirefox ? \"input\" : \"keyup\";\r\n    \r\n    let items: T[] = [];\r\n    let inputValue = \"\";\r\n    let minLen = 2;\r\n    const showOnFocus = settings.showOnFocus;\r\n    let selected: T | undefined;\r\n    let keypressCounter = 0;\r\n    let debounceTimer : number | undefined;\r\n\r\n    if (settings.minLength !== undefined) {\r\n        minLen = settings.minLength;\r\n    }\r\n\r\n    if (!settings.input) {\r\n        throw new Error(\"input undefined\");\r\n    }\r\n\r\n    const input: HTMLInputElement = settings.input;\r\n\r\n    container.className = \"autocomplete \" + (settings.className || \"\");\r\n\r\n    // IOS implementation for fixed positioning has many bugs, so we will use absolute positioning\r\n    containerStyle.position = \"absolute\";\r\n\r\n    /**\r\n     * Detach the container from DOM\r\n     */\r\n    function detach(): void {\r\n        const parent = container.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(container);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear debouncing timer if assigned\r\n     */\r\n    function clearDebounceTimer(): void {\r\n        if (debounceTimer) {\r\n            window.clearTimeout(debounceTimer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attach the container to DOM\r\n     */\r\n    function attach(): void {\r\n        if (!container.parentNode) {\r\n            doc.body.appendChild(container);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if container for autocomplete is displayed\r\n     */\r\n    function containerDisplayed(): boolean {\r\n        return !!container.parentNode;\r\n    }\r\n\r\n    /**\r\n     * Clear autocomplete state and hide container\r\n     */\r\n    function clear(): void {\r\n        // prevent the update call if there are pending AJAX requests\r\n        keypressCounter++;\r\n        \r\n        items = [];\r\n        inputValue = \"\";\r\n        selected = undefined;\r\n        detach();\r\n    }\r\n\r\n    /**\r\n     * Update autocomplete position\r\n     */\r\n    function updatePosition(): void {\r\n        if (!containerDisplayed()) {\r\n            return;\r\n        }\r\n\r\n        containerStyle.height = \"auto\";\r\n        containerStyle.width = input.offsetWidth + \"px\";\r\n\r\n        let maxHeight = 0;\r\n        let inputRect: ClientRect | DOMRect | undefined;\r\n\r\n        function calc() {\r\n            const docEl = doc.documentElement as HTMLElement;\r\n            const clientTop = docEl.clientTop || doc.body.clientTop || 0;\r\n            const clientLeft = docEl.clientLeft || doc.body.clientLeft || 0;\r\n            const scrollTop = window.pageYOffset || docEl.scrollTop;\r\n            const scrollLeft = window.pageXOffset || docEl.scrollLeft;\r\n\r\n            inputRect = input.getBoundingClientRect();\r\n        \r\n            const top = inputRect.top + input.offsetHeight + scrollTop - clientTop;\r\n            const left = inputRect.left + scrollLeft - clientLeft;\r\n    \r\n            containerStyle.top = top + \"px\";\r\n            containerStyle.left = left + \"px\";\r\n    \r\n            maxHeight = window.innerHeight - (inputRect.top + input.offsetHeight);\r\n    \r\n            if (maxHeight < 0) {\r\n                maxHeight = 0;\r\n            }\r\n    \r\n            containerStyle.top = top + \"px\";\r\n            containerStyle.bottom = \"\";\r\n            containerStyle.left = left + \"px\";\r\n            containerStyle.maxHeight = maxHeight + \"px\";\r\n        }\r\n\r\n        // the calc method must be called twice, otherwise the calculation may be wrong on resize event (chrome browser)\r\n        calc();\r\n        calc();\r\n\r\n        if (settings.customize && inputRect) {\r\n            settings.customize(input, inputRect, container, maxHeight);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Redraw the autocomplete div element with suggestions\r\n     */\r\n    function update(): void {\r\n        \r\n        // delete all children from autocomplete DOM container\r\n        while (container.firstChild) {\r\n            container.removeChild(container.firstChild);\r\n        }\r\n\r\n        // function for rendering autocomplete suggestions\r\n        let render = function(item: T, currentValue: string): HTMLDivElement | undefined {\r\n            const itemElement = doc.createElement(\"div\");\r\n            itemElement.textContent = item.label || \"\";\r\n            return itemElement;\r\n        };\r\n        if (settings.render) {\r\n            render = settings.render;\r\n        }\r\n\r\n        // function to render autocomplete groups\r\n        let renderGroup = function(groupName: string, currentValue: string): HTMLDivElement | undefined {\r\n            const groupDiv = doc.createElement(\"div\");\r\n            groupDiv.textContent = groupName;\r\n            return groupDiv;\r\n        };\r\n        if (settings.renderGroup) {\r\n            renderGroup = settings.renderGroup;\r\n        }\r\n\r\n        const fragment = doc.createDocumentFragment();\r\n        let prevGroup = \"#9?$\";\r\n\r\n        items.forEach(function(item: T): void {\r\n            if (item.group && item.group !== prevGroup) {\r\n                prevGroup = item.group;\r\n                const groupDiv = renderGroup(item.group, inputValue);\r\n                if (groupDiv) {\r\n                    groupDiv.className += \" group\";\r\n                    fragment.appendChild(groupDiv);\r\n                }\r\n            }\r\n            const div = render(item, inputValue);\r\n            if (div) {\r\n                div.addEventListener(\"click\", function(ev: MouseEvent): void {\r\n                    settings.onSelect(item, input);\r\n                    clear();\r\n                    ev.preventDefault();\r\n                    ev.stopPropagation();\r\n                });\r\n                if (item === selected) {\r\n                    div.className += \" selected\";\r\n                }\r\n                fragment.appendChild(div);\r\n            }\r\n        });\r\n        container.appendChild(fragment);\r\n        if (items.length < 1) {\r\n            if (settings.emptyMsg) {\r\n                const empty = doc.createElement(\"div\");\r\n                empty.className = \"empty\";\r\n                empty.textContent = settings.emptyMsg;\r\n                container.appendChild(empty);\r\n            } else {\r\n                clear();\r\n                return;\r\n            }\r\n        }\r\n\r\n        attach();\r\n        updatePosition();\r\n\r\n        updateScroll();\r\n    }\r\n\r\n    function updateIfDisplayed(): void {\r\n        if (containerDisplayed()) {\r\n            update();\r\n        }\r\n    }\r\n\r\n    function resizeEventHandler(): void {\r\n        updateIfDisplayed();\r\n    }\r\n\r\n    function scrollEventHandler(e: Event): void {\r\n        if (e.target !== container) {\r\n            updateIfDisplayed();\r\n        } else {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    function keyupEventHandler(ev: KeyboardEvent): void {\r\n        const keyCode = ev.which || ev.keyCode || 0;\r\n\r\n        const ignore = [Keys.Up, Keys.Enter, Keys.Esc, Keys.Right, Keys.Left, Keys.Shift, Keys.Ctrl, Keys.Alt, Keys.CapsLock, Keys.WindowsKey, Keys.Tab];\r\n        for (const key of ignore) {\r\n            if (keyCode === key) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (keyCode >= Keys.F1 && keyCode <= Keys.F12) {\r\n            return;\r\n        }\r\n\r\n        // the down key is used to open autocomplete\r\n        if (keyCode === Keys.Down && containerDisplayed()) {\r\n            return;\r\n        }\r\n\r\n        startFetch(EventTrigger.Keyboard);\r\n    }\r\n\r\n    /**\r\n     * Automatically move scroll bar if selected item is not visible\r\n     */\r\n    function updateScroll(): void {\r\n        const elements = container.getElementsByClassName(\"selected\");\r\n        if (elements.length > 0) {\r\n            let element = elements[0] as HTMLDivElement;\r\n            \r\n            // make group visible\r\n            const previous = element.previousElementSibling as HTMLDivElement;\r\n            if (previous && previous.className.indexOf(\"group\") !== -1 && !previous.previousElementSibling) {\r\n                element = previous;\r\n            }\r\n\r\n            if (element.offsetTop < container.scrollTop) {\r\n                container.scrollTop = element.offsetTop;\r\n            } else {\r\n                const selectBottom = element.offsetTop + element.offsetHeight;\r\n                const containerBottom = container.scrollTop + container.offsetHeight;\r\n                if (selectBottom > containerBottom) {\r\n                    container.scrollTop += selectBottom - containerBottom;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select the previous item in suggestions\r\n     */\r\n    function selectPrev(): void {\r\n        if (items.length < 1) {\r\n            selected = undefined;\r\n        } else {\r\n            if (selected === items[0]) {\r\n                selected = items[items.length - 1];\r\n            } else {\r\n                for (let i = items.length - 1; i > 0; i--) {\r\n                    if (selected === items[i] || i === 1) {\r\n                        selected = items[i - 1];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select the next item in suggestions\r\n     */\r\n    function selectNext(): void {\r\n        if (items.length < 1) {\r\n            selected = undefined;\r\n        }\r\n        if (!selected || selected === items[items.length - 1]) {\r\n            selected = items[0];\r\n            return;\r\n        }\r\n        for (let i = 0; i < (items.length - 1); i++) {\r\n            if (selected === items[i]) {\r\n                selected = items[i + 1];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function keydownEventHandler(ev: KeyboardEvent): void {\r\n        const keyCode = ev.which || ev.keyCode || 0;\r\n\r\n        if (keyCode === Keys.Up || keyCode === Keys.Down || keyCode === Keys.Esc) {\r\n            const containerIsDisplayed = containerDisplayed();\r\n\r\n            if (keyCode === Keys.Esc) {\r\n                clear();\r\n            } else {\r\n                if (!containerIsDisplayed || items.length < 1) {\r\n                    return;\r\n                }\r\n                keyCode === Keys.Up\r\n                    ? selectPrev()\r\n                    : selectNext();\r\n                update();\r\n            }\r\n\r\n            ev.preventDefault();\r\n            if (containerIsDisplayed) {\r\n                ev.stopPropagation();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (keyCode === Keys.Enter) {\r\n            if (selected) {\r\n                settings.onSelect(selected, input);\r\n                clear();\r\n            }\r\n    \r\n            if (preventSubmit) {\r\n                ev.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    function focusEventHandler(): void {\r\n        if (showOnFocus) {\r\n            startFetch(EventTrigger.Focus);\r\n        }\r\n    }\r\n\r\n    function startFetch(trigger: EventTrigger) {\r\n        // If multiple keys were pressed, before we get an update from server,\r\n        // this may cause redrawing autocomplete multiple times after the last key was pressed.\r\n        // To avoid this, the number of times keyboard was pressed will be saved and checked before redraw.\r\n        const savedKeypressCounter = ++keypressCounter;\r\n\r\n        const val = input.value;\r\n        if (val.length >= minLen || trigger === EventTrigger.Focus) {\r\n            clearDebounceTimer();\r\n            debounceTimer = window.setTimeout(function(): void {\r\n                settings.fetch(val, function(elements: T[] | false): void {\r\n                    if (keypressCounter === savedKeypressCounter && elements) {\r\n                        items = elements;\r\n                        inputValue = val;\r\n                        selected = (items.length < 1 || disableAutoSelect) ? undefined : items[0];\r\n                        update();\r\n                    }\r\n                }, trigger);\r\n            }, trigger === EventTrigger.Keyboard ? debounceWaitMs : 0);\r\n        } else {\r\n            clear();\r\n        }\r\n    }\r\n\r\n    function blurEventHandler(): void {\r\n        // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM\r\n        setTimeout(() => {\r\n            if (doc.activeElement !== input) {\r\n                clear();\r\n            }\r\n        }, 200);\r\n    }\r\n\r\n    /**\r\n     * Fixes #26: on long clicks focus will be lost and onSelect method will not be called\r\n     */\r\n    container.addEventListener(\"mousedown\", function(evt: Event) {\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n    });\r\n\r\n    /**\r\n     * Fixes #30: autocomplete closes when scrollbar is clicked in IE\r\n     * See: https://stackoverflow.com/a/9210267/13172349\r\n     */\r\n    container.addEventListener(\"focus\", () => input.focus());\r\n\r\n    /**\r\n     * This function will remove DOM elements and clear event handlers\r\n     */\r\n    function destroy(): void {\r\n        input.removeEventListener(\"focus\", focusEventHandler);\r\n        input.removeEventListener(\"keydown\", keydownEventHandler);\r\n        input.removeEventListener(keyUpEventName, keyupEventHandler as EventListenerOrEventListenerObject);\r\n        input.removeEventListener(\"blur\", blurEventHandler);\r\n        window.removeEventListener(\"resize\", resizeEventHandler);\r\n        doc.removeEventListener(\"scroll\", scrollEventHandler, true);\r\n        clearDebounceTimer();\r\n        clear();\r\n    }\r\n\r\n    // setup event handlers\r\n    input.addEventListener(\"keydown\", keydownEventHandler);\r\n    input.addEventListener(keyUpEventName, keyupEventHandler as EventListenerOrEventListenerObject);\r\n    input.addEventListener(\"blur\", blurEventHandler);\r\n    input.addEventListener(\"focus\", focusEventHandler);\r\n    window.addEventListener(\"resize\", resizeEventHandler);\r\n    doc.addEventListener(\"scroll\", scrollEventHandler, true);\r\n\r\n    return {\r\n        destroy\r\n    };\r\n}\r\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /*\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /*\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @returns {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options=} opt_options Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object=} opt_sharedData Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      const geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object=} opt_sharedData Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {*} value\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX\n * @property {number} drawImageY\n * @property {number} drawImageW\n * @property {number} drawImageH\n * @property {number} originX\n * @property {number} originY\n * @property {Array<number>} scale\n * @property {BBox} declutterBox\n * @property {import(\"../../transform.js\").Transform} canvasTransform\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              if (!declutterImageWithText[d]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[d] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[d];\n              delete declutterImageWithText[d];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceet that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number=} opt_renderBuffer Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      const renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          renderBuffer\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ration of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n    const displacement = this.getDisplacement();\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    offset[0] += displacement[0];\n    offset[1] += displacement[1];\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] / 2;\n          const height = size[1] / 2;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              0.5,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  0.5,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  0.5,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] / 2;\n  const height = size[1] / 2;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    0.5,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const canvas = document.createElement('canvas');\n        canvas.width = imgSize[0];\n        canvas.height = imgSize[1];\n        const imgContext = canvas.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        const img = imgContext.canvas;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        const width = imgSize ? imgSize[0] : img.width;\n        const height = imgSize ? imgSize[1] : img.height;\n        const iconContext = createCanvasContext2D(width, height);\n        iconContext.drawImage(img, 0, 0);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            size: image.getSize(),\n            opacity: image.getOpacity(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = Number(style.getZIndex());\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      const geometry = style.getGeometryFunction()(feature);\n      if (geometry && intersects(extent, geometry.getExtent())) {\n        byGeometryType[geometry.getType().replace('Multi', '')].push(\n          geometry,\n          style\n        );\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const index =\n      (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number=} opt_maxEntries Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection and success and failure callbacks as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void=} success Success\n   *      Function called when loading succeeded.\n   * @param {function(): void=} failure Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        if (success !== undefined) {\n          success(features);\n        }\n        source.addFeatures(features);\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>=} opt_features Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options=} opt_options Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray();\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this.loading = this.loader_ !== VOID;\n      }\n    }\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","import 'ol/ol.css'\nimport { Map, View } from 'ol'\nimport WMTSSource from 'ol/source/WMTS'\nimport TileLayer from 'ol/layer/Tile.js'\nimport WMTSTileGrid from 'ol/tilegrid/WMTS.js'\nimport { get as getProjection, fromLonLat } from 'ol/proj'\nimport { getTopLeft, getWidth } from 'ol/extent.js'\nimport { Control } from 'ol/control'\nimport WKT from 'ol/format/WKT'\nimport autocomplete from 'autocompleter'\nimport 'autocompleter/autocomplete.css'\nimport VectorLayer from 'ol/layer/Vector'\nimport { Vector as VectorSource } from 'ol/source'\n\nconst locatieServerUrl = 'https://geodata.nationaalgeoregister.nl/locatieserver/v3'\nconst projection = getProjection('EPSG:3857')\nconst projectionExtent = projection.getExtent()\nconst size = getWidth(projectionExtent) / 256\nconst resolutions = new Array(20)\nconst matrixIds = new Array(20)\n\nfor (var z = 0; z < 20; ++z) {\n  // generate resolutions and matrixIds arrays for this WMTS\n  resolutions[z] = size / Math.pow(2, z)\n  matrixIds[z] = z\n}\n\nconst baseMapLayer = new TileLayer({\n  extent: projectionExtent,\n  source: new WMTSSource({\n    url: 'https://service.pdok.nl/brt/achtergrondkaart/wmts/v2_0',\n    layer: 'grijs',\n    matrixSet: 'EPSG:3857',\n    crossOrigin: 'Anonymous',\n    format: 'image/png',\n    attributions: 'BRT achtergrondkaart: <a href=\"http://www.kadaster.nl\">Kadaster</a>',\n    tileGrid: new WMTSTileGrid({\n      origin: getTopLeft(projectionExtent),\n      resolutions: resolutions,\n      matrixIds: matrixIds\n    }),\n    style: 'default'\n  })\n})\n\nconst vectorSource = new VectorSource()\n\nconst vectorLayer = new VectorLayer({\n  source: vectorSource,\n  declutter: true\n})\n\nconst map = new Map({\n  layers: [\n    baseMapLayer,\n    vectorLayer\n  ],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([5.43, 52.18]),\n    // change zoomlevel, due to the scale dependent layer in WMS service\n    zoom: 8\n  })\n})\n\nvar LocationServerControl = /* @__PURE__ */(function (Control) {\n  function LocationServerControl (optOptions) {\n    var options = optOptions || {}\n    var input = document.createElement('input')\n    input.id = 'input-loc'\n    var element = document.createElement('div')\n    element.className = 'input-loc ol-unselectable ol-control'\n    element.appendChild(input)\n    Control.call(this, {\n      element: element,\n      target: options.target\n    })\n    autocomplete({\n      input: input,\n      debounceWaitMs: 10,\n      showOnFocus: true,\n      fetch: function (text, update) {\n        fetch(`${locatieServerUrl}/suggest?q=${text}`)\n          .then((response) => {\n            return response.json()\n          })\n          .then((data) => {\n            const suggestions = []\n            if (data.response.docs.length > 0) {\n              data.response.docs.forEach(function (item) {\n                const name = item.weergavenaam\n                const id = item.id\n                suggestions.push({ label: name, value: id })\n              })\n              update(suggestions)\n            }\n          })\n      },\n      onSelect: function (item, input) {\n        input.value = item.label\n        const id = item.value\n        fetch(`${locatieServerUrl}/lookup?id=${id}&fl=id,geometrie_ll`)\n          .then((response) => {\n            return response.json()\n          })\n          .then((data) => {\n            const wktLoc = data.response.docs[0].geometrie_ll\n            const format = new WKT()\n            const feature = format.readFeature(wktLoc, {\n              dataProjection: 'EPSG:4326',\n              featureProjection: 'EPSG:3857'\n            })\n            vectorSource.clear()\n            vectorSource.addFeature(feature)\n            const ext = feature.getGeometry().getExtent()\n            map.getView().fit(ext, {\n              // maxZoom: 20,\n              minResolution: 0.21,\n              duration: 500\n            })\n          })\n      }\n    })\n  }\n  if (Control) LocationServerControl.__proto__ = Control // eslint-disable-line no-proto\n  LocationServerControl.prototype = Object.create(Control && Control.prototype)\n  LocationServerControl.prototype.constructor = LocationServerControl\n  return LocationServerControl\n}(Control))\n\nmap.addControl(new LocationServerControl())\n"],"names":["$1386f4ed5b3d2a4b$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$16831c8b3cdccec7$export$8eda8fbd1364c8a1","a","b","$16831c8b3cdccec7$export$45934da9231b7323","arr","target","direction","n","length","i","$16831c8b3cdccec7$export$1f4f991ce94838ce","begin","end","tmp","$16831c8b3cdccec7$export$46e35401bc090c62","data","extension","Array","isArray","$16831c8b3cdccec7$export$7ad150f61db3b289","func","value","$16831c8b3cdccec7$export$bcc761834e33d339","arr1","arr2","len1","$16831c8b3cdccec7$export$4d0d05f1b8a16b84","index","every","el","idx","$20af65f7a38205f7$export$ad8dd69aa6772cd0","$20af65f7a38205f7$export$5c50afa32081505e","$20af65f7a38205f7$export$3850addf0fb4e6a7","$b1e57fdd8dde574a$export$18e1b4ff5b3c2297","Error","$b1e57fdd8dde574a$var$uidCounter_","$b1e57fdd8dde574a$export$604e9536b9e0488a","obj","ol_uid","String","$9a566a9848e727af$export$9099ad97b570f7c","_super","AssertionError","code","_this","message","split","call","name","$9a566a9848e727af$var$__extends","$20a6d17585e78d64$export$b8795f4f643ce74f","assertion","errorCode","$9a566a9848e727af$exports","default","$ffc5f3d579aca584$export$77f8d2fc923b14e3","transform","c","d","e","f","$ffc5f3d579aca584$export$6af9bbf310c9e4bf","coordinate","x","y","$ffc5f3d579aca584$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$ffc5f3d579aca584$export$6e6aac0f60e83c70","source","mat","det","$ffc5f3d579aca584$export$47bee913e0e80eb4","join","$ecbf3a0b36c7b4ac$export$9099ad97b570f7c","$92fe712ceb0b4cf4$export$9099ad97b570f7c","$d333a56ccd100cfd$export$a7ecbd362d65c1fe","coordinates","extent","$d333a56ccd100cfd$export$dbb3d72606cdc11","ii","$d333a56ccd100cfd$export$2852acc8f8b94686","$d333a56ccd100cfd$export$14e1765886db335a","opt_extent","$d333a56ccd100cfd$export$d6a0542127b96c83","slice","$d333a56ccd100cfd$export$c7d6a927f416dd39","dx","dy","$d333a56ccd100cfd$export$c422a9fcb5f1ee5c","$d333a56ccd100cfd$export$cc70e7e516e4370f","$d333a56ccd100cfd$export$4f55e2d709659e7b","extent1","extent2","$d333a56ccd100cfd$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$d333a56ccd100cfd$export$ea8082d0226d35a5","$d333a56ccd100cfd$export$80741250c74fd4fa","$d333a56ccd100cfd$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$d333a56ccd100cfd$export$4b116deb3079b147","$d333a56ccd100cfd$export$bcc761834e33d339","$d333a56ccd100cfd$export$46e35401bc090c62","$d333a56ccd100cfd$export$bfc2e43ae5c3c00c","$d333a56ccd100cfd$export$8696fee511ea7c7a","min","max","$d333a56ccd100cfd$export$c26f7b9c5adc34b4","callback","val","$d333a56ccd100cfd$export$3932426cd8118930","$d333a56ccd100cfd$export$4e2fc25ce97f3583","$d333a56ccd100cfd$export$35aedeaeee8be6cd","$d333a56ccd100cfd$export$5100f0815ea32995","$d333a56ccd100cfd$export$ab4e37d31d15614d","area","$d333a56ccd100cfd$export$988399e568471db1","$d333a56ccd100cfd$export$3dc3550566517965","$d333a56ccd100cfd$export$e178c8044d3d0a05","$d333a56ccd100cfd$export$339e303bf205caae","$d333a56ccd100cfd$export$38622892ed79bdc7","corner","$d333a56ccd100cfd$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$d333a56ccd100cfd$export$c491031eb9adcc3a","intersection","$d333a56ccd100cfd$export$c3bd2c3b798b0350","$d333a56ccd100cfd$export$76e02248c0889c3e","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$d333a56ccd100cfd$var$_boundingExtentXYs","$11d79372009851c4$export$4b8705656de00c72","$11d79372009851c4$export$4a376e0f60d976ee","cosh","exp","$11d79372009851c4$export$e08236045caaa3e1","log2","log","LOG2E","$11d79372009851c4$export$fd0b1e5ac4df516c","t","$11d79372009851c4$export$8b6706701cd75ea9","$11d79372009851c4$export$11468133b1231643","angleInRadians","PI","$11d79372009851c4$export$4fc80c88d72f096","angleInDegrees","$11d79372009851c4$export$3334706ffb3dccb1","r","$11d79372009851c4$export$45ca8e7f50ccf2e0","$24f1b8341536f1fa$var$HEX_COLOR_RE_","$24f1b8341536f1fa$var$NAMED_COLOR_RE_","$24f1b8341536f1fa$export$9fe004474d6f7f65","color","$24f1b8341536f1fa$export$47bee913e0e80eb4","$24f1b8341536f1fa$var$fromNamed","document","createElement","style","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$24f1b8341536f1fa$export$21528ce64591bf2","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","indexOf","$24f1b8341536f1fa$export$2e33abec8aecd572","map","Number","$24f1b8341536f1fa$var$fromStringInternal_","$24f1b8341536f1fa$export$7266a24c0caa2a8","undefined","$6184461a452b3df9$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","get","src","crossOrigin","$6184461a452b3df9$var$getKey","set","setSize","maxCacheSize","$6184461a452b3df9$export$601b9e2be44c7cb2","$3d78a3a2062be6dd$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","preventDefault","stopPropagation","$727bf6738fdde94d$export$9099ad97b570f7c","$1ed278ebd065aaf6$export$f3c88f5a058bec38","Object","assign","var_sources","TypeError","output","arguments","$1ed278ebd065aaf6$export$97fff7491bd246bd","object","property","$1ed278ebd065aaf6$export$207c30846165e93a","values","$1ed278ebd065aaf6$export$988399e568471db1","$c8df8fba8e9f5c07$var$Target","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$c8df8fba8e9f5c07$var$__extends","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","opt_type","keys","splice","$c8df8fba8e9f5c07$export$9099ad97b570f7c","$00d29b6ace6e67fa$export$9099ad97b570f7c","$46e86cc58f3e2235$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$46e86cc58f3e2235$export$d2df825b2d8bc2ba","$46e86cc58f3e2235$export$6dee5fd4fdf600ff","$11407e360abf7d44$var$Observable","Observable","revision_","$11407e360abf7d44$var$__extends","changed","getRevision","on","len","once","ol_key","un","$11407e360abf7d44$export$21f63b82add5980c","$c8df8fba8e9f5c07$exports","$11407e360abf7d44$export$9099ad97b570f7c","$3e906ccbcd24be16$export$b902cfd711fa7f06","ObjectEvent","oldValue","$3e906ccbcd24be16$var$__extends","$3e906ccbcd24be16$var$BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","$3e906ccbcd24be16$export$b958104f5d8e9527","opt_silent","applyProperties","unset","$11407e360abf7d44$exports","$3e906ccbcd24be16$var$changeEventTypeCache","$3e906ccbcd24be16$export$9099ad97b570f7c","$6755f2167754dc52$export$9099ad97b570f7c","$7436508a8164a9fe$export$9099ad97b570f7c","BaseLayer","options","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$7436508a8164a9fe$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$3e906ccbcd24be16$exports","$b9d5daa9625d320c$export$9099ad97b570f7c","$021387f4bbb0e320$export$9099ad97b570f7c","$d78a3f8d945e8ec2$export$16970faadcd3f29b","layerState","viewState","zoom","$d78a3f8d945e8ec2$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","getChangeEventType","handleSourcePropertyChange_","setSource","$d78a3f8d945e8ec2$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$7436508a8164a9fe$exports","$31a6ec27eb422148$export$bcc761834e33d339","coordinate1","coordinate2","equals","$31a6ec27eb422148$export$d40e2456b1281660","cosAngle","sinAngle","$31a6ec27eb422148$export$5a0d9577a24f3c5b","projection","canWrapX","worldWidth","worldsAway","$31a6ec27eb422148$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$ba9cc254c2e615b0$var$MapRenderer","MapRenderer","map_","$ba9cc254c2e615b0$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","$d78a3f8d945e8ec2$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ba9cc254c2e615b0$var$expireIconCache","$ba9cc254c2e615b0$export$9099ad97b570f7c","$7246c595371691cc$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$7246c595371691cc$var$__extends","$35f3eb34fb00a437$var$fontRegEx","RegExp","$35f3eb34fb00a437$var$fontRegExMatchIndex","$35f3eb34fb00a437$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$f8271a0713c10a69$var$ua","navigator","userAgent","toLowerCase","$f8271a0713c10a69$export$543c908bf17a24fb","$f8271a0713c10a69$export$bccc8605349feea7","$f8271a0713c10a69$export$f16ffc71033a7aaa","$f8271a0713c10a69$export$1940d5d2b4cf824d","devicePixelRatio","$f8271a0713c10a69$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$f8271a0713c10a69$export$9544418e5c6fedfe","Image","decode","$f8271a0713c10a69$export$700ce540937d8c69","passive","defineProperty","window","error","$158e6a8754c20e7c$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","$158e6a8754c20e7c$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$158e6a8754c20e7c$export$47503d53c08beb29","node","$33ba1dda25080cc3$export$6ad0413f8fea3c71","$33ba1dda25080cc3$export$70c5a077e5d6beb9","$33ba1dda25080cc3$export$907cf5cff4a8acb1","console","warn","$33ba1dda25080cc3$var$measureFont","div","$33ba1dda25080cc3$var$measureContext","$33ba1dda25080cc3$export$384c0f09c94ed6cc","$33ba1dda25080cc3$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$33ba1dda25080cc3$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$33ba1dda25080cc3$export$a2bf16790cd8f004","metrics","$33ba1dda25080cc3$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","margin","padding","position","left","offsetHeight","measureText","$33ba1dda25080cc3$export$4b2ca35321179b27","$33ba1dda25080cc3$export$c02f953f8e44cc0a","offsetX","offsetY","translate","rotate","$33ba1dda25080cc3$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","label","$33ba1dda25080cc3$var$executeLabelInstructions","drawImage","restore","$33ba1dda25080cc3$var$createTransformStringCanvas","$2d3983d3c236cd0f$var$CompositeMapRenderer","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$35f3eb34fb00a437$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2d3983d3c236cd0f$var$__extends","event_1","$7246c595371691cc$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$158e6a8754c20e7c$export$439ebc2b0f0ec9f4","display","getDataAtPixel","$ba9cc254c2e615b0$exports","$2d3983d3c236cd0f$export$9099ad97b570f7c","$8c239c70ba402b1b$export$9099ad97b570f7c","$12698a83d5d6619d$var$Property","$12698a83d5d6619d$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$12698a83d5d6619d$var$__extends","$12698a83d5d6619d$var$Collection","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$12698a83d5d6619d$export$9099ad97b570f7c","$78bdbac1eaad4f08$var$Property","$78bdbac1eaad4f08$var$LayerGroup","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$12698a83d5d6619d$exports","setLayers","$78bdbac1eaad4f08$var$__extends","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$78bdbac1eaad4f08$export$9099ad97b570f7c","$5f50aaa354ee43e8$export$9099ad97b570f7c","MapEvent","$5f50aaa354ee43e8$var$__extends","$5cb33e338f86483d$var$MapBrowserEvent","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5cb33e338f86483d$var$__extends","getEventPixel","getCoordinateFromPixel","$5f50aaa354ee43e8$exports","$5cb33e338f86483d$export$9099ad97b570f7c","$1701e629f00eed9c$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$eef913c1b3abba70$export$9099ad97b570f7c","$5ce77a9367e71852$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$5ce77a9367e71852$var$__extends","emulateClick_","pointerEvent","newEvent","$5cb33e338f86483d$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","abs","clientX","clientY","$75da2f64972311f8$export$9099ad97b570f7c","$aa15c1da5ede11e4$export$9099ad97b570f7c","$a5b5f21c6babad23$var$PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$a5b5f21c6babad23$export$9099ad97b570f7c","$7c9022c2746a8240$export$9099ad97b570f7c","$79e77b05f0af3af4$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$79e77b05f0af3af4$var$__extends","added","getTilesLoading","tile","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$79e77b05f0af3af4$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$4d7a66b176a5dddb$export$9099ad97b570f7c","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","$ed930b4d99744cb5$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$ed930b4d99744cb5$export$af68584dedf5e52c","$ed930b4d99744cb5$export$9099ad97b570f7c","$9d93d71f67d1f597$export$9099ad97b570f7c","$e90c70f3094ec23d$export$9099ad97b570f7c","$b3eb9bab7e855649$var$Projection","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","$b3eb9bab7e855649$export$9099ad97b570f7c","$a2e3ad3c6452af0b$export$bb1f4f75177e5528","$a2e3ad3c6452af0b$export$6fd015d56b8406c9","$a2e3ad3c6452af0b$export$64afaa717a0c4932","$a2e3ad3c6452af0b$export$2126dea64bc40b7b","tan","$a2e3ad3c6452af0b$var$EPSG3857Projection","EPSG3857Projection","point","$a2e3ad3c6452af0b$var$__extends","$a2e3ad3c6452af0b$export$850c9b527a5298aa","$a2e3ad3c6452af0b$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$a2e3ad3c6452af0b$export$f361696640082386","atan","$dbcd2854ae42c095$export$6fd015d56b8406c9","$dbcd2854ae42c095$export$af68584dedf5e52c","$dbcd2854ae42c095$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$dbcd2854ae42c095$var$__extends","$dbcd2854ae42c095$export$850c9b527a5298aa","$78eb3a0f9f69d51f$var$cache","$0e52faab48d1c258$var$transforms","$0e52faab48d1c258$export$568ed88074851180","destination","sourceCode","destinationCode","$8adf1144ec7585ad$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$8adf1144ec7585ad$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$257c627c1e280f22$export$3fbbaef54e2e9d28","$257c627c1e280f22$export$678028d364072132","$257c627c1e280f22$export$6308908a0016f099","$78eb3a0f9f69d51f$export$568ed88074851180","$257c627c1e280f22$export$7eb84799c931fe91","projectionLike","replace","$257c627c1e280f22$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$257c627c1e280f22$export$747af4f49bde2f53","vertices","$257c627c1e280f22$export$a42db349809b0c24","projections","$257c627c1e280f22$export$fd4cd3535c7ea97f","$257c627c1e280f22$export$f704437a72056fb8","defaultCode","$257c627c1e280f22$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$0e52faab48d1c258$export$7eb84799c931fe91","$257c627c1e280f22$export$9336879ef6599bf5","$257c627c1e280f22$export$4b169b49e1a4823b","$257c627c1e280f22$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$257c627c1e280f22$var$userProjection","$257c627c1e280f22$export$352fd07bdd93dc1e","$257c627c1e280f22$export$4a182a4d53d7595c","$257c627c1e280f22$export$b5d00774755783fc","destProjection","$257c627c1e280f22$export$a7d473ff80a6a3b","$257c627c1e280f22$export$f87215506b474b9e","$7a79f648aa728795$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$7a79f648aa728795$export$eaafe0fae18e32b1","$0e1a1b60122676ba$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$0e1a1b60122676ba$var$getSmoothClampedResolution","$0e1a1b60122676ba$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$bfacba8d4304d68f$export$e97ec87d2336bd4e","$bfacba8d4304d68f$export$eaafe0fae18e32b1","$69c984769656a840$export$9fbc3b1d6b2da9ec","pow","$69c984769656a840$export$673b9849e2bc032c","$69c984769656a840$export$1b5c1277e30d397d","$69c984769656a840$export$5523e35ab8ae283a","$a2e3ad3c6452af0b$exports","PROJECTIONS","$dbcd2854ae42c095$exports","fromEPSG4326","toEPSG4326","$4d6d0df5f6d473fe$export$9099ad97b570f7c","$38fbdbcddbfb2114$export$92106241c01aa541","opt_dest","dest","$38fbdbcddbfb2114$export$d40e2456b1281660","anchor","anchorX","anchorY","k","$2c40e41d9046f704$var$tmpTransform","$2c40e41d9046f704$var$Geometry","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$2c40e41d9046f704$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$d333a56ccd100cfd$export$d1e01ccfd06bf8ee","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$2c40e41d9046f704$export$9099ad97b570f7c","$fbc4cbc2dbecf2fd$var$SimpleGeometry","SimpleGeometry","layout","$fbc4cbc2dbecf2fd$var$__extends","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$fbc4cbc2dbecf2fd$export$2a65008b73824080","setCoordinates","opt_layout","setLayout","nesting","$fbc4cbc2dbecf2fd$var$getLayoutForStride","$38fbdbcddbfb2114$export$8f869025bba9609b","$38fbdbcddbfb2114$export$41b0d7466cde8385","$2c40e41d9046f704$exports","$fbc4cbc2dbecf2fd$export$36912b83e488cd77","simpleGeometry","$fbc4cbc2dbecf2fd$export$9099ad97b570f7c","$1eeaf5ba3166ef8e$var$assignClosest","offset1","offset2","$1eeaf5ba3166ef8e$export$acf7548d1f0e8581","squaredDelta","$1eeaf5ba3166ef8e$export$ba38095f6bb45df2","ends","$1eeaf5ba3166ef8e$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$1eeaf5ba3166ef8e$export$3dd3914e22f9012e","$341fcb0cdbf81912$export$e175f505890ac90f","$341fcb0cdbf81912$export$ab1a51db55485752","coordinatess","opt_ends","jj","$54c380e0fb260ccc$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$54c380e0fb260ccc$export$ade7859c9eb393ec","simplifiedEnds","$54c380e0fb260ccc$export$383ea8a1f2974dfb","$54c380e0fb260ccc$export$e29de4fdb2175738","$54c380e0fb260ccc$export$1df19a1eb5514c2f","$ebfee1857bdd365b$export$92f32d891164b0ac","opt_coordinates","$ebfee1857bdd365b$export$d82a8a3167f968d","opt_coordinatess","$ebfee1857bdd365b$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$d21f3a0ce2fde0f1$export$9bf2059fd656d5e9","twiceArea","$d21f3a0ce2fde0f1$export$99cb92d00fd73c87","$2eba2434999e946d$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$2eba2434999e946d$var$__extends","getArea","$fbc4cbc2dbecf2fd$exports","$d78f061ab8e6937f$var$Point","Point","$d78f061ab8e6937f$var$__extends","$341fcb0cdbf81912$export$a53e62528b652807","$d78f061ab8e6937f$export$9099ad97b570f7c","$3c65f17c9f70f766$export$f7b55b637f92fd7","$3c65f17c9f70f766$export$e2ed757909b25f63","wn","$3c65f17c9f70f766$export$51e46a3625992b91","$7db2c52ec52bd7cf$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$ff23e8a6e0292000$export$40f3d9558cf6e846","ret","point1","point2","$2b86337dc0cae6ce$export$26f047a5bfac4b1a","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$d333a56ccd100cfd$export$525a75abb91115e3","$2b86337dc0cae6ce$export$717c2c7c46a5bf3d","$2b86337dc0cae6ce$export$f14bd9270666b480","$4e5c47cc66c1cbb9$export$c77fe031a1447f2e","$846e7d12e139eeec$export$add61ad31d0a68b4","edge","$846e7d12e139eeec$export$586adaf930d9fdb6","opt_right","right","isClockwise","$846e7d12e139eeec$export$325e57738fd8b321","$846e7d12e139eeec$export$4efd43868de93336","$8577ba96696c7470$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$8577ba96696c7470$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$d78f061ab8e6937f$exports","getLinearRingCount","getLinearRing","$2eba2434999e946d$exports","getLinearRings","linearRings","$8577ba96696c7470$export$9099ad97b570f7c","$8577ba96696c7470$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$8577ba96696c7470$export$b50d271c6e9656cd","$8577ba96696c7470$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$8577ba96696c7470$export$5d1798f0e1df079","getRadius","startAngle","$013cf7a9f19a8f6c$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$013cf7a9f19a8f6c$var$__extends","resolutionConstraintInfo","$013cf7a9f19a8f6c$export$8b6914b45b83f21f","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","minZoom_","centerConstraint","$013cf7a9f19a8f6c$export$535fae5a159fbda4","resolutionConstraint","constraint","rotationConstraint","$013cf7a9f19a8f6c$export$9665b691bc2d5ca0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","$013cf7a9f19a8f6c$var$animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$013cf7a9f19a8f6c$export$5d87c27d7d9f380e","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","$013cf7a9f19a8f6c$var$calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","$8577ba96696c7470$exports","fromExtent","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$0e1a1b60122676ba$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$0e1a1b60122676ba$export$7690ad4e930f454b","theta","opt_tolerance","enableRotation","constrainRotation","$013cf7a9f19a8f6c$export$9099ad97b570f7c","$1584674e6c442cb4$export$48d31d2725e4d98b","$f45eee633772e0e7$var$PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$78bdbac1eaad4f08$exports","view","$013cf7a9f19a8f6c$exports","$f45eee633772e0e7$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$79e77b05f0af3af4$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","toString","$f45eee633772e0e7$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","elementFromPoint","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","targetElement","$5ce77a9367e71852$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","$1584674e6c442cb4$export$c563c2b7121f8771","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","$f45eee633772e0e7$export$9099ad97b570f7c","$52e6a1ab15a4b16d$var$Control","Control","target_","listenerKeys","$52e6a1ab15a4b16d$var$__extends","mapEvent","$52e6a1ab15a4b16d$export$9099ad97b570f7c","$d272f1a7f2d66954$var$Attribution","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$d272f1a7f2d66954$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$158e6a8754c20e7c$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$52e6a1ab15a4b16d$exports","$d272f1a7f2d66954$export$9099ad97b570f7c","$df8a7089a421bf2f$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$df8a7089a421bf2f$var$__extends","resetNorth_","$1022d6743ffba880$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$1022d6743ffba880$var$__extends","zoomByDelta_","currentZoom","newZoom","$6fe2ef1e7a750c69$export$9099ad97b570f7c","$f26f33305875ffd9$export$63568b31cb17dd4d","$f26f33305875ffd9$export$d2c07614bfd6a817","$f26f33305875ffd9$export$9099ad97b570f7c","Interaction","setActive","$f26f33305875ffd9$var$__extends","active","$247995ce03a38b1e$export$9099ad97b570f7c","DoubleClickZoom","delta_","$247995ce03a38b1e$var$__extends","stopEvent","shiftKey","$f26f33305875ffd9$exports","zoomByDelta","$15b70ec573750fa6$export$e61edea4dfe4ed9b","$15b70ec573750fa6$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$15b70ec573750fa6$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$15b70ec573750fa6$var$isPointerDraggingEvent","$1dd9bb17917c1459$export$8dbdea330bbd6b3c","conditions","pass","$1dd9bb17917c1459$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$1dd9bb17917c1459$export$584a07df7b145c47","hasAttribute","activeElement","$1dd9bb17917c1459$export$363947888fb85da6","$1dd9bb17917c1459$export$a8612972eacfc116","$1dd9bb17917c1459$export$9f5e19851eeaf2c1","$1dd9bb17917c1459$export$1734dfcac3c09b2f","$1dd9bb17917c1459$export$59c8376875f673f8","$1dd9bb17917c1459$export$5bbcce8021828272","tagName","$1dd9bb17917c1459$export$d31d3f3aa38542a8","pointerType","$1dd9bb17917c1459$export$45cd27c0322d6513","isPrimary","$f61551752c4f4f08$var$DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$f61551752c4f4f08$var$__extends","centroid","$15b70ec573750fa6$exports","update","getDistance","getAngle","centerpx","$f61551752c4f4f08$export$9099ad97b570f7c","$d813784fb0405083$export$9099ad97b570f7c","DragRotate","lastAngle_","$d813784fb0405083$var$__extends","$46289f3b330b6586$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$46289f3b330b6586$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$a8d898a7bd6fd9e0$var$DragBoxEventType","$a8d898a7bd6fd9e0$export$4d9b552836937ca2","DragBoxEvent","$a8d898a7bd6fd9e0$var$__extends","$a8d898a7bd6fd9e0$export$9099ad97b570f7c","DragBox","box_","$46289f3b330b6586$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$6a3aca92466c0896$export$9099ad97b570f7c","DragZoom","out_","out","$6a3aca92466c0896$var$__extends","mapExtent","boxPixelExtent","$d333a56ccd100cfd$export$9f54817615211741","$a8d898a7bd6fd9e0$exports","$11a5f739eb17e24b$export$9099ad97b570f7c","$52d09675c125dcf1$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$52d09675c125dcf1$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$1fae754d3ea6677a$export$9099ad97b570f7c","KeyboardZoom","$1fae754d3ea6677a$var$__extends","charCode","charCodeAt","$e0121ce5936cb4d8$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$cd0092067e7ded9c$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$cd0092067e7ded9c$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$cd0092067e7ded9c$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$a80081c3438ffbf4$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$a80081c3438ffbf4$var$__extends","rotationDelta","touch0","touch1","$e1a7c7fda3fcb5d0$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$e1a7c7fda3fcb5d0$var$__extends","scaleDelta","$b92278933294ec34$export$9099ad97b570f7c","Map1","$1022d6743ffba880$exports","zoomOptions","$df8a7089a421bf2f$exports","rotateOptions","attribution","$d272f1a7f2d66954$exports","attributionOptions","$3ba5c30aca7182c2$export$b403fbac94228e09","altShiftDragRotate","$d813784fb0405083$exports","doubleClickZoom","$247995ce03a38b1e$exports","zoomDelta","zoomDuration","dragPan","$f61551752c4f4f08$exports","pinchRotate","$a80081c3438ffbf4$exports","pinchZoom","$e1a7c7fda3fcb5d0$exports","keyboard","$52d09675c125dcf1$exports","$1fae754d3ea6677a$exports","mouseWheelZoom","$cd0092067e7ded9c$exports","shiftDragZoom","$6a3aca92466c0896$exports","$c930ad710d84b305$export$b403fbac94228e09","$b92278933294ec34$var$__extends","$2d3983d3c236cd0f$exports","$f45eee633772e0e7$exports","$42eaa0851eb221cf$export$9099ad97b570f7c","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","$42eaa0851eb221cf$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","$723ec55387d416d6$export$9099ad97b570f7c","ImageBase","$723ec55387d416d6$var$__extends","getImage","getPixelRatio","$cd8285e3e84f4d13$export$9099ad97b570f7c","$fced4221eaca0419$export$469eb8ba3f45955e","image","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$fced4221eaca0419$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$723ec55387d416d6$exports","$17444c5007a5df29$export$9099ad97b570f7c","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$17444c5007a5df29$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$fced4221eaca0419$exports","listenImage","$42eaa0851eb221cf$exports","$4e3d7af6ddc0a7bb$var$brokenDiagonalRendering_","$7885574070ba36b3$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$1a48f53661f04756$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$4e3d7af6ddc0a7bb$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","clip","$4e3d7af6ddc0a7bb$var$verifyBrokenDiagonalRendering","$4e3d7af6ddc0a7bb$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$4e3d7af6ddc0a7bb$export$792a797b69be0d58","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$11d79372009851c4$export$27dc5719ceda6735","getImageData","$4e3d7af6ddc0a7bb$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$ad06dd403e0a8513$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$4e3d7af6ddc0a7bb$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$ad06dd403e0a8513$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$bf88e629b6ee6163$var$LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$bf88e629b6ee6163$export$9099ad97b570f7c","$153c3e950abfd740$export$ea8082d0226d35a5","opt_tileCoord","$153c3e950abfd740$export$1039fb0288fd71e3","$153c3e950abfd740$export$a0f0ccbe5bbc0789","$61823e7907e95ef6$export$9099ad97b570f7c","TileCache","$61823e7907e95ef6$var$__extends","expireCache","pruneExceptNewestZ","$153c3e950abfd740$export$5208a752d34424e5","$4bb75659bb3462f8$export$9099ad97b570f7c","$3fa87a5786fdcb68$var$adaptAttributions","attributionLike","$3fa87a5786fdcb68$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$3fa87a5786fdcb68$var$__extends","getContextOptions","refresh","setAttributions","$755de0abe16276c4$var$TileRange","TileRange","containsTileRange","tileRange","getHeight","getWidth","$755de0abe16276c4$export$ea8082d0226d35a5","$755de0abe16276c4$export$9099ad97b570f7c","$4957c1686d037101$var$tmpTileCoord","$4957c1686d037101$var$TileGrid","TileGrid","opt_strict","compare","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","$4957c1686d037101$export$9099ad97b570f7c","$1770d80474e42ee1$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$1770d80474e42ee1$var$resolutionsFromExtent","$1770d80474e42ee1$export$57c49ef1657592d4","$1770d80474e42ee1$export$9666e825b22d806d","$1770d80474e42ee1$export$6dfef52f91d4f582","opt_maxResolution","half","$5b2b9f9d853aaab8$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$61823e7907e95ef6$exports","tmpSize","tileOptions","zDirection","$5b2b9f9d853aaab8$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","$1770d80474e42ee1$export$5a0d9577a24f3c5b","$153c3e950abfd740$export$b46b80619528d4e5","updateCacheSize","tileCount","useTile","$3fa87a5786fdcb68$exports","$5b2b9f9d853aaab8$export$8434c8db61edbf9d","TileSourceEvent","$5b2b9f9d853aaab8$export$9099ad97b570f7c","$309456a17bc9d7d9$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$309456a17bc9d7d9$export$c6a04e0c49b28953","tileUrlFunctions","$153c3e950abfd740$export$4639c7f2947f4458","$309456a17bc9d7d9$export$47abe479fba0e55d","url","urls","startCharCode","stopCharCode","fromCharCode","stop_1","$ed8b1ee91d3b1512$var$UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","$ed8b1ee91d3b1512$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","$5b2b9f9d853aaab8$exports","setTileLoadFunction","setTileUrlFunction","templates","$309456a17bc9d7d9$export$2d2faeb2e9d58b93","$ed8b1ee91d3b1512$export$9099ad97b570f7c","$a00efaa4b8159fae$var$TileImage","TileImage","$a00efaa4b8159fae$var$defaultTileLoadFunction","tileClass","$17444c5007a5df29$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$a00efaa4b8159fae$var$__extends","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$ad06dd403e0a8513$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$ed8b1ee91d3b1512$exports","imageTile","$a00efaa4b8159fae$export$9099ad97b570f7c","$59af0e30920ae0da$export$9099ad97b570f7c","$6593ad344842fe04$export$8626442242d77803","uri","params","keyParams","encodeURIComponent","qs","$5c81279c416d079d$var$WMTSTileGrid","WMTSTileGrid","matrixIds_","matrixIds","$5c81279c416d079d$var$__extends","getMatrixId","getMatrixIds","$5c81279c416d079d$export$9099ad97b570f7c","$5c81279c416d079d$export$363b339ecb1a4a6a","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","$0254a37eddedec7f$var$WMTS","WMTS","requestEncoding","version_","version","format_","format","dimensions_","dimensions","layer_","matrixSet_","style_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","$0254a37eddedec7f$var$__extends","getDimensions","getFormat","getLayer","getMatrixSet","getRequestEncoding","getStyle","getVersion","updateDimensions","p","localContext_1","$a00efaa4b8159fae$exports","$0254a37eddedec7f$export$9099ad97b570f7c","$0254a37eddedec7f$export$d7772025db6228c3","wmtsCap","config","tileMatrixSets","supportedCRS","proj1","proj2","matrixSetObj","projConfig","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","$5c81279c416d079d$exports","createFromCapabilitiesMatrixSet","gets","encodings","$353a86b6785d23cf$export$9099ad97b570f7c","$289d8a06dd383ff7$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$289d8a06dd383ff7$var$__extends","getPreload","getUseInterimTilesOnError","$0d7ccc2184bbb6ae$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","declutterExecutorGroup","$0d7ccc2184bbb6ae$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","renderIfReadyAndVisible","loadImage","imageState","$48340b1070105b4e$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$48340b1070105b4e$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","err","Uint8Array","$0d7ccc2184bbb6ae$exports","$9056ddaf99896c0e$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$9056ddaf99896c0e$var$__extends","isDrawableTile","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","i_1","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alpha","alphaChanged","postRenderFunction","tileSource1","frameState1","opt_tileCallback","$48340b1070105b4e$exports","$9056ddaf99896c0e$export$9099ad97b570f7c","$e61f98c73384e953$export$9099ad97b570f7c","TileLayer","$e61f98c73384e953$var$__extends","$9056ddaf99896c0e$exports","$289d8a06dd383ff7$exports","$e5266561d049a513$export$7cf753b6a6534915","styles_1","$e5266561d049a513$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","$e5266561d049a513$var$__extends","setGeometryName","getGeometryName","setStyle","getStyleFunction","handleGeometryChange_","opt_style","setId","$a1ed4c2e9ff299f1$var$GeometryCollection","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$a1ed4c2e9ff299f1$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","geometries","getGeometries","$a1ed4c2e9ff299f1$var$cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","$a1ed4c2e9ff299f1$export$9099ad97b570f7c","$ad7f8cfc102a20b1$export$55be7a9e3fef4787","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$16831c8b3cdccec7$export$26b1c556c0e0f127","$ad7f8cfc102a20b1$export$1a804b04fa5a0253","extrapolate","lo","hi","m0","$72877ffc9795efcc$export$7326ac1b36a49776","$7fc9bac1c7e6a765$var$LineString","LineString","flatMidpoint_","flatMidpointRevision_","$7fc9bac1c7e6a765$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","$7fc9bac1c7e6a765$export$9099ad97b570f7c","$8e075789d295b82f$var$MultiLineString","MultiLineString","lineStrings","$8e075789d295b82f$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$ad7f8cfc102a20b1$export$8958f67b085a89b1","getLineString","$7fc9bac1c7e6a765$exports","getLineStrings","getFlatMidpoints","midpoints","$2b86337dc0cae6ce$export$414b603e1c51ecd4","$8e075789d295b82f$export$9099ad97b570f7c","$ec70b77b5d212b39$var$MultiPoint","MultiPoint","$ec70b77b5d212b39$var$__extends","appendPoint","multiPoint","getPoint","getPoints","points","$ec70b77b5d212b39$export$9099ad97b570f7c","$2b01038ad8909ddb$var$MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$2b01038ad8909ddb$var$__extends","appendPolygon","newEndss","multiPolygon","$1eeaf5ba3166ef8e$export$7bbfd5f5d0d7544b","$1eeaf5ba3166ef8e$export$6564f135364e210c","$3c65f17c9f70f766$export$664b9cb38de51b70","$d21f3a0ce2fde0f1$export$3ed76a8ff8a671c","getEndss","getFlatInteriorPoints","$089899774745c253$export$3ed76a8ff8a671c","interiorPoints","$7db2c52ec52bd7cf$export$2bd6b2f516920f59","getInteriorPoints","$ec70b77b5d212b39$exports","$846e7d12e139eeec$export$9ae9bd8fe57776c1","simplifiedEndss","$54c380e0fb260ccc$export$503109e33f5b8344","getPolygon","prevEnds","getPolygons","$2b86337dc0cae6ce$export$eae4874c99627698","$341fcb0cdbf81912$export$abe2fb3e7ce9556","lastEnds","$2b01038ad8909ddb$export$9099ad97b570f7c","$45178ee5c320f5c0$export$9099ad97b570f7c","FeatureFormat","dataProjection","defaultFeatureProjection","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","$45178ee5c320f5c0$export$534b7b915a5ec453","write","transformed","decimals","power_1","$82712b733b1390bc$export$9099ad97b570f7c","$6d55395397afac84$var$getText","$6d55395397afac84$export$9099ad97b570f7c","TextFeature","$6d55395397afac84$var$__extends","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","$e59479e07434c417$var$GeometryConstructor","$8e075789d295b82f$exports","$2b01038ad8909ddb$exports","$e59479e07434c417$var$TokenType","$e59479e07434c417$var$WKTGeometryType","$e59479e07434c417$var$type","toUpperCase","$e59479e07434c417$var$Lexer","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","charAt","nextToken","readNumber_","readText_","decimal","scientificNotation","substring","$e59479e07434c417$var$Parser","Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","isMatch","parse","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","token","geomType","$a1ed4c2e9ff299f1$exports","ctor","$e59479e07434c417$var$WKT","WKT","splitCollection_","splitCollection","$e59479e07434c417$var$__extends","parse_","geom","$e5266561d049a513$exports","collection","$e59479e07434c417$var$encode","$6d55395397afac84$exports","$e59479e07434c417$var$encodePointGeometry","$e59479e07434c417$var$encodeLineStringGeometry","$e59479e07434c417$var$encodePolygonGeometry","rings","$e59479e07434c417$var$GeometryEncoder","components","geoms","enc","geometryEncoder","$e59479e07434c417$var$encodeGeometryLayout","$e59479e07434c417$export$9099ad97b570f7c","settings","selected","debounceTimer","containerStyle","debounceWaitMs","preventSubmit","disableAutoSelect","keyUpEventName","mobileFirefox","items","inputValue","minLen","showOnFocus","keypressCounter","clearDebounceTimer","containerDisplayed","currentValue","itemElement","renderGroup","groupName","groupDiv","createDocumentFragment","group","prevGroup","fragment","ev","emptyMsg","empty","inputRect","maxHeight","customize","calc","docEl","clientLeft","scrollTop","pageYOffset","scrollLeft","pageXOffset","innerHeight","bottom","previous","previousElementSibling","offsetTop","containerBottom","selectBottom","updateIfDisplayed","resizeEventHandler","keyupEventHandler","which","_i","ignore_1","startFetch","keydownEventHandler","containerIsDisplayed","selectPrev","selectNext","onSelect","trigger","savedKeypressCounter","blurEventHandler","$37ca435c53f13d4d$exports","t1","t2","r1","e1","a1","h1","u","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","all","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","m1","_chooseSubtree","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$7736c129cc15e8f7$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$6376afaf3edc9c87$export$55029509b82b2e2b","$09e02ea90a0e8bf3$var$RegularShape","RegularShape","hitDetectionCanvas_","fill_","fill","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","$09e02ea90a0e8bf3$var$__extends","getFill","getRadius2","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","arc","setLineDash","drawHitDetectionCanvas_","$09e02ea90a0e8bf3$export$9099ad97b570f7c","$52515b32646d1620$export$9099ad97b570f7c","CircleStyle","$52515b32646d1620$var$__extends","setRadius","$09e02ea90a0e8bf3$exports","$85f396a493b4e027$export$9099ad97b570f7c","Fill","color_","setColor","$5d571ec9414fea2a$export$9099ad97b570f7c","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b14009c8ddfadc85$var$Style","Style","geometryFunction_","$b14009c8ddfadc85$var$defaultGeometryFunction","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setStroke","setText","$b14009c8ddfadc85$var$defaultStyles","$b14009c8ddfadc85$export$33d0043adf82cc14","$52515b32646d1620$exports","$8b66177f43228c5f$var$Property","$8b66177f43228c5f$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$8b66177f43228c5f$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","styleFunction","$b14009c8ddfadc85$export$4aaa4bacaec09e94","$0029daffb0840ded$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$0029daffb0840ded$export$c649c04369bd3370","$0029daffb0840ded$export$2513c58bc344fc5c","$0029daffb0840ded$export$84e3c67fd41b07f5","$0029daffb0840ded$export$6cd4b1e0c0e7240c","$0029daffb0840ded$export$9099ad97b570f7c","$0d3e13e6cbc69874$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$1894cda24582da9a$var$CanvasBuilder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$1894cda24582da9a$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$1894cda24582da9a$export$9099ad97b570f7c","$a4795f00dc9530fb$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$a4795f00dc9530fb$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$1894cda24582da9a$exports","$9d273adc89b91f65$var$CanvasLineStringBuilder","CanvasLineStringBuilder","$9d273adc89b91f65$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$9d273adc89b91f65$export$9099ad97b570f7c","$f6fbeb90ec7648f7$var$CanvasPolygonBuilder","CanvasPolygonBuilder","$f6fbeb90ec7648f7$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$f6fbeb90ec7648f7$export$9099ad97b570f7c","$d31bc97d019705a3$export$9099ad97b570f7c","$b17755064c98f4bd$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$b73d5ad30737d390$export$3964e67694391753","$b73d5ad30737d390$var$CanvasTextBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$b73d5ad30737d390$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$b73d5ad30737d390$export$9099ad97b570f7c","$ca6b30c5cbf24996$var$BATCH_CONSTRUCTORS","$f6fbeb90ec7648f7$exports","$a4795f00dc9530fb$exports","$9d273adc89b91f65$exports","$b73d5ad30737d390$exports","$ca6b30c5cbf24996$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$af060b2ee005860e$export$9099ad97b570f7c","$f4f82de86f87f3a5$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","$4382159e91befef5$var$tmpExtent","$4382159e91befef5$var$p1","$4382159e91befef5$var$p2","$4382159e91befef5$var$p3","$4382159e91befef5$var$p4","$4382159e91befef5$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$4382159e91befef5$var$rtlRegEx","$4382159e91befef5$var$horizontalTextAlign","align","test","TEXT_ALIGN","$4382159e91befef5$var$Executor","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$33ba1dda25080cc3$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$4382159e91befef5$export$9099ad97b570f7c","$569c5f1125a255d7$var$ORDER","$569c5f1125a255d7$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$569c5f1125a255d7$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$569c5f1125a255d7$export$f610334c339a4991","featureCallback","imageData","result_1","executor","opt_builderTypes","builderTypes","$569c5f1125a255d7$export$9099ad97b570f7c","$a9d040e5a239f750$var$CanvasImmediateRenderer","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$a9d040e5a239f750$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$a9d040e5a239f750$export$9099ad97b570f7c","$f7585e292fcf6dc5$export$9099ad97b570f7c","$a451836ed9fa69af$export$9099ad97b570f7c","$e98e828d2003bc1a$var$taintedTestContext","$e98e828d2003bc1a$var$IconImage","IconImage","imageState_","tainted_","$e98e828d2003bc1a$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$e98e828d2003bc1a$export$7eb84799c931fe91","$bdd0cbe3d07330ec$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize","iconImage_","$e98e828d2003bc1a$exports","offset_","offsetOrigin_","offsetOrigin","$bdd0cbe3d07330ec$var$__extends","setAnchor","iconImageSize","$5d8f27e59f1a1823$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$5d8f27e59f1a1823$export$65a5cfeed6fd0c33","feature1","feature2","$5d8f27e59f1a1823$export$f0ea347488340e3d","$5d8f27e59f1a1823$export$522dfd100dd96ba1","$5d8f27e59f1a1823$var$renderGeometry","$5d8f27e59f1a1823$var$renderFeatureInternal","$c153db647ed724b6$var$CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c153db647ed724b6$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$ffc5f3d579aca584$export$e7468c0ae08395df","clipped","Promise","resolve","transforms","$a9d040e5a239f750$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","canvas_1","imgContext","$bdd0cbe3d07330ec$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$7a6473f1d8aeafa7$export$9fd146a6491490e3","resultFeatures","$7a6473f1d8aeafa7$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","$d333a56ccd100cfd$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","loadFeatures","$5d8f27e59f1a1823$export$f3b3f9822f340683","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$c153db647ed724b6$export$9099ad97b570f7c","$072ae9021a014f94$export$9099ad97b570f7c","VectorLayer","$072ae9021a014f94$var$__extends","$c153db647ed724b6$exports","$8b66177f43228c5f$exports","$bb0e1df757854922$var$RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$bb0e1df757854922$export$9099ad97b570f7c","$c0e76308793a8fd7$export$9099ad97b570f7c","$0d7b3e6e3fdff479$export$8dbdea330bbd6b3c","$2e1cfd628699255e$var$withCredentials","$2e1cfd628699255e$export$52988233cf090939","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$2e1cfd628699255e$export$4355fa6d12274ca5","addFeatures","$2649c727c2ac59b6$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$2649c727c2ac59b6$var$__extends","$2649c727c2ac59b6$var$VectorSource","VectorSource","loader_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","$2649c727c2ac59b6$export$9099ad97b570f7c","$aa42723acc87f243$var$projectionExtent","$aa42723acc87f243$var$size","$aa42723acc87f243$var$resolutions","$aa42723acc87f243$var$matrixIds","$aa42723acc87f243$var$z","$aa42723acc87f243$var$baseMapLayer","$e61f98c73384e953$exports","$0254a37eddedec7f$exports","$aa42723acc87f243$var$vectorSource","$2649c727c2ac59b6$exports","$aa42723acc87f243$var$vectorLayer","$072ae9021a014f94$exports","$aa42723acc87f243$var$map","$b92278933294ec34$exports","$aa42723acc87f243$var$LocationServerControl","LocationServerControl","optOptions","$33a7fc9bc61d10fd$exports","fetch","json","suggestions","docs","weergavenaam","input1","wktLoc","geometrie_ll","$e59479e07434c417$exports","ext","__proto__","create","constructor"],"version":3,"file":"index.9d2cc169.js.map"}