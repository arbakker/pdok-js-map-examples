{"version":3,"sources":["src/util.js","src/AssertionError.js","src/CollectionEventType.js","src/ObjectEventType.js","src/obj.js","src/events.js","src/Disposable.js","src/array.js","src/functions.js","../src/events/Event.js","../src/events/Target.js","../src/events/EventType.js","src/Observable.js","src/Object.js","src/Collection.js","src/asserts.js","src/Feature.js","../src/extent/Corner.js","../src/extent/Relationship.js","src/extent.js","../src/geom/GeometryLayout.js","../src/geom/GeometryType.js","../../src/geom/flat/transform.js","src/math.js","src/sphere.js","../src/proj/Units.js","../src/proj/Projection.js","../src/proj/epsg3857.js","../src/proj/epsg4326.js","../src/proj/transforms.js","../src/proj/projections.js","src/proj.js","src/transform.js","../src/geom/Geometry.js","../src/geom/SimpleGeometry.js","../../src/geom/flat/area.js","../../src/geom/flat/closest.js","../../src/geom/flat/deflate.js","../../src/geom/flat/inflate.js","../../src/geom/flat/simplify.js","../src/geom/LinearRing.js","../src/geom/Point.js","../../src/geom/flat/contains.js","../../src/geom/flat/interiorpoint.js","../../src/geom/flat/segments.js","../../src/geom/flat/intersectsextent.js","../../src/geom/flat/reverse.js","../../src/geom/flat/orient.js","../src/geom/Polygon.js","src/Geolocation.js","../src/layer/Property.js","../src/layer/Base.js","../src/render/EventType.js","../src/source/State.js","../src/layer/Layer.js","src/color.js","src/colorlike.js","src/dom.js","src/ImageState.js","src/css.js","../src/render/canvas.js","../src/style/Image.js","../src/style/RegularShape.js","../src/style/Circle.js","../src/style/Fill.js","../src/style/Stroke.js","../src/style/Style.js","../src/layer/BaseVector.js","src/ViewHint.js","../src/render/VectorContext.js","../../src/render/canvas/Instruction.js","../../src/render/canvas/Builder.js","../../src/render/canvas/ImageBuilder.js","../../src/render/canvas/LineStringBuilder.js","../../src/render/canvas/PolygonBuilder.js","../../src/geom/flat/straightchunk.js","../src/style/TextPlacement.js","../../src/render/canvas/TextBuilder.js","../../src/render/canvas/BuilderGroup.js","../../src/render/canvas/BuilderType.js","../../src/geom/flat/length.js","../../src/geom/flat/textpath.js","node_modules/rbush/rbush.js","../../src/render/canvas/Executor.js","../../src/render/canvas/ExecutorGroup.js","../src/render/Event.js","../src/renderer/Layer.js","../../src/renderer/canvas/Layer.js","../src/renderer/vector.js","../../src/render/canvas/Immediate.js","../src/style/IconAnchorUnits.js","../src/style/IconImageCache.js","src/ImageBase.js","src/has.js","src/Image.js","../src/style/IconImage.js","../src/style/IconOrigin.js","../src/style/Icon.js","../src/style/Text.js","src/style.js","../../src/render/canvas/hitdetect.js","../../src/renderer/canvas/VectorLayer.js","../src/layer/Vector.js","src/string.js","src/coordinate.js","../../src/geom/flat/interpolate.js","../src/geom/LineString.js","../src/format/FormatType.js","src/featureloader.js","src/loadingstrategy.js","../src/source/Source.js","../src/source/VectorEventType.js","../src/structs/RBush.js","../src/source/Vector.js","../../src/geom/flat/geodesic.js","../src/layer/Graticule.js","src/ImageCanvas.js","src/TileState.js","src/easing.js","src/Tile.js","src/ImageTile.js","src/Kinetic.js","src/MapEvent.js","src/MapBrowserEvent.js","../src/elm-pep.js","src/MapBrowserEventType.js","src/MapBrowserPointerEvent.js","../src/pointer/EventType.js","src/MapBrowserEventHandler.js","src/MapEventType.js","src/MapProperty.js","../src/structs/PriorityQueue.js","src/TileQueue.js","../src/tilegrid/common.js","src/centerconstraint.js","src/resolutionconstraint.js","src/rotationconstraint.js","src/ViewProperty.js","src/View.js","../src/layer/Group.js","src/size.js","src/PluggableMap.js","../src/control/Control.js","../src/control/Attribution.js","../src/control/Rotate.js","../src/control/Zoom.js","../src/control/FullScreen.js","../src/control/MousePosition.js","src/render.js","../src/renderer/Map.js","../src/renderer/Composite.js","src/OverlayPositioning.js","src/Overlay.js","../src/control/OverviewMap.js","../src/control/ScaleLine.js","../src/control/ZoomSlider.js","../src/control/ZoomToExtent.js","src/control.js","../src/interaction/Property.js","../src/interaction/Interaction.js","../src/interaction/DoubleClickZoom.js","../src/events/condition.js","../src/interaction/Pointer.js","../src/interaction/DragPan.js","../src/interaction/DragRotate.js","../src/render/Box.js","../src/interaction/DragBox.js","../src/interaction/DragZoom.js","../src/events/KeyCode.js","../src/interaction/KeyboardPan.js","../src/interaction/KeyboardZoom.js","../src/interaction/MouseWheelZoom.js","../src/interaction/PinchRotate.js","../src/interaction/PinchZoom.js","../src/interaction/DragAndDrop.js","../src/interaction/DragRotateAndZoom.js","../src/geom/Circle.js","../src/geom/MultiLineString.js","../src/geom/MultiPoint.js","../../src/geom/flat/center.js","../src/geom/MultiPolygon.js","../src/interaction/Draw.js","../src/interaction/Extent.js","../src/interaction/Modify.js","../src/interaction/Select.js","../src/interaction/Snap.js","../src/interaction/Translate.js","src/interaction.js","src/Map.js","../src/structs/LRUCache.js","src/tilecoord.js","src/TileCache.js","src/TileRange.js","src/VectorRenderTile.js","src/VectorTile.js","src/index.js","src/tileurlfunction.js","../src/reproj/common.js","src/reproj.js","../src/reproj/Triangulation.js","../src/reproj/Tile.js","../src/tilegrid/TileGrid.js","src/tilegrid.js","../src/source/Tile.js","../src/source/TileEventType.js","../src/source/UrlTile.js","../src/source/TileImage.js","../src/source/WMTSRequestEncoding.js","../src/tilegrid/WMTS.js","src/uri.js","../src/source/WMTS.js","../src/layer/TileProperty.js","../src/layer/BaseTile.js","../../src/renderer/canvas/TileLayer.js","../src/layer/Tile.js","../src/format/Feature.js","../src/format/TextFeature.js","../src/geom/GeometryCollection.js","../src/format/WKT.js","autocomplete.ts","src/net.js","../src/source/BingMaps.js","../src/source/XYZ.js","../src/source/CartoDB.js","../src/source/Cluster.js","../src/source/Zoomify.js","../src/format/IIIFInfo.js","../src/source/IIIF.js","../src/reproj/Image.js","../src/source/Image.js","../src/source/ImageArcGISRest.js","../src/source/ImageCanvas.js","../src/source/ImageMapGuide.js","../src/source/ImageStatic.js","../src/source/common.js","../src/source/WMSServerType.js","../src/source/ImageWMS.js","../src/source/OSM.js","node_modules/pixelworks/lib/util.js","node_modules/pixelworks/lib/processor.js","node_modules/pixelworks/lib/index.js","../src/layer/BaseImage.js","../../src/renderer/canvas/ImageLayer.js","../src/layer/Image.js","../src/source/Raster.js","../src/source/Stamen.js","../src/source/TileArcGISRest.js","../src/source/TileDebug.js","../src/source/TileJSON.js","../src/source/TileWMS.js","../src/source/UTFGrid.js","../src/source/VectorTile.js","src/source.js","index.js"],"names":["locatieServerUrl","projection","projectionExtent","getExtent","size","resolutions","Array","matrixIds","z","Math","pow","baseMapLayer","TileLayer","extent","source","WMTSSource","url","layer","matrixSet","format","attributions","tileGrid","WMTSTileGrid","origin","style","vectorSource","VectorSource","vectorLayer","VectorLayer","declutter","map","Map","layers","target","view","View","center","zoom","LocationServerControl","Control","optOptions","options","input","document","createElement","id","element","className","appendChild","call","debounceWaitMs","showOnFocus","fetch","text","update","then","response","json","data","suggestions","docs","length","forEach","item","name","weergavenaam","push","label","value","onSelect","wktLoc","geometrie_ll","feature","WKT","readFeature","dataProjection","featureProjection","clear","addFeature","ext","getGeometry","getView","fit","minResolution","duration","__proto__","prototype","Object","create","constructor","addControl"],"mappings":"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","file":"openlayers-locatie-server.7b5a320d.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n}\n\nexport default AssertionError;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues = (typeof Object.values === 'function') ? Object.values : function(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n};\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function() {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @private\n     */\n    this.disposed_ = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed_) {\n      this.disposed_ = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function() {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  preventDefault() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n\n  /**\n   * @param {*=} opt_target Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    let listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = [];\n      this.listeners_[type] = listeners;\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        let pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  getListeners(type) {\n    return this.listeners_[type];\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n\n  /**\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return Object.keys(this.values_);\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return assign({}, this.values_);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      const oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n\n  /**\n   * @param {CollectionEventType} type Type.\n   * @param {*=} opt_element Element.\n   * @param {number} opt_index The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n\n  /**\n   * @param {Array<T>=} opt_array Array.\n   * @param {Options=} opt_options Collection options.\n   */\n  constructor(opt_array, opt_options) {\n\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index));\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index));\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return (\n      /** @type {Geometry|undefined} */ (this.get(this.geometryName_))\n    );\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ = options.worldExtent !== undefined ?\n      options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ = options.axisOrientation !== undefined ?\n      options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\nimport {add as addProj, clear as clearProj, get as getProj} from './proj/projections.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    getProj(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\nimport {memoizeOne} from '../functions.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function(revision, squaredTolerance, opt_transform) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        const pixelExtent = sourceProj.getExtent();\n        const projectedExtent = sourceProj.getWorldExtent();\n        const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n\n}\n\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n\n    super();\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n    * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  }\n}\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(\n      flatCoordinates, offset, ends, stride, opt_right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport BaseEvent from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n\n\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nclass GeolocationError extends BaseEvent {\n  /**\n   * @param {PositionError} error error object.\n   */\n  constructor(error) {\n    super(EventType.ERROR);\n\n    /**\n     * @type {number}\n     */\n    this.code = error.code;\n\n    /**\n     * @type {string}\n     */\n    this.message = error.message;\n  }\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass Geolocation extends BaseObject {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addEventListener(getChangeEventType(Property.PROJECTION), this.handleProjectionChanged_);\n    this.addEventListener(getChangeEventType(Property.TRACKING), this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'), projection);\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions());\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Position} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude);\n    this.set(Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ?\n        undefined : coords.altitudeAccuracy);\n    this.set(Property.HEADING, coords.heading === null ?\n      undefined : toRadians(coords.heading));\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition);\n    this.set(Property.SPEED,\n      coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {PositionError} error error object.\n   */\n  positionError_(error) {\n    this.setTracking(false);\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return (\n      /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(Property.ACCURACY_GEOMETRY) || null)\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE_ACCURACY));\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return (\n      /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(Property.PROJECTION))\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (this.get(Property.TRACKING_OPTIONS));\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\n\nexport default Geolocation;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source'\n};\n","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport {assert} from '../asserts.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n        options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n       options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n       options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean=} opt_managed Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: opt_managed === undefined ? true : opt_managed\n    });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex !== undefined ? zIndex : (state.managed === false ? Infinity : 0);\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(getChangeEventType(LayerProperty.SOURCE), this.handleSourcePropertyChange_);\n\n    const source = options.source ? /** @type {SourceType} */ (options.source) : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n    * @inheritDoc\n    */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        const layerStatesArray = renderEvent.frameState.layerStatesArray;\n        const layerState = this.getLayerState(false);\n        // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n        assert(!layerStatesArray.some(function(arrayLayerState) {\n          return arrayLayerState.layer === layerState.layer;\n        }), 67);\n        layerStatesArray.push(layerState);\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (resolution < layerState.minResolution || resolution >= layerState.maxResolution) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    const MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    const cache = {};\n\n    /**\n     * @type {number}\n     */\n    let cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        let color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            let i = 0;\n            for (const key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0;\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas = opt_canvasPool && opt_canvasPool.length ?\n    opt_canvasPool.shift() : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return canvas.getContext('2d');\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4\n};\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {Array<string>} families\n * @property {string} style\n * @property {string} weight\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {FontParameters} The font families (or null if the input spec is invalid).\n */\nexport const getFontParameters = (function() {\n  /**\n   * @type {CSSStyleDeclaration}\n   */\n  let style;\n  /**\n   * @type {Object<string, FontParameters>}\n   */\n  const cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      const family = style.fontFamily;\n      const fontWeight = style.fontWeight;\n      const fontStyle = style.fontStyle;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      const families = family.split(/,\\s?/);\n      cache[font] = {\n        families: families,\n        weight: fontWeight,\n        style: fontStyle\n      };\n    }\n    return cache[font];\n  };\n})();\n","/**\n * @module ol/render/canvas\n */\nimport {getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function() {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function() {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont, text);\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let div;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!div) {\n        div = document.createElement('div');\n        div.innerHTML = 'M';\n        div.style.margin = '0 !important';\n        div.style.padding = '0 !important';\n        div.style.position = 'absolute !important';\n        div.style.left = '-99999px !important';\n      }\n      div.style.font = font;\n      document.body.appendChild(div);\n      height = div.offsetHeight;\n      heights[font] = height;\n      document.body.removeChild(div);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImageOrLabel(context,\n  transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n  context.save();\n\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if ((/** @type {*} */ (labelOrImage).contextInstructions)) {\n    // label\n    context.translate(x, y);\n    context.scale(scale, scale);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else {\n    // image\n    context.drawImage(/** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale, h * scale);\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      CanvasRenderingContext2D.prototype[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {Array<number>} displacement\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice()\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @template T\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @template T\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0]\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice()\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionImage(pixelRatio) {\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.canvas_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * @inheritDoc\n   */\n  load() {}\n\n  /**\n   * @inheritDoc\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @protected\n   */\n  render() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    const renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    const context = createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  draw_(renderOptions, context, x, y) {\n    let i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.hitDetectionCanvas_ = this.canvas_;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n}\n\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0]\n    });\n\n  }\n\n  /**\n  * Clones the style.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  clone() {\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      displacement: this.getDisplacement().slice()\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth()\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options=} opt_options Style options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n       * @private\n       * @type {import(\"./Image.js\").default}\n       */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex()\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function(feature) {\n        return (\n          /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function() {\n        return (\n          /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n        );\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike}\n   *     Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If it is `undefined` the default style is used. If\n   * it is `null` the layer has no style (a `null` style), so only features\n   * that have their own styles will be rendered in the layer. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n\n}\n\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n   */\n  setImageStyle(imageStyle, opt_declutterGroup) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n   */\n  setTextStyle(textStyle, opt_declutterGroups) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatCoordinates(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    let myEnd = this.coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastXCoord;\n          this.coordinates[myEnd++] = lastYCoord;\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastXCoord;\n      this.coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @inheritDoc.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = geometry.getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      builderEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, builderEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEnd, geometry, renderer]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    const extent = geometry.getExtent();\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     */\n    this.declutterGroups_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  drawCoordinates_(flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setImageStyle(imageStyle, declutterGroups) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    const image = imageStyle.getImage(1);\n    const origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  }\n}\n\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    const state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @inheritDoc.\n   */\n  applyStroke(state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\n\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, registerFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1\n};\n\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     */\n    this.declutterGroups_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    let begin = this.coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let end = 2;\n    let stride = 2;\n    let i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        const declutterGroup = this.declutterGroups_ ?\n          (o === 0 ? this.declutterGroups_[0] : [].concat(this.declutterGroups_[0])) :\n          null;\n        this.drawChars_(begin, end, declutterGroup);\n        begin = end;\n      }\n      this.endGeometry(feature);\n\n    } else {\n\n      let geometryWidths = null;\n      if (!textState.overflow) {\n        geometryWidths = [];\n      }\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n        null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n        this.textRotateWithView_, this.textRotation_, 1, NaN,\n        textState.padding == defaultPadding ?\n          defaultPadding : textState.padding.map(function(p) {\n            return p * pixelRatio;\n          }),\n        !!textState.backgroundFill, !!textState.backgroundStroke,\n        this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n        this.textOffsetX_, this.textOffsetY_, geometryWidths\n      ]);\n      this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n        null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n        this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n        textState.padding,\n        !!textState.backgroundFill, !!textState.backgroundStroke,\n        this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n        this.textOffsetX_, this.textOffsetY_, geometryWidths\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  drawChars_(begin, end, declutterGroup) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const textScale = textState.scale;\n    const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      pixelRatio,\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      1,\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setTextStyle(textStyle, declutterGroups) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?') + (textState.textBaseline || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  }\n}\n\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport {createEmpty} from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder\n};\n\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} declutter Decluttering enabled.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.declutter_ = declutter;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     * @private\n     */\n    this.declutterGroups_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @param {boolean} group Group with previous builder.\n   * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n   */\n  addDeclutter(group) {\n    let declutter = null;\n    if (this.declutter_) {\n      if (group) {\n        declutter = this.declutterGroups_;\n        /** @type {number} */ (declutter[0][4])++;\n      } else {\n        declutter = [createEmpty()];\n        this.declutterGroups_ = declutter;\n        declutter[0].push(1);\n      }\n    }\n    return declutter;\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_);\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n  const result = [];\n\n  // Keep text upright\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  let angleChanged = false;\n\n  let index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text[index];\n    const charLength = scale * measureAndCacheTextWidth(font, char, cache);\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      angleChanged = angleChanged || delta !== 0;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result[index] = [x, y, charLength / 2, angle, char];\n    startM += charLength;\n  }\n  return angleChanged ? result : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n","(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = global || self, global.RBush = factory());\n}(this, function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) { swap(arr, left, right); }\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) { i++; }\n            while (compare(arr[j], t) > 0) { j--; }\n        }\n\n        if (compare(arr[left], t) === 0) { swap(arr, left, j); }\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) { left = j + 1; }\n        if (k <= j) { right = j - 1; }\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nvar RBush = function RBush(maxEntries) {\n    if ( maxEntries === void 0 ) maxEntries = 9;\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n    this.clear();\n};\n\nRBush.prototype.all = function all () {\n    return this._all(this.data, []);\n};\n\nRBush.prototype.search = function search (bbox) {\n    var node = this.data;\n    var result = [];\n\n    if (!intersects(bbox, node)) { return result; }\n\n    var toBBox = this.toBBox;\n    var nodesToSearch = [];\n\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var childBBox = node.leaf ? toBBox(child) : child;\n\n            if (intersects(bbox, childBBox)) {\n                if (node.leaf) { result.push(child); }\n                else if (contains(bbox, childBBox)) { this._all(child, result); }\n                else { nodesToSearch.push(child); }\n            }\n        }\n        node = nodesToSearch.pop();\n    }\n\n    return result;\n};\n\nRBush.prototype.collides = function collides (bbox) {\n    var node = this.data;\n\n    if (!intersects(bbox, node)) { return false; }\n\n    var nodesToSearch = [];\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var childBBox = node.leaf ? this.toBBox(child) : child;\n\n            if (intersects(bbox, childBBox)) {\n                if (node.leaf || contains(bbox, childBBox)) { return true; }\n                nodesToSearch.push(child);\n            }\n        }\n        node = nodesToSearch.pop();\n    }\n\n    return false;\n};\n\nRBush.prototype.load = function load (data) {\n    if (!(data && data.length)) { return this; }\n\n    if (data.length < this._minEntries) {\n        for (var i = 0; i < data.length; i++) {\n            this.insert(data[i]);\n        }\n        return this;\n    }\n\n    // recursively build the tree with the given data from scratch using OMT algorithm\n    var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n    if (!this.data.children.length) {\n        // save as is if tree is empty\n        this.data = node;\n\n    } else if (this.data.height === node.height) {\n        // split root if trees have the same height\n        this._splitRoot(this.data, node);\n\n    } else {\n        if (this.data.height < node.height) {\n            // swap trees if inserted one is bigger\n            var tmpNode = this.data;\n            this.data = node;\n            node = tmpNode;\n        }\n\n        // insert the small tree into the large tree at appropriate level\n        this._insert(node, this.data.height - node.height - 1, true);\n    }\n\n    return this;\n};\n\nRBush.prototype.insert = function insert (item) {\n    if (item) { this._insert(item, this.data.height - 1); }\n    return this;\n};\n\nRBush.prototype.clear = function clear () {\n    this.data = createNode([]);\n    return this;\n};\n\nRBush.prototype.remove = function remove (item, equalsFn) {\n    if (!item) { return this; }\n\n    var node = this.data;\n    var bbox = this.toBBox(item);\n    var path = [];\n    var indexes = [];\n    var i, parent, goingUp;\n\n    // depth-first iterative tree traversal\n    while (node || path.length) {\n\n        if (!node) { // go up\n            node = path.pop();\n            parent = path[path.length - 1];\n            i = indexes.pop();\n            goingUp = true;\n        }\n\n        if (node.leaf) { // check current node\n            var index = findItem(item, node.children, equalsFn);\n\n            if (index !== -1) {\n                // item found, remove the item and condense tree upwards\n                node.children.splice(index, 1);\n                path.push(node);\n                this._condense(path);\n                return this;\n            }\n        }\n\n        if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n            path.push(node);\n            indexes.push(i);\n            i = 0;\n            parent = node;\n            node = node.children[0];\n\n        } else if (parent) { // go right\n            i++;\n            node = parent.children[i];\n            goingUp = false;\n\n        } else { node = null; } // nothing found\n    }\n\n    return this;\n};\n\nRBush.prototype.toBBox = function toBBox (item) { return item; };\n\nRBush.prototype.compareMinX = function compareMinX (a, b) { return a.minX - b.minX; };\nRBush.prototype.compareMinY = function compareMinY (a, b) { return a.minY - b.minY; };\n\nRBush.prototype.toJSON = function toJSON () { return this.data; };\n\nRBush.prototype.fromJSON = function fromJSON (data) {\n    this.data = data;\n    return this;\n};\n\nRBush.prototype._all = function _all (node, result) {\n    var nodesToSearch = [];\n    while (node) {\n        if (node.leaf) { result.push.apply(result, node.children); }\n        else { nodesToSearch.push.apply(nodesToSearch, node.children); }\n\n        node = nodesToSearch.pop();\n    }\n    return result;\n};\n\nRBush.prototype._build = function _build (items, left, right, height) {\n\n    var N = right - left + 1;\n    var M = this._maxEntries;\n    var node;\n\n    if (N <= M) {\n        // reached leaf level; return leaf\n        node = createNode(items.slice(left, right + 1));\n        calcBBox(node, this.toBBox);\n        return node;\n    }\n\n    if (!height) {\n        // target height of the bulk-loaded tree\n        height = Math.ceil(Math.log(N) / Math.log(M));\n\n        // target number of root entries to maximize storage utilization\n        M = Math.ceil(N / Math.pow(M, height - 1));\n    }\n\n    node = createNode([]);\n    node.leaf = false;\n    node.height = height;\n\n    // split the items into M mostly square tiles\n\n    var N2 = Math.ceil(N / M);\n    var N1 = N2 * Math.ceil(Math.sqrt(M));\n\n    multiSelect(items, left, right, N1, this.compareMinX);\n\n    for (var i = left; i <= right; i += N1) {\n\n        var right2 = Math.min(i + N1 - 1, right);\n\n        multiSelect(items, i, right2, N2, this.compareMinY);\n\n        for (var j = i; j <= right2; j += N2) {\n\n            var right3 = Math.min(j + N2 - 1, right2);\n\n            // pack each entry recursively\n            node.children.push(this._build(items, j, right3, height - 1));\n        }\n    }\n\n    calcBBox(node, this.toBBox);\n\n    return node;\n};\n\nRBush.prototype._chooseSubtree = function _chooseSubtree (bbox, node, level, path) {\n    while (true) {\n        path.push(node);\n\n        if (node.leaf || path.length - 1 === level) { break; }\n\n        var minArea = Infinity;\n        var minEnlargement = Infinity;\n        var targetNode = (void 0);\n\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var area = bboxArea(child);\n            var enlargement = enlargedArea(bbox, child) - area;\n\n            // choose entry with the least area enlargement\n            if (enlargement < minEnlargement) {\n                minEnlargement = enlargement;\n                minArea = area < minArea ? area : minArea;\n                targetNode = child;\n\n            } else if (enlargement === minEnlargement) {\n                // otherwise choose one with the smallest area\n                if (area < minArea) {\n                    minArea = area;\n                    targetNode = child;\n                }\n            }\n        }\n\n        node = targetNode || node.children[0];\n    }\n\n    return node;\n};\n\nRBush.prototype._insert = function _insert (item, level, isNode) {\n    var bbox = isNode ? item : this.toBBox(item);\n    var insertPath = [];\n\n    // find the best node for accommodating the item, saving all nodes along the path too\n    var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n    // put the item into the node\n    node.children.push(item);\n    extend(node, bbox);\n\n    // split on node overflow; propagate upwards if necessary\n    while (level >= 0) {\n        if (insertPath[level].children.length > this._maxEntries) {\n            this._split(insertPath, level);\n            level--;\n        } else { break; }\n    }\n\n    // adjust bboxes along the insertion path\n    this._adjustParentBBoxes(bbox, insertPath, level);\n};\n\n// split overflowed node into two\nRBush.prototype._split = function _split (insertPath, level) {\n    var node = insertPath[level];\n    var M = node.children.length;\n    var m = this._minEntries;\n\n    this._chooseSplitAxis(node, m, M);\n\n    var splitIndex = this._chooseSplitIndex(node, m, M);\n\n    var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n    newNode.height = node.height;\n    newNode.leaf = node.leaf;\n\n    calcBBox(node, this.toBBox);\n    calcBBox(newNode, this.toBBox);\n\n    if (level) { insertPath[level - 1].children.push(newNode); }\n    else { this._splitRoot(node, newNode); }\n};\n\nRBush.prototype._splitRoot = function _splitRoot (node, newNode) {\n    // split root node\n    this.data = createNode([node, newNode]);\n    this.data.height = node.height + 1;\n    this.data.leaf = false;\n    calcBBox(this.data, this.toBBox);\n};\n\nRBush.prototype._chooseSplitIndex = function _chooseSplitIndex (node, m, M) {\n    var index;\n    var minOverlap = Infinity;\n    var minArea = Infinity;\n\n    for (var i = m; i <= M - m; i++) {\n        var bbox1 = distBBox(node, 0, i, this.toBBox);\n        var bbox2 = distBBox(node, i, M, this.toBBox);\n\n        var overlap = intersectionArea(bbox1, bbox2);\n        var area = bboxArea(bbox1) + bboxArea(bbox2);\n\n        // choose distribution with minimum overlap\n        if (overlap < minOverlap) {\n            minOverlap = overlap;\n            index = i;\n\n            minArea = area < minArea ? area : minArea;\n\n        } else if (overlap === minOverlap) {\n            // otherwise choose distribution with minimum area\n            if (area < minArea) {\n                minArea = area;\n                index = i;\n            }\n        }\n    }\n\n    return index || M - m;\n};\n\n// sorts node children by the best axis for split\nRBush.prototype._chooseSplitAxis = function _chooseSplitAxis (node, m, M) {\n    var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n    var compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n    var xMargin = this._allDistMargin(node, m, M, compareMinX);\n    var yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n    // if total distributions margin value is minimal for x, sort by minX,\n    // otherwise it's already sorted by minY\n    if (xMargin < yMargin) { node.children.sort(compareMinX); }\n};\n\n// total margin of all possible split distributions where each node is at least m full\nRBush.prototype._allDistMargin = function _allDistMargin (node, m, M, compare) {\n    node.children.sort(compare);\n\n    var toBBox = this.toBBox;\n    var leftBBox = distBBox(node, 0, m, toBBox);\n    var rightBBox = distBBox(node, M - m, M, toBBox);\n    var margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n    for (var i = m; i < M - m; i++) {\n        var child = node.children[i];\n        extend(leftBBox, node.leaf ? toBBox(child) : child);\n        margin += bboxMargin(leftBBox);\n    }\n\n    for (var i$1 = M - m - 1; i$1 >= m; i$1--) {\n        var child$1 = node.children[i$1];\n        extend(rightBBox, node.leaf ? toBBox(child$1) : child$1);\n        margin += bboxMargin(rightBBox);\n    }\n\n    return margin;\n};\n\nRBush.prototype._adjustParentBBoxes = function _adjustParentBBoxes (bbox, path, level) {\n    // adjust bboxes along the given tree path\n    for (var i = level; i >= 0; i--) {\n        extend(path[i], bbox);\n    }\n};\n\nRBush.prototype._condense = function _condense (path) {\n    // go through the path, removing empty nodes and updating bboxes\n    for (var i = path.length - 1, siblings = (void 0); i >= 0; i--) {\n        if (path[i].children.length === 0) {\n            if (i > 0) {\n                siblings = path[i - 1].children;\n                siblings.splice(siblings.indexOf(path[i]), 1);\n\n            } else { this.clear(); }\n\n        } else { calcBBox(path[i], this.toBBox); }\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) { return items.indexOf(item); }\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) { return i; }\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) { destNode = createNode(null); }\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k; i < p; i++) {\n        var child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX);\n    var minY = Math.max(a.minY, b.minY);\n    var maxX = Math.min(a.maxX, b.maxX);\n    var maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) { continue; }\n\n        var mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\nreturn RBush;\n\n}));\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {drawImageOrLabel, defaultPadding, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\nimport {defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths} from '../canvas.js';\nimport RBush from 'rbush/rbush.js';\n\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @type {Array<*>}\n     */\n    this.declutterItems = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = textState.scale * pixelRatio;\n    const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      // make canvas 2 pixels wider to account for italic text width measurement errors\n      width: Math.ceil((renderWidth + 2) * scale),\n      height: Math.ceil((height + strokeWidth) * scale),\n      contextInstructions: contextInstructions\n    };\n    if (scale != 1) {\n      contextInstructions.push('scale', [scale, scale]);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      if (CanvasRenderingContext2D.prototype.setLineDash && strokeState.lineDash.length) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = (0.5 - align);\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayImageOrLabel_(\n    context,\n    x,\n    y,\n    imageOrLabel,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    const w = (width + originX > imageOrLabel.width) ? imageOrLabel.width - originX : width;\n    const h = (height + originY > imageOrLabel.height) ? imageOrLabel.height - originY : height;\n    const boxW = padding[3] + w * scale + padding[1];\n    const boxH = padding[0] + h * scale + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform = null;\n    if (rotation !== 0) {\n      const centerX = x + anchorX;\n      const centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      applyTransform(tmpTransform, p1);\n      applyTransform(tmpTransform, p2);\n      applyTransform(tmpTransform, p3);\n      applyTransform(tmpTransform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    const intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      const declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, imageOrLabel, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs) {\n        if (fillStroke) {\n          declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n        }\n        declutterGroup.push(declutterArgs);\n      }\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImageOrLabel(context, transform, opacity, imageOrLabel, originX, originY, w, h, x, y, scale);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} opacity Layer opacity.\n   * @param {?} declutterTree Declutter tree.\n   * @return {?} Declutter tree.\n   */\n  renderDeclutter(declutterGroup, feature, opacity, declutterTree) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      const groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        const box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!declutterTree) {\n          declutterTree = new RBush(9);\n        }\n        if (!declutterTree.collides(box)) {\n          declutterTree.insert(box);\n          for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            const declutterData = /** @type {Array} */ (declutterGroup[j]);\n            const context = declutterData[0];\n            const currentAlpha = context.globalAlpha;\n            if (currentAlpha !== opacity) {\n              context.globalAlpha = opacity;\n            }\n            if (declutterData.length > 11) {\n              this.replayTextBackground_(declutterData[0],\n                declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                declutterData[11], declutterData[12]);\n            }\n            drawImageOrLabel.apply(undefined, declutterData);\n            if (currentAlpha !== opacity) {\n              context.globalAlpha = currentAlpha;\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n    return declutterTree;\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale;\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    this.declutterItems.length = 0;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, declutterGroups, image, text, textKey;\n    let strokeKey, fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, instruction[3])) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroups = featureCallback ? null : instruction[6];\n          let height = /** @type {number} */ (instruction[7]);\n          const opacity = /** @type {number} */ (instruction[8]);\n          const originX = /** @type {number} */ (instruction[9]);\n          const originY = /** @type {number} */ (instruction[10]);\n          const rotateWithView = /** @type {boolean} */ (instruction[11]);\n          let rotation = /** @type {number} */ (instruction[12]);\n          const scale = /** @type {number} */ (instruction[13]);\n          let width = /** @type {number} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[7] = height;\n            width = image.width;\n            instruction[14] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          let declutterGroupIndex = 0;\n          for (; d < dd; d += 2) {\n            if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n              continue;\n            }\n            if (declutterGroups) {\n              const index = Math.floor(declutterGroupIndex);\n              if (declutterGroups.length < index + 1) {\n                declutterGroup = createEmpty();\n                declutterGroup.push(declutterGroups[0][4]);\n                declutterGroups.push(declutterGroup);\n              }\n              declutterGroup = declutterGroups[index];\n            }\n            this.replayImageOrLabel_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n            if (declutterGroup) {\n              if (declutterGroupIndex === Math.floor(declutterGroupIndex)) {\n                this.declutterItems.push(this, declutterGroup, feature);\n              }\n              declutterGroupIndex += 1 / declutterGroup[4];\n\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : instruction[4];\n          const overflow = /** @type {number} */ (instruction[5]);\n          fillKey = /** @type {string} */ (instruction[6]);\n          const maxAngle = /** @type {number} */ (instruction[7]);\n          const measurePixelRatio = /** @type {number} */ (instruction[8]);\n          const offsetY = /** @type {number} */ (instruction[9]);\n          strokeKey = /** @type {string} */ (instruction[10]);\n          const strokeWidth = /** @type {number} */ (instruction[11]);\n          text = /** @type {string} */ (instruction[12]);\n          textKey = /** @type {string} */ (instruction[13]);\n          const pixelRatioScale = /** @type {number} */ (instruction[14]);\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = textState.scale * measurePixelRatio;\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n            if (parts) {\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImageOrLabel_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImageOrLabel_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.declutterItems.push(this, declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  execute(context, transform, viewRotation, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(context, transform, this.instructions, snapToPixel, undefined, undefined);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(context, transform,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  }\n}\n\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT\n];\n\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceet that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number=} opt_renderBuffer Optional rendering buffer.\n   */\n  constructor(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n      }\n    }\n  }\n\n\n  /**\n   * @param {Array<BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n\n    if (!this.hitDetectionContext_) {\n      this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n    }\n    const context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    const mask = getCircleArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (let i = 0; i < contextSize; i++) {\n        for (let j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              let result;\n              if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  execute(context, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n            const declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.execute(context, transform, viewRotation, snapToPixel);\n          }\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} opacity Opacity.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<import(\"../../PluggableMap.js\").DeclutterItems>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, opacity, snapToPixel, declutterItems) {\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const executorData = declutterReplays[zs[z].toString()];\n    let currentExecutor;\n    for (let i = 0, ii = executorData.length; i < ii;) {\n      const executor = executorData[i++];\n      if (executor !== currentExecutor) {\n        currentExecutor = executor;\n        declutterItems.push({\n          items: executor.declutterItems,\n          opacity: opacity\n        });\n      }\n      const transform = executorData[i++];\n      executor.execute(context, transform, rotation, snapToPixel);\n    }\n  }\n}\n\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n  }\n\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Layer\n */\nimport {abstract} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function(zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    ).bind(this);\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures) {}\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform, toString} from '../../transform.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform_ = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @type {HTMLCanvasElement}\n     * @private\n     */\n    this.createTransformStringCanvas_ = createCanvasContext2D(1, 1).canvas;\n\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (target && target.style.opacity === '' && target.className === layerClassName) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n    const context = this.context;\n\n    let data;\n    try {\n      data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {string} CSS transform.\n   */\n  createTransformString(transform) {\n    this.createTransformStringCanvas_.style.transform = toString(transform);\n    return this.createTransformStringCanvas_.style.transform;\n  }\n\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n   */\n  constructor(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        const localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      const imageImage = imageStyle.getImage(1);\n      const imageOrigin = imageStyle.getOrigin();\n      const imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScale();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  }\n}\n\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n\n    /**\n    * @type {!Object<string, import(\"./IconImage.js\").default>}\n    * @private\n    */\n    this.cache_ = {};\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.cacheSize_ = 0;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n  * FIXME empty description for jsdoc\n  */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n  * FIXME empty description for jsdoc\n  */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {import(\"../color.js\").Color} color Color.\n  * @return {import(\"./IconImage.js\").default} Icon image.\n  */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {import(\"../color.js\").Color} color Color.\n  * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n  */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n  * Set the cache size of the icon cache. Default is `32`. Change this value when\n  * your map uses more than 32 different icon images and you are not caching icon\n  * styles on the application level.\n  * @param {number} maxCacheSize Cache max size.\n  * @api\n  */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\n\nexport default ImageBase;\n","/**\n * @module ol/has\n */\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function() {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function() {\n        passive = true;\n      }\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\nimport {IMAGE_DECODE} from './has.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\n\nclass ImageWrapper extends ImageBase {\n\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function() {\n      listening = false;\n    };\n    promise.then(function() {\n      if (listening) {\n        loadHandler();\n      }\n    }).catch(function(error) {\n      if (listening) {\n        // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n        //        https://bugs.webkit.org/show_bug.cgi?id=198527\n        if (error.name === 'EncodingError' && error.message === 'Invalid image type.') {\n          loadHandler();\n        } else {\n          errorHandler();\n        }\n      }\n    });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler)\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ? document.createElement('canvas') : null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      const context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage(pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  replaceColor_() {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    const ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    const imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    const data = imgData.data;\n    const r = this.color_[0] / 255.0;\n    const g = this.color_[1] / 255.0;\n    const b = this.color_[2] / 255.0;\n\n    for (let i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @override\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @override\n   */\n  getHitDetectionImage(pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n    const displacement = this.getDisplacement();\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    offset[0] += displacement[0];\n    offset[1] += displacement[1];\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill :\n      new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {import(\"./TextPlacement.js\").default|string}\n     */\n    this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: this.getScale(),\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n      backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined,\n      padding: this.getPadding()\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {string|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {string|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {string|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {string|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {!Array<number>} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style\n */\n\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/render/canvas/hitdetet\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {Icon} from '../../style.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n  const width = size[0] / 2;\n  const height = size[1] / 2;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.ceil((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        const canvas = document.createElement('canvas');\n        canvas.width = imgSize[0];\n        canvas.height = imgSize[1];\n        const imgContext = canvas.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        const img = imgContext.canvas;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        const width = imgSize ? imgSize[0] : img.width;\n        const height = imgSize ? imgSize[1] : img.height;\n        const iconContext = createCanvasContext2D(width, height);\n        iconContext.drawImage(img, 0, 0);\n        style.setImage(new Icon({\n          img: img,\n          imgSize: imgSize,\n          anchor: image.getAnchor(),\n          anchorXUnits: IconAnchorUnits.PIXELS,\n          anchorYUnits: IconAnchorUnits.PIXELS,\n          offset: image.getOrigin(),\n          size: image.getSize(),\n          opacity: image.getOpacity(),\n          scale: image.getScale(),\n          rotation: image.getRotation(),\n          rotateWithView: image.getRotateWithView()\n        }));\n      }\n      const zIndex = Number(style.getZIndex());\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      const geometry = style.getGeometryFunction()(feature);\n      if (geometry && intersects(extent, geometry.getExtent())) {\n        byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) * 4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + (256 * (g + (256 * r)));\n    const indexFactor = Math.ceil((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, createEmpty, containsExtent, getWidth, intersects as intersectsExtent} from '../../extent.js';\nimport {fromUserExtent, toUserExtent, getUserProjection, getTransformFromProjections} from '../../proj.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {replayDeclutter} from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {toString as transformToString, makeScale, makeInverse, apply} from '../../transform.js';\nimport {createHitDetectionImageData, hitDetect} from '../../render/canvas/hitdetect.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderFrame(frameState, target) {\n\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    if (!replayGroup || replayGroup.isEmpty()) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped = !containsExtent(layerExtent, frameState.extent) && intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, layerExtent);\n      }\n    }\n\n\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n\n    const transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, 0);\n    const declutterReplays = this.getLayer().getDeclutter() ? {} : null;\n    replayGroup.execute(context, transform, rotation, snapToPixel, undefined, declutterReplays);\n\n    if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n      let startX = extent[0];\n      const worldWidth = getWidth(projectionExtent);\n      let world = 0;\n      let offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        const transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n        replayGroup.execute(context, transform, rotation, snapToPixel, undefined, declutterReplays);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        const transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n        replayGroup.execute(context, transform, rotation, snapToPixel, undefined, declutterReplays);\n        startX -= worldWidth;\n      }\n    }\n    if (declutterReplays) {\n      const viewHints = frameState.viewHints;\n      const hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      replayDeclutter(declutterReplays, context, rotation, 1, hifi, frameState.declutterItems);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getFeatures(pixel) {\n    return new Promise(function(resolve, reject) {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.renderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] / 2;\n        const height = size[1] / 2;\n        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (source.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms,\n          this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n      }\n      resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n    }.bind(this));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      const resolution = frameState.viewState.resolution;\n      const rotation = frameState.viewState.rotation;\n      const layer = this.getLayer();\n      /** @type {!Object<string, boolean>} */\n      const features = {};\n\n      const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance,\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback(feature, layer);\n          }\n        }, layer.getDeclutter() ? declutteredFeatures : null);\n\n      return result;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    const projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      const worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n      center[0] -= (worldsAway * worldWidth);\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorLayer.getDeclutter());\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      vectorSource.loadFeatures(toUserExtent(extent, projection), resolution, userProjection);\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      vectorSource.loadFeatures(extent, resolution, projection);\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(),\n      replayGroupInstructions, vectorLayer.getRenderBuffer());\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedRotation_ = viewState.rotation;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} opt_transform Transform from user to view projection.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(feature, squaredTolerance, styles, builderGroup, opt_transform) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          builderGroup, feature, styles[i], squaredTolerance,\n          this.boundHandleStyleImageChange_, opt_transform) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup, feature, styles, squaredTolerance,\n        this.boundHandleStyleImageChange_, opt_transform);\n    }\n    return loading;\n  }\n}\n\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\n\nexport default VectorLayer;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  let pointX = NaN;\n  let pointY = NaN;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      const t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      const o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default LineString;\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      xhr.withCredentials = withCredentials;\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection\n            }),\n            format.readProjection(source));\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      const sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport RBush_ from 'rbush/rbush.js';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number=} opt_maxEntries Max entries.\n   */\n  constructor(opt_maxEntries) {\n\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function(item) {\n      return item.value;\n    });\n  }\n\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3]\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function(item) {\n      return item.value;\n    });\n  }\n\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n  }\n\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n\n}\n\n\nexport default RBush;\n","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n   */\n  constructor(type, opt_feature) {\n\n    super(type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options=} opt_options Vector source options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  }\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  }\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_),\n        30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n    }\n  }\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    this.addEventListener(VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    collection.addEventListener(CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }.bind(this));\n    collection.addEventListener(CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }.bind(this));\n    this.featuresCollection_ = collection;\n  }\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  }\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features)\n    );\n  }\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray();\n    } else {\n      return [];\n    }\n  }\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  }\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this.loader_.call(this, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this.loading = this.loader_ !== VOID;\n      }\n    }\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  }\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n\n}\n\n\nexport default VectorSource;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport VectorLayer from './Vector.js';\nimport {assign} from '../obj.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport Text from '../style/Text.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\nimport LineString from '../geom/LineString.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent\n} from '../proj.js';\nimport {getCenter, intersects, equals, getIntersection, isEmpty} from '../extent.js';\nimport {clamp} from '../math.js';\nimport Style from '../style/Style.js';\nimport Feature from '../Feature.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport Point from '../geom/Point.js';\nimport Collection from '../Collection.js';\n\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom\n * @property {string} text\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n      renderBuffer: 0\n    }, options);\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLatP_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLonP_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLatP_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLonP_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n        degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n        degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n        options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n        options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text: options.lonLabelStyle !== undefined ? options.lonLabelStyle.clone() :\n          new Text({\n            font: '12px Calibri,sans-serif',\n            textBaseline: 'bottom',\n            fill: new Fill({\n              color: 'rgba(0,0,0,1)'\n            }),\n            stroke: new Stroke({\n              color: 'rgba(255,255,255,1)',\n              width: 3\n            })\n          })\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = function(feature) {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      }.bind(this);\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text: options.latLabelStyle !== undefined ? options.latLabelStyle.clone() :\n          new Text({\n            font: '12px Calibri,sans-serif',\n            textAlign: 'right',\n            fill: new Fill({\n              color: 'rgba(0,0,0,1)'\n            }),\n            stroke: new Stroke({\n              color: 'rgba(255,255,255,1)',\n              width: 3\n            })\n          })\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = function(feature) {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      }.bind(this);\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    this.setRenderOrder(null);\n\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    if (this.loadedExtent_ && !equals(this.loadedExtent_, extent)) {\n      // we should not keep track of loaded extents\n      this.getSource().removeLoadedExtent(this.loadedExtent_);\n    }\n    return [extent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [-Infinity, -Infinity, Infinity, Infinity];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (this.renderedExtent_ && equals(this.renderedExtent_, renderExtent)) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = resolution * resolution / 4;\n\n    const updateProjectionInfo = !this.projection_ ||\n      !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridiansLabels_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallelsLabels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    let labelData;\n    if (this.meridiansLabels_) {\n      for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n        labelData = this.meridiansLabels_[i];\n        feature = this.featurePool_[poolIndex++];\n        feature.setGeometry(labelData.geom);\n        feature.setStyle(this.lonLabelStyle_);\n        feature.set('graticule_label', labelData.text);\n        featuresColl.push(feature);\n      }\n    }\n    if (this.parallelsLabels_) {\n      for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n        labelData = this.parallelsLabels_[i];\n        feature = this.featurePool_[poolIndex++];\n        feature.setGeometry(labelData.geom);\n        feature.setStyle(this.latLabelStyle_);\n        feature.set('graticule_label', labelData.text);\n        featuresColl.push(feature);\n      }\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const textPoint = this.getMeridianPoint_(lineString, extent, index);\n        this.meridiansLabels_[index] = {\n          geom: textPoint,\n          text: this.lonLabelFormatter_(lon)\n        };\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const textPoint = this.getParallelPoint_(lineString, extent, index);\n        this.parallelsLabels_[index] = {\n          geom: textPoint,\n          text: this.latLabelFormatter_(lat)\n        };\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    const centerLonLat = this.toLonLatTransform_(center);\n    let centerLon = centerLonLat[0];\n    let centerLat = centerLonLat[1];\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    let validExtent = [\n      Math.max(extent[0], this.minLonP_),\n      Math.max(extent[1], this.minLatP_),\n      Math.min(extent[2], this.maxLonP_),\n      Math.min(extent[3], this.maxLatP_)\n    ];\n\n    validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n    const maxLat = validExtent[3];\n    const maxLon = validExtent[2];\n    const minLat = validExtent[1];\n    const minLon = validExtent[0];\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lon != this.minLon_ && cnt++ < maxLines) {\n      lon = Math.max(lon - interval, this.minLon_);\n      idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    while (lon != this.maxLon_ && cnt++ < maxLines) {\n      lon = Math.min(lon + interval, this.maxLon_);\n      idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = this.intervals_[i] / 2;\n      p1[0] = centerLon - delta;\n      p1[1] = centerLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = centerLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    const clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom, clampedTop);\n    const coordinate = [flatCoordinates[0], lat];\n    let point;\n    if (index in this.meridiansLabels_) {\n      point = this.meridiansLabels_[index].geom;\n      point.setCoordinates(coordinate);\n    } else {\n      point = new Point(coordinate);\n    }\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n    } else {\n      lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    const clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft, clampedRight);\n    const coordinate = [lon, flatCoordinates[1]];\n    let point;\n    if (index in this.parallelsLabels_) {\n      point = this.parallelsLabels_[index].geom;\n      point.setCoordinates(coordinate);\n    } else {\n      point = new Point(coordinate);\n    }\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n    const worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    this.maxLatP_ = worldExtentP[3];\n    this.maxLonP_ = worldExtentP[2];\n    this.minLatP_ = worldExtentP[1];\n    this.minLonP_ = worldExtentP[0];\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n    this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n    this.projection_ = projection;\n  }\n}\n\n\nexport default Graticule;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\n\nclass ImageCanvas extends ImageBase {\n\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader=} opt_loader Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    const state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\n\nexport default ImageCanvas;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4\n};\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {TileState} state State.\n   * @param {Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {TileState} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\n\nclass ImageTile extends Tile {\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {TileState} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nclass MapBrowserEvent extends MapEvent {\n\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {Event} browserEvent Browser event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original browser event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    this.originalEvent.preventDefault();\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    this.originalEvent.stopPropagation();\n  }\n}\n\n\nexport default MapBrowserEvent;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v. 2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n\n// Variable to hold current primary touch event identifier.\n// iOS needs this since it does not attribute\n// identifier 0 to primary touch event.\nlet primaryTouchId = null;\n\n// Variable to hold mouse pointer captures.\nlet mouseCaptureTarget = null;\n\nif (!(\"PointerEvent\" in window)) {\n  // Define {set,release}PointerCapture\n  definePointerCapture();\n\n  // Create Pointer polyfill from mouse events only on non-touch device\n  if (!(\"TouchEvent\" in window)) {\n    addMouseToPointerListener(document, \"mousedown\", \"pointerdown\");\n    addMouseToPointerListener(document, \"mousemove\", \"pointermove\");\n    addMouseToPointerListener(document, \"mouseup\", \"pointerup\");\n  }\n\n  // Define Pointer polyfill from touch events\n  addTouchToPointerListener(document, \"touchstart\", \"pointerdown\");\n  addTouchToPointerListener(document, \"touchmove\", \"pointermove\");\n  addTouchToPointerListener(document, \"touchend\", \"pointerup\");\n}\n\n// Function defining {set,release}PointerCapture from {set,releas}Capture\nfunction definePointerCapture() {\n  Element.prototype.setPointerCapture = Element.prototype.setCapture;\n  Element.prototype.releasePointerCapture = Element.prototype.releaseCapture;\n}\n\n// Function converting a Mouse event to a Pointer event.\nfunction addMouseToPointerListener(target, mouseType, pointerType) {\n  target.addEventListener(mouseType, mouseEvent => {\n    let pointerEvent = new MouseEvent(pointerType, mouseEvent);\n    pointerEvent.pointerId = 1;\n    pointerEvent.isPrimary = true;\n    pointerEvent.pointerType = \"mouse\";\n    pointerEvent.width = 1;\n    pointerEvent.height = 1;\n    pointerEvent.tiltX = 0;\n    pointerEvent.tiltY = 0;\n\n    // pressure is 0.5 if a button is holded\n    \"buttons\" in mouseEvent && mouseEvent.buttons !== 0\n      ? (pointerEvent.pressure = 0.5)\n      : (pointerEvent.pressure = 0);\n\n    // if already capturing mouse event, transfer target\n    // and don't forget implicit release on mouseup.\n    let target = mouseEvent.target;\n    if (mouseCaptureTarget !== null) {\n      target = mouseCaptureTarget;\n      if (mouseType === \"mouseup\") {\n        mouseCaptureTarget = null;\n      }\n    }\n\n    target.dispatchEvent(pointerEvent);\n    if (pointerEvent.defaultPrevented) {\n      mouseEvent.preventDefault();\n    }\n  });\n}\n\n// Function converting a Touch event to a Pointer event.\nfunction addTouchToPointerListener(target, touchType, pointerType) {\n  target.addEventListener(touchType, touchEvent => {\n    const changedTouches = touchEvent.changedTouches;\n    const nbTouches = changedTouches.length;\n    for (let t = 0; t < nbTouches; t++) {\n      let pointerEvent = new CustomEvent(pointerType, {\n        bubbles: true,\n        cancelable: true\n      });\n      pointerEvent.ctrlKey = touchEvent.ctrlKey;\n      pointerEvent.shiftKey = touchEvent.shiftKey;\n      pointerEvent.altKey = touchEvent.altKey;\n      pointerEvent.metaKey = touchEvent.metaKey;\n\n      const touch = changedTouches.item(t);\n      pointerEvent.clientX = touch.clientX;\n      pointerEvent.clientY = touch.clientY;\n      pointerEvent.screenX = touch.screenX;\n      pointerEvent.screenY = touch.screenY;\n      pointerEvent.pageX = touch.pageX;\n      pointerEvent.pageY = touch.pageY;\n      const rect = touch.target.getBoundingClientRect();\n      pointerEvent.offsetX = touch.clientX - rect.left;\n      pointerEvent.offsetY = touch.clientY - rect.top;\n      pointerEvent.pointerId = 1 + touch.identifier;\n\n      // Default values for standard MouseEvent fields.\n      pointerEvent.button = 0;\n      pointerEvent.buttons = 1;\n      pointerEvent.movementX = 0;\n      pointerEvent.movementY = 0;\n      pointerEvent.region = null;\n      pointerEvent.relatedTarget = null;\n      pointerEvent.x = pointerEvent.clientX;\n      pointerEvent.y = pointerEvent.clientY;\n\n      // Pointer event details\n      pointerEvent.pointerType = \"touch\";\n      pointerEvent.width = 1;\n      pointerEvent.height = 1;\n      pointerEvent.tiltX = 0;\n      pointerEvent.tiltY = 0;\n      pointerEvent.pressure = 1;\n\n      // First touch is the primary pointer event.\n      if (touchType === \"touchstart\" && primaryTouchId === null) {\n        primaryTouchId = touch.identifier;\n      }\n      pointerEvent.isPrimary = touch.identifier === primaryTouchId;\n\n      // If first touch ends, reset primary touch id.\n      if (touchType === \"touchend\" && pointerEvent.isPrimary) {\n        primaryTouchId = null;\n      }\n\n      touchEvent.target.dispatchEvent(pointerEvent);\n      if (pointerEvent.defaultPrevented) {\n        touchEvent.preventDefault();\n      }\n    }\n  });\n}\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nclass MapBrowserPointerEvent extends MapBrowserEvent {\n\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {PointerEvent} pointerEvent Pointer event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    super(type, map, pointerEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {PointerEvent}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n}\n\nexport default MapBrowserPointerEvent;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport 'elm-pep';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport EventType from './events/EventType.js';\n\nclass MapBrowserEventHandler extends EventTarget {\n\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      this.dragListenerKeys_.push(\n        listen(document,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(document,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    if (this.originalPointerMoveEvent_.defaultPrevented) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_),\n      31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < (count >> 1)) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex = rIndex < count &&\n          priorities[rIndex] < priorities[lIndex] ?\n        rIndex : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n\n}\n\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nclass TileQueue extends PriorityQueue {\n\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\n\nexport default TileQueue;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center, resolution, size, opt_isMoving) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        let minX = extent[0] + viewWidth / 2;\n        let maxX = extent[2] - viewWidth / 2;\n        let minY = extent[1] + viewHeight / 2;\n        let maxY = extent[3] - viewHeight / 2;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent ?\n          getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) :\n          maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent ?\n          getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) :\n          maxResolution;\n        const minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset);\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent ?\n          getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) :\n          maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT, toUserCoordinate, toUserExtent, fromUserCoordinate, fromUserExtent, getUserProjection} from './proj.js';\nimport Units from './proj/Units.js';\nimport {equals} from './coordinate.js';\nimport {easeOut} from './easing.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n\n  /**\n   * @param {ViewOptions=} opt_options View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(options.center !== undefined ? options.center : null);\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n    this.resolveConstraints(0);\n\n    this.setProperties(properties);\n\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(options.center, this.getProjection());\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      anchor = anchor ||\n        series.filter(function(animation) {\n          return !animation.complete;\n        })[0].anchor;\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n            this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          const rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(rotation, true);\n            this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation))\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size) ? opt_size.slice() : [100, 100];\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view shoud allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        const value = (Math.log(maxResolution / resolution) / logPower) / max;\n        return value;\n      });\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom()\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n      const zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n    } else {\n      return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    const options = assign({size: this.getViewportSize_()}, opt_options || {});\n\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent.clone().transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions=} opt_options Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSize_();\n    }\n    const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = [centerX, centerY];\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal({\n        resolution: resolution,\n        center: this.getConstrainedCenter(center, resolution),\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    // calculate rotated position\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    const resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    const centerX = rotX * cosAngle - rotY * sinAngle;\n    const centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenterInternal([centerX, centerY]);\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n   * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n    const newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number=} opt_duration The animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n    const newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)) {\n\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth = options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld = options.multiWorld !== undefined ?\n    options.multiWorld : false;\n\n  const smooth =\n      options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n\n  const showFullExtent =\n      options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(resolutions, smooth,\n        !constrainOnlyCenter && extent, showFullExtent);\n    } else {\n      resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth,\n        !constrainOnlyCenter && extent, showFullExtent);\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor, maxResolution, minResolution, smooth,\n        !constrainOnlyCenter && extent, showFullExtent);\n    } else {\n      resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth,\n        !constrainOnlyCenter && extent, showFullExtent);\n    }\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(getChangeEventType(Property.LAYERS), this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      layerState.minZoom = Math.max(\n        layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(\n        layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\n\nexport default LayerGroup;\n","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\nimport {toUserCoordinate, fromUserCoordinate} from './proj.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    const handleMapBrowserEvent = this.handleMapBrowserEvent.bind(this);\n    for (const key in MapBrowserEventType) {\n      this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], handleMapBrowserEvent);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    const handleBrowserEvent = this.handleBrowserEvent.bind(this);\n    this.viewport_.addEventListener(EventType.CONTEXTMENU, handleBrowserEvent, false);\n    this.viewport_.addEventListener(EventType.WHEEL, handleBrowserEvent,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), this.handleLayerGroupChanged_);\n    this.addEventListener(getChangeEventType(MapProperty.VIEW), this.handleViewChanged_);\n    this.addEventListener(getChangeEventType(MapProperty.SIZE), this.handleSizeChanged_);\n    this.addEventListener(getChangeEventType(MapProperty.TARGET), this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function(control) {\n        control.setMap(this);\n      }.bind(this));\n\n    this.controls.addEventListener(CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }.bind(this));\n\n    this.controls.addEventListener(CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }.bind(this));\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function(interaction) {\n        interaction.setMap(this);\n      }.bind(this));\n\n    this.interactions.addEventListener(CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }.bind(this));\n\n    this.interactions.addEventListener(CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }.bind(this));\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }.bind(this));\n\n    this.overlays_.addEventListener(CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this));\n\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.mapBrowserEventHandler_.dispose();\n    this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n    this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    const layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null,\n      layerFilter, null);\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      features.push(feature);\n    }, opt_options);\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance = options.hitTolerance !== undefined ?\n      options.hitTolerance * this.frameState_.pixelRatio : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    const frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    const center = frameState.viewState.center;\n    const deltaX = tileCenter[0] - center[0];\n    const deltaY = tileCenter[1] - center[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  }\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const target = /** @type {Node} */ (mapBrowserEvent.originalEvent.target);\n    if (!mapBrowserEvent.dragging) {\n      if (this.overlayContainerStopEvent_.contains(target) || !document.body.contains(target)) {\n        // Abort if the event target is a child of the container that doesn't allow\n        // event propagation or is no longer in the page. It's possible for the target to no longer\n        // be in the page if it has been removed in an event listener, this might happen in a Control\n        // that recreates it's content based on user interaction either manually or via a render\n        // in something like https://reactjs.org/\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    const interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !this.getLoading()) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      const keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterItems: previousFrameState ? previousFrameState.declutterItems : [],\n        extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        const moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.postRenderTimeoutHandle_ = setTimeout(this.handlePostRender.bind(this), 0);\n\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      const computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10)\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @private\n     * @type {function(import(\"../MapEvent.js\").default): void}\n     */\n    this.render_ = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {\n    this.render_.call(this, mapEvent);\n  }\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  }\n}\n\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {inView} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n\n  /**\n   * @param {Options=} opt_options Attribution options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(EventType.CLICK, this.handleClick_.bind(this), false);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n}\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n\n  /**\n   * @param {Options=} opt_options Rotate options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    const className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(EventType.CLICK, this.handleClick_.bind(this), false);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n}\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  const rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    const transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      const contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n\n  /**\n   * @param {Options=} opt_options Zoom options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    const className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    inElement.addEventListener(EventType.CLICK, this.handleClick_.bind(this, delta), false);\n\n    const outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    outElement.addEventListener(EventType.CLICK, this.handleClick_.bind(this, -delta), false);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\n\nexport default Zoom;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\nconst events = ['fullscreenchange', 'webkitfullscreenchange', 'MSFullscreenChange'];\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nclass FullScreen extends Control {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    const labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    this.button_.addEventListener(EventType.CLICK, this.handleClick_.bind(this), false);\n\n    const cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      let element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    const activeClassName = this.cssClassName_ + '-true';\n    const inactiveClassName = this.cssClassName_ + '-false';\n    const nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(activeClassName);\n    element.classList.remove(inactiveClassName);\n    element.classList.add(nextClassName);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        this.listenerKeys.push(\n          listen(document, events[i], this.handleFullScreenChange_, this));\n      }\n    }\n  }\n}\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  const body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport 'elm-pep';\nimport {listen} from '../events.js';\nimport EventType from '../pointer/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from './Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection, getUserProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n\n  /**\n   * @param {Options=} opt_options Mouse position options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render || render,\n      target: options.target\n    });\n\n    this.addEventListener(getChangeEventType(PROJECTION), this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return (\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return (\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION))\n    );\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, userProjection);\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n}\n\n\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n}\n\n\nexport default MousePosition;\n","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform\n} from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getUserProjection, getTransformFromProjections} from './proj.js';\n\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  const canvas = context.canvas;\n  const options = opt_options ? opt_options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  const frameState = event.frameState;\n  const transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n  const squaredTolerance = getSquaredTolerance(frameState.viewState.resolution, frameState.pixelRatio);\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(userProjection, frameState.viewState.projection);\n  }\n  return new CanvasImmediateRenderer(\n    event.context, frameState.pixelRatio, frameState.extent, transform,\n    frameState.viewState.rotation, squaredTolerance, userTransform);\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  const result = pixel.slice(0);\n  applyTransform(event.inversePixelTransform.slice(), result);\n  return result;\n}\n\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n  if (declutterTree) {\n    declutterTree.clear();\n  }\n  const items = frameState.declutterItems;\n  for (let z = items.length - 1; z >= 0; --z) {\n    const item = items[z];\n    const zIndexItems = item.items;\n    for (let i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n      declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\n    }\n  }\n  items.length = 0;\n  return declutterTree;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport {abstract} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {renderDeclutterItems} from '../render.js';\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     */\n    this.declutterTree_ = null;\n\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer) {\n      return callback.call(thisArg, feature, managed ? layer : null);\n    }\n\n    const projection = viewState.projection;\n\n    let translatedCoordinate = coordinate;\n    const offsets = [[0, 0]];\n    if (projection.canWrapX()) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      const x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        const worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n      if (checkWrapped) {\n        offsets.push([-worldWidth, 0], [worldWidth, 0]);\n      }\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n    let declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n        if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter.call(thisArg2, layer)) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX() ? translatedCoordinate : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState, hitTolerance, callback, declutteredFeatures);\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport ObjectEventType from '../ObjectEventType.js';\n\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function(a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (!inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY && layerState.sourceState != SourceState.UNDEFINED)) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n    }\n    super.renderFrame(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter(layer)) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n}\n\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addEventListener(getChangeEventType(Property.ELEMENT), this.handleElementChanged);\n    this.addEventListener(getChangeEventType(Property.MAP), this.handleMapChanged);\n    this.addEventListener(getChangeEventType(Property.OFFSET), this.handleOffsetChanged);\n    this.addEventListener(getChangeEventType(Property.POSITION), this.handlePositionChanged);\n    this.addEventListener(getChangeEventType(Property.POSITIONING), this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      const container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  panIntoView() {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    const margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenterInternal());\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        const newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    let offsetX = offset[0];\n    let offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = '';\n        style.left = '';\n      }\n      const right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = right;\n        style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = '';\n        style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      const left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = left;\n        style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = '';\n        style.top = '';\n      }\n      const bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = bottom;\n        style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = '';\n        style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      const top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = 'top';\n        style.top = top;\n      }\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\n\nexport default Overlay;\n","/**\n * @module ol/control/OverviewMap\n */\nimport PluggableMap from '../PluggableMap.js';\nimport CompositeMapRenderer from '../renderer/Composite.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals as equalsExtent, getBottomRight, getTopLeft, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n\nclass ControlledMap extends PluggableMap {\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n\n  /**\n   * @param {Options=} opt_options OverviewMap options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(EventType.CLICK, this.handleClick_.bind(this), false);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {ControlledMap}\n     * @private\n     */\n    this.ovmap_ = new ControlledMap({\n      view: options.view\n    });\n    const ovmap = this.ovmap_;\n\n    if (options.layers) {\n      options.layers.forEach(function(layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.CENTER_CENTER,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY\n      };\n    };\n\n    const move = function(event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(/** @type {Event} */ (position));\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function(event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    view.addEventListener(getChangeEventType(ViewProperty.ROTATION), this.boundHandleRotationChanged_);\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeEventListener(getChangeEventType(ViewProperty.ROTATION), this.boundHandleRotationChanged_);\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel =\n        ovmap.getPixelFromCoordinateInternal(getTopLeft(extent));\n    const bottomRightPixel =\n        ovmap.getPixelFromCoordinateInternal(getBottomRight(extent));\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = mapSize[0] * resolution / ovresolution;\n    const height = mapSize[1] * resolution / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n}\n\n\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n\n  /**\n   * @param {Options=} opt_options Scale line options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const className = options.className !== undefined ? options.className :\n      options.bar ? 'ol-scale-bar' : 'ol-scale-line';\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addEventListener(getChangeEventType(UNITS_PROP), this.handleUnitsChanged_);\n\n    this.setUnits(options.units || Units.METRIC);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    let pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n\n    let nominalCount = this.minWidth_ * pointResolution;\n    let suffix = '';\n    if (units == Units.DEGREES) {\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n    let html;\n    if (this.scaleBar_) {\n      html = this.createScaleBar(width, count, suffix);\n    } else {\n      html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n    }\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @returns {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n    const scaleSteps = [];\n    const stepWidth = width / this.scaleBarSteps_;\n    let backgroundColor = '#ffffff';\n    for (let i = 0; i < this.scaleBarSteps_; i++) {\n      if (i === 0) {\n        // create the first marker at position 0\n        scaleSteps.push(this.createMarker('absolute', i));\n      }\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n            'class=\"ol-scale-singlebar\" ' +\n            'style=' +\n              '\"width: ' + stepWidth + 'px;' +\n              'background-color: ' + backgroundColor + ';\"' +\n          '>' +\n          '</div>' +\n          this.createMarker('relative', i) +\n          /*render text every second step, except when only 2 steps */\n          (i % 2 === 0 || this.scaleBarSteps_ === 2 ?\n            this.createStepText(i, width, false, scale, suffix) :\n            ''\n          ) +\n        '</div>'\n      );\n      if (i === this.scaleBarSteps_ - 1) {\n        {/*render text at the end */}\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n      }\n      // switch colors of steps between black and white\n      if (backgroundColor === '#ffffff') {\n        backgroundColor = '#000000';\n      } else {\n        backgroundColor = '#ffffff';\n      }\n    }\n\n    let scaleBarText;\n    if (this.scaleBarText_) {\n      scaleBarText = '<div ' +\n      'class=\"ol-scale-text\" ' +\n      'style=\"width: ' + width + 'px;\">' +\n      mapScale +\n    '</div>';\n    } else {\n      scaleBarText = '';\n    }\n    const container = '<div ' +\n      'style=\"display: flex;\">' +\n      scaleBarText +\n      scaleSteps.join('') +\n    '</div>';\n    return container;\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {string} position - The position, absolute or relative\n   * @param {number} i - The iterator\n   * @returns {string} The stringified div containing the marker\n   */\n  createMarker(position, i) {\n    const top = position === 'absolute' ? 3 : -10;\n    return '<div ' +\n        'class=\"ol-scale-step-marker\" ' +\n        'style=\"position: ' + position + ';' +\n          'top: ' + top + 'px;\"' +\n      '></div>';\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i - The iterator\n   * @param {number} width - The width the scalebar will currently use\n   * @param {boolean} isLast - Flag indicating if we add the last step text\n   * @param {number} scale - The current scale for the whole scalebar\n   * @param {string} suffix - The suffix for the scale\n   * @returns {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_ * i) * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : width / this.scaleBarSteps_ * -1;\n    const minWidth = i === 0 ? 0 : width / this.scaleBarSteps_ * 2;\n    return '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n        'margin-left: ' + margin + 'px;' +\n        'text-align: ' + (i === 0 ? 'left' : 'center') + '; ' +\n        'min-width: ' + minWidth + 'px;' +\n        'left: ' + (isLast ? width + 'px' : 'unset') + ';\"' +\n      '>' +\n      lengthString +\n    '</div>';\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = this.getMap().getView().getResolution();\n    const dpi = 25.4 / 0.28;\n    const mpu = this.viewState_.projection.getMetersPerUnit();\n    const inchesPerMeter = 39.37;\n    return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n  }\n}\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport 'elm-pep';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n\n  /**\n   * @param {Options=} opt_options Zoom slider options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n      * @type {!Array.<import(\"../events.js\").EventsKey>}\n      * @private\n      */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(PointerEventType.POINTERDOWN, this.handleDraggerStart_.bind(this), false);\n    containerElement.addEventListener(PointerEventType.POINTERMOVE, this.handleDraggerDrag_.bind(this), false);\n    containerElement.addEventListener(PointerEventType.POINTERUP, this.handleDraggerEnd_.bind(this), false);\n\n    containerElement.addEventListener(EventType.CLICK, this.handleContainerClick_.bind(this), false);\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    const containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const computedStyle = getComputedStyle(thumb);\n    const thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    const thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        this.dragListenerKeys_.push(\n          listen(document, PointerEventType.POINTERMOVE, drag, this),\n          listen(document, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n}\n\n\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  const res = mapEvent.frameState.viewState.resolution;\n  this.currentResolution_ = res;\n  this.setThumbPosition_(res);\n}\n\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport EventType from '../events/EventType.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(EventType.CLICK, this.handleClick_.bind(this), false);\n\n    const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/control\n */\nimport Collection from './Collection.js';\nimport Attribution from './control/Attribution.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} options Options.\n   */\n  constructor(options) {\n    super();\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center)\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function(mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function(mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function(mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function(mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function(mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Interaction.js\").InteractionOptions} */ (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.pointerEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n\n}\n\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {scale as scaleCoordinate, rotate as rotateCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys, primaryAction, focus} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      stopDown: FALSE\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : defaultCondition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  /**\n   * @private\n   * @param {import(\"../MapBrowserEvent\").default} mapBrowserEvent Event.\n   * @return {boolean} Condition passes.\n   */\n  conditionInternal_(mapBrowserEvent) {\n    let pass = true;\n    if (mapBrowserEvent.map.getTargetElement().hasAttribute('tabindex')) {\n      pass = focus(mapBrowserEvent);\n    }\n    return pass && this.condition_(mapBrowserEvent);\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1]\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.conditionInternal_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Browser event.\n * @return {boolean} Combined condition result.\n */\nfunction defaultCondition(mapBrowserEvent) {\n  return noModifierKeys(mapBrowserEvent) && primaryAction(mapBrowserEvent);\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    const coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nclass DragBoxEvent extends Event {\n\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n}\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  const map = this.getMap();\n  const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtentInternal(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n      map.getPixelFromCoordinateInternal(getTopRight(extent))]);\n    const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n  const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n  view.animateInternal({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    const keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      let deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      const delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    const charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      const map = mapBrowserEvent.map;\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport {always, focus} from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport Interaction from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Interaction.js\").InteractionOptions} */ (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * Events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.eventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n\n  }\n\n  /**\n   * @private\n   * @param {import(\"../MapBrowserEvent\").default} mapBrowserEvent Event.\n   * @return {boolean} Condition passes.\n   */\n  conditionInternal_(mapBrowserEvent) {\n    let pass = true;\n    if (mapBrowserEvent.map.getTargetElement().hasAttribute('tabindex')) {\n      pass = focus(mapBrowserEvent);\n    }\n    return pass && this.condition_(mapBrowserEvent);\n  }\n\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.timeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.conditionInternal_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    const view = map.getView();\n    if (this.timeoutId_) {\n      clearTimeout(this.timeoutId_);\n    } else {\n      view.beginInteraction();\n    }\n    this.timeoutId_ = setTimeout(this.endInteraction_.bind(this), this.eventGap_);\n    view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n    this.startTime_ = now;\n    return false;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nclass DragAndDropEvent extends Event {\n\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   */\n  constructor(type, file, opt_features, opt_projection) {\n\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"../format/Feature.js\").default>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      const view = map.getView();\n      projection = view.getProjection();\n    }\n\n    const formatConstructors = this.formatConstructors_;\n    let features = [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      const format = new formatConstructors[i]();\n      features = this.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number=} opt_radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getCoordinates() {\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n    this.changed();\n  }\n\n}\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingssAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\n\nexport default MultiPolygon;\n","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nclass DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry, projection) {\n          const circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center, fromUserCoordinate(coordinates[1], projection));\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        const mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry, projection) {\n          let geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ? options.freehandCondition : shiftKeyOnly;\n    }\n\n    this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), this.updateState_);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == 'mouse' ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    const circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event.coordinate);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  handlePointerMove_(event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(event) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        const map = event.map;\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const pixel = event.pixel;\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  createOrUpdateSketchPoint_(event) {\n    const coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  startDrawing_(event) {\n    const start = event.coordinate;\n    const projection = event.map.getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(this.sketchCoords_, undefined, projection);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  modifyDrawing_(event) {\n    let coordinate = event.coordinate;\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = event.map.getView().getProjection();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry, projection);\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    let sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      const ring = geometry.getLinearRing(0);\n      sketchLineGeom = this.sketchLine_.getGeometry();\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let coordinates;\n    /** @type {LineString} */\n    let sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended into\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    let sketchCoords = [];\n    if (mode === Mode.LINE_STRING) {\n      sketchCoords = /** @type {LineCoordType} */ this.sketchCoords_;\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords = this.sketchCoords_ && this.sketchCoords_.length ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0] : [];\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    const ending = sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    // Duplicate last coordinate for sketch drawing\n    this.addToDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry, projection) {\n    const center = fromUserCoordinate(/** @type {LineCoordType} */ (coordinates)[0], projection);\n    const end = fromUserCoordinate(/** @type {LineCoordType} */ (coordinates)[1], projection);\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    let angle = opt_angle;\n    if (!opt_angle) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry, projection) {\n      const extent = boundingExtent(/** @type {LineCoordType} */ (coordinates).map(function(coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      }));\n      const boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      let geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry.transform(projection, userProjection);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {toUserExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nclass ExtentEvent extends Event {\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n}\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @returns {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @returns {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function(point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n      const y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n      //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n    //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default Extent;\n","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer as bufferExtent, createOrUpdateFromCoordinate as createExtent} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserExtent, toUserExtent, fromUserCoordinate, toUserCoordinate} from '../proj.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserPointerEvent\n   * Associated {@link module:ol/MapBrowserPointerEvent}.\n   */\n  constructor(type, features, mapBrowserPointerEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this)\n    };\n\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    let features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(VectorEventType.ADDFEATURE, this.handleSourceAdd_.bind(this));\n      this.source_.addEventListener(VectorEventType.REMOVEFEATURE, this.handleSourceRemove_.bind(this));\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(CollectionEventType.ADD, this.handleFeatureAdd_.bind(this));\n    this.features_.addEventListener(CollectionEventType.REMOVE, this.handleFeatureRemove_.bind(this));\n\n    /**\n     * @type {import(\"../MapBrowserPointerEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n   * @private\n   */\n  willModifyFeatures_(evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (!mapBrowserEvent.map.getView().getInteracting() &&\n        mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n        !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt);\n\n    const vertex = evt.coordinate;\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const depth = segmentData.depth;\n      const geometry = segmentData.geometry;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else { // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.modified_ = false;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.feature);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE && segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n          const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch, projection);\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (coordinatesEqual(segment[0], vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (coordinatesEqual(segment[1], vertex) && !componentSegments[uid][1]) {\n          // prevent dragging closed linestrings by the connecting node\n          if ((segmentDataMatch.geometry.getType() ===\n              GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n              GeometryType.MULTI_LINE_STRING) &&\n              componentSegments[uid][0] &&\n              componentSegments[uid][0].index === 0) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (getUid(segment) in this.vertexSegments_ &&\n            (!componentSegments[uid][0] && !componentSegments[uid][1]) &&\n            this.insertVertexCondition_(evt)) {\n          insertVertices.push([segmentDataMatch, vertex]);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_.apply(this, insertVertices[j]);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.modified_) {\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_coordinate The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, opt_coordinate) {\n    const pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function(a, b) {\n      return projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n          projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection);\n    };\n\n    const viewExtent = fromUserExtent(createExtent(pixelCoordinate, tempExtent), projection);\n    const buffer = map.getView().getResolution() * this.pixelTolerance_;\n    const box = toUserExtent(bufferExtent(viewExtent, buffer, tempExtent), projection);\n\n    const rBush = this.rBush_;\n    const nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      const node = nodes[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE && node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      const removed = this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          };\n\n          this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  }\n}\n\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE && segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(closestOnSegment(coordinate, tempSegment), projection);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport Collection from '../Collection.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * If set to `false` the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nclass SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ = options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * An association between selected feature (key)\n     * and original style (value)\n     * @private\n     * @type {Object.<number, import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n     */\n    this.featureStyleAssociation_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    const features = this.getFeatures();\n    features.addEventListener(CollectionEventType.ADD, this.addFeature_.bind(this));\n    features.addEventListener(CollectionEventType.REMOVE, this.removeFeature_.bind(this));\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return (\n      /** @type {import('../layer/Vector.js').default} */ (this.featureLayerAssociation_[getUid(feature)])\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @override\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.removeSelectedStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map && this.style_) {\n      this.features_.forEach(this.giveSelectedStyle_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.giveSelectedStyle_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.removeSelectedStyle_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  giveSelectedStyle_(feature) {\n    const key = getUid(feature);\n    this.featureStyleAssociation_[key] = feature.getStyle();\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  removeSelectedStyle_(feature) {\n    const key = getUid(feature);\n    feature.setStyle(this.featureStyleAssociation_[key]);\n    delete this.featureStyleAssociation_[key];\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.getFeatures();\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return true;\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {fromUserCoordinate, toUserCoordinate} from '../proj.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (/** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n  } else if (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n    return /** @type {import(\"../Feature.js\").default} */ (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n  }\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n    * Segment RTree for each layer\n    * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n    /**\n    * @const\n    * @private\n    * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this)\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, opt_listen) {\n    const register = opt_listen !== undefined ? opt_listen : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter(feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, opt_unlisten) {\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    const upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    let segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    let snapped = false;\n    let vertex = null;\n    let vertexPixel = null;\n\n    if (segments.length === 0) {\n      return {\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      };\n    }\n\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    let closestSegmentData;\n    let minSquaredDistance = Infinity;\n    for (let i = 0; i < segments.length; ++i) {\n      const segmentData = segments[i];\n      tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n      tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n      const delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n      if (delta < minSquaredDistance) {\n        closestSegmentData = segmentData;\n        minSquaredDistance = delta;\n      }\n    }\n    const closestSegment = closestSegmentData.segment;\n\n    if (this.vertex_ && !this.edge_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      if (dist <= this.pixelTolerance_) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      const isCircle = closestSegmentData.feature.getGeometry().getType() === GeometryType.CIRCLE;\n      if (isCircle) {\n        vertex = closestOnCircle(pixelCoordinate,\n          /** @type {import(\"../geom/Circle.js\").default} */ (closestSegmentData.feature.getGeometry()));\n      } else {\n        tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n        tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n        vertex = toUserCoordinate(closestOnSegment(projectedCoordinate, tempSegment), projection);\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          if (dist <= this.pixelTolerance_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n\n    return {\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    };\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const polygon = fromCircle(geometry);\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter(feature, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = {\n        feature: feature,\n        segment: [coordinates, coordinates]\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = {\n            feature: feature,\n            segment: segment\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = {\n      feature: feature,\n      segment: [coordinates, coordinates]\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n}\n\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), this.handleActiveChanged_);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART, features,\n          event.coordinate, this.startCoordinate_, event));\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND, features,\n          event.coordinate, this.startCoordinate_, event));\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function(feature) {\n        const geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING, features,\n          newCoordinate, this.startCoordinate_, event));\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature, layer) {\n        if (this.filter_(feature, layer)) {\n          if (!this.features_ || includes(this.features_.getArray(), feature)) {\n            return feature;\n          }\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\n\nexport default Map;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.getCount() > this.highWaterMark;\n  }\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @param {*=} opt_options Options (reserverd for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    }.bind(this));\n  }\n}\n\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n       this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n       this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return this.minX <= tileRange.maxX &&\n       this.maxX >= tileRange.minX &&\n       this.minY <= tileRange.maxY &&\n       this.maxY >= tileRange.minY;\n  }\n}\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport {createCanvasContext2D} from './dom.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedResolution\n * @property {number} renderedRevision\n * @property {number} renderedZ\n * @property {number} renderedTileResolution\n * @property {number} renderedTileZ\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * Tile keys of error source tiles. Read/written by the source.\n     * @type {Object<string, boolean>}\n     */\n    this.errorSourceTileKeys = {};\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = null;\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * z of the source tiles of the last getSourceTiles call.\n     * @type {number}\n     */\n    this.sourceZ = -1;\n\n    /**\n     * True when all tiles for this tile's nominal resolution are available.\n     * @type {boolean}\n     */\n    this.hifi = false;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedZ: -1,\n        renderedTileZ: -1\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  release() {\n    for (const key in this.context_) {\n      canvasPool.push(this.context_[key].canvas);\n    }\n    super.release();\n  }\n}\n\n\nexport default VectorRenderTile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {TileState} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n    super(tileCoord, state, opt_options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.url_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol\n */\n\nexport {default as AssertionError} from './AssertionError.js';\nexport {default as Collection} from './Collection.js';\nexport {default as Disposable} from './Disposable.js';\nexport {default as Feature} from './Feature.js';\nexport {default as Geolocation} from './Geolocation.js';\nexport {default as Graticule} from './layer/Graticule.js';\nexport {default as Image} from './Image.js';\nexport {default as ImageBase} from './ImageBase.js';\nexport {default as ImageCanvas} from './ImageCanvas.js';\nexport {default as ImageTile} from './ImageTile.js';\nexport {default as Kinetic} from './Kinetic.js';\nexport {default as Map} from './Map.js';\nexport {default as MapBrowserEvent} from './MapBrowserEvent.js';\nexport {default as MapBrowserEventHandler} from './MapBrowserEventHandler.js';\nexport {default as MapBrowserPointerEvent} from './MapBrowserPointerEvent.js';\nexport {default as MapEvent} from './MapEvent.js';\nexport {default as Object} from './Object.js';\nexport {default as Observable} from './Observable.js';\nexport {default as Overlay} from './Overlay.js';\nexport {default as PluggableMap} from './PluggableMap.js';\nexport {default as Tile} from './Tile.js';\nexport {default as TileCache} from './TileCache.js';\nexport {default as TileQueue} from './TileQueue.js';\nexport {default as TileRange} from './TileRange.js';\nexport {default as VectorRenderTile} from './VectorRenderTile.js';\nexport {default as VectorTile} from './VectorTile.js';\nexport {default as View} from './View.js';\n\nexport {getUid, VERSION} from './util.js';\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  const dX = x - centroidX;\n  const dY = y - centroidY;\n  const distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0], y0 = source[0][1];\n    let x1 = source[1][0], y1 = source[1][1];\n    let x2 = source[2][0], y2 = source[2][1];\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    const centroidX = (u0 + u1 + u2) / 3;\n    const centroidY = (v0 + v1 + v2) / 3;\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   */\n  constructor(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function(c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n        !!maxSourceExtent &&\n        !!this.sourceProj_.getExtent() &&\n        (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n      getWidth(this.sourceProj_.getExtent()) : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n      getWidth(this.targetProj_.getExtent()) : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    this.addQuad_(\n      destinationTopLeft, destinationTopRight,\n      destinationBottomRight, destinationBottomLeft,\n      sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n      MAX_SUBDIVISION);\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function(triangle, i, arr) {\n        leftBound = Math.min(leftBound,\n          triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(function(triangle) {\n        if (Math.max(triangle.source[0][0], triangle.source[1][0],\n          triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n          const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]]];\n          if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n          const maxX = Math.max(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n          if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      }.bind(this));\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c]\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_ ?\n      getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX = this.sourceProj_.canWrapX() &&\n                 sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n            needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n        // whole quad outside source projection extent -> ignore\n        return;\n      }\n    }\n\n    if (!needsSubdivision) {\n      if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n          !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n          !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n          !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          return;\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n              (modulo(aSrc[0], sourceWorldWidth) +\n               modulo(cSrc[0], sourceWorldWidth)) / 2;\n          dx = centerSrcEstimX -\n              modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n          this.addQuad_(\n            da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n          this.addQuad_(\n            ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function(triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n   * @param {boolean=} opt_renderEdges Render reprojection edges.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              const state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\n\nexport default ReprojTile;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(isSorted(this.resolutions_, function(a, b) {\n      return b - a;\n    }, true), 17); // `resolutions` must be sorted in descending order\n\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length,\n        20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined &&\n        !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length,\n        19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ = options.tileSize !== undefined ?\n      options.tileSize :\n      !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function(size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(tileCoord, callback, opt_tileRange, opt_extent) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n      }\n      const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n    }\n    return null;\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = scale * xFromOrigin / tileSize[0];\n    let tileCoordY = scale * yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0], coordinate[1], z, false, opt_tileCoord);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number=} opt_direction If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  const maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  const maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    let cacheSize = options.cacheSize;\n    if (cacheSize === undefined) {\n      const tileSize = [256, 256];\n      const tileGrid = options.tileGrid;\n      if (tileGrid) {\n        toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n      }\n      const canUseScreen = typeof screen !== 'undefined';\n      const width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n      const height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n      cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n\n}\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        tileState == TileState.LOADED ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getGutterForProjection(projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getOpaque(projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    const tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        const newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @override\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          const tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          const supportedCRS = tileMatrixSet['SupportedCRS'];\n          const proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          const proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits = /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  const wgs84BoundingBox = l['WGS84BoundingBox'];\n  let extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    const projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  const requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  const context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n    this.tileGrid);\n  const dimensions = this.dimensions_;\n\n  return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2]\n        };\n        assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n  }\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  }\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport {fromUserExtent} from '../../proj.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {createEmpty, equals, getIntersection, getTopLeft} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {apply as applyTransform, compose as composeTransform, makeInverse} from '../../transform.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * TODO: File a TypeScript issue about inheritDoc not being followed\n   * all the way.  Without this explicit return type, the VectorTileLayer\n   * renderFrame function does not pass.\n   *\n   * @inheritDoc\n   * @returns {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = tileResolution * width / 2 / tilePixelRatio;\n    const dy = tileResolution * height / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(this.pixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / tilePixelRatio, 1 / tilePixelRatio,\n      rotation,\n      -width / 2, -height / 2\n    );\n\n    const canvasTransform = this.createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(this.tempTransform_,\n      width / 2, height / 2,\n      canvasScale, canvasScale,\n      0,\n      -width / 2, -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (layerState.opacity === 1 && (!this.containerReused || tileSource.getOpaque(frameState.viewState.projection))) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform_, [\n        tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n        tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n      ]);\n      const tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = (origin[0] - (originTileCoord[1] - tileCoord[1]) * dx);\n        const nextX = Math.round(floatX + dx);\n        const floatY = (origin[1] - (originTileCoord[2] - tileCoord[2]) * dy);\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n        if (clips && !inTransition) {\n          context.restore();\n        }\n        this.renderedTiles.push(tile);\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function(tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  }\n\n}\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n\n  /**\n   * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n\n}\n\nexport default TileLayer;\n","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = null;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.defaultFeatureProjection = null;\n\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Node|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection ?\n        getProjection(opt_options.dataProjection) : this.readProjection(source);\n      if (opt_options.extent &&\n          dataProjection && dataProjection.getUnits() === Units.TILE_PIXELS) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign({\n      dataProjection: this.dataProjection,\n      featureProjection: this.defaultFeatureProjection\n    }, options);\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Node|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Node|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n  const dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n\n  let transformed;\n  if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection);\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function(coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n  const dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n\n  if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/TextFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getType() {\n    return FormatType.TEXT;\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\nexport default TextFeature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n\n  /**\n   * @param {Array<Geometry>=} opt_geometries Geometries.\n   */\n  constructor(opt_geometries) {\n\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this));\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\n\n\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, GeometryLayout)}\n */\nconst GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM';\n\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst WKTGeometryType = {};\nfor (const type in GeometryType) {\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n\n\n/**\n * Class to tokenize a WKT string.\n */\nclass Lexer {\n\n  /**\n   * @param {string} wkt WKT string.\n   */\n  constructor(wkt) {\n\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = -1;\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n  isAlpha_(c) {\n    return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n  }\n\n  /**\n   * @param {string} c Character.\n   * @param {boolean=} opt_decimal Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n  isNumeric_(c, opt_decimal) {\n    const decimal = opt_decimal !== undefined ? opt_decimal : false;\n    return c >= '0' && c <= '9' || c == '.' && !decimal;\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n  isWhiteSpace_(c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n  }\n\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n  nextChar_() {\n    return this.wkt.charAt(++this.index_);\n  }\n\n  /**\n   * Fetch and return the next token.\n   * @return {!Token} Next string token.\n   */\n  nextToken() {\n    const c = this.nextChar_();\n    const position = this.index_;\n    /** @type {number|string} */\n    let value = c;\n    let type;\n\n    if (c == '(') {\n      type = TokenType.LEFT_PAREN;\n    } else if (c == ',') {\n      type = TokenType.COMMA;\n    } else if (c == ')') {\n      type = TokenType.RIGHT_PAREN;\n    } else if (this.isNumeric_(c) || c == '-') {\n      type = TokenType.NUMBER;\n      value = this.readNumber_();\n    } else if (this.isAlpha_(c)) {\n      type = TokenType.TEXT;\n      value = this.readText_();\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken();\n    } else if (c === '') {\n      type = TokenType.EOF;\n    } else {\n      throw new Error('Unexpected character: ' + c);\n    }\n\n    return {position: position, value: value, type: type};\n  }\n\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n  readNumber_() {\n    let c;\n    const index = this.index_;\n    let decimal = false;\n    let scientificNotation = false;\n    do {\n      if (c == '.') {\n        decimal = true;\n      } else if (c == 'e' || c == 'E') {\n        scientificNotation = true;\n      }\n      c = this.nextChar_();\n    } while (\n      this.isNumeric_(c, decimal) ||\n        // if we haven't detected a scientific number before, 'e' or 'E'\n        // hint that we should continue to read\n        !scientificNotation && (c == 'e' || c == 'E') ||\n        // once we know that we have a scientific number, both '-' and '+'\n        // are allowed\n        scientificNotation && (c == '-' || c == '+')\n    );\n    return parseFloat(this.wkt.substring(index, this.index_--));\n  }\n\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n  readText_() {\n    let c;\n    const index = this.index_;\n    do {\n      c = this.nextChar_();\n    } while (this.isAlpha_(c));\n    return this.wkt.substring(index, this.index_--).toUpperCase();\n  }\n}\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nclass Parser {\n\n  /**\n   * @param {Lexer} lexer The lexer.\n   */\n  constructor(lexer) {\n\n    /**\n     * @type {Lexer}\n     * @private\n     */\n    this.lexer_ = lexer;\n\n    /**\n     * @type {Token}\n     * @private\n     */\n    this.token_;\n\n    /**\n     * @type {GeometryLayout}\n     * @private\n     */\n    this.layout_ = GeometryLayout.XY;\n  }\n\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n  consume_() {\n    this.token_ = this.lexer_.nextToken();\n  }\n\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  isTokenType(type) {\n    const isMatch = this.token_.type == type;\n    return isMatch;\n  }\n\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  match(type) {\n    const isMatch = this.isTokenType(type);\n    if (isMatch) {\n      this.consume_();\n    }\n    return isMatch;\n  }\n\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   */\n  parse() {\n    this.consume_();\n    const geometry = this.parseGeometry_();\n    return geometry;\n  }\n\n  /**\n   * Try to parse the dimensional info.\n   * @return {GeometryLayout} The layout.\n   * @private\n   */\n  parseGeometryLayout_() {\n    let layout = GeometryLayout.XY;\n    const dimToken = this.token_;\n    if (this.isTokenType(TokenType.TEXT)) {\n      const dimInfo = dimToken.value;\n      if (dimInfo === Z) {\n        layout = GeometryLayout.XYZ;\n      } else if (dimInfo === M) {\n        layout = GeometryLayout.XYM;\n      } else if (dimInfo === ZM) {\n        layout = GeometryLayout.XYZM;\n      }\n      if (layout !== GeometryLayout.XY) {\n        this.consume_();\n      }\n    }\n    return layout;\n  }\n\n  /**\n   * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n   * @private\n   */\n  parseGeometryCollectionText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const geometries = [];\n      do {\n        geometries.push(this.parseGeometry_());\n      } while (this.match(TokenType.COMMA));\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return geometries;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} All values in a point.\n   * @private\n   */\n  parsePointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePoint_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return null;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a linestring.\n   * @private\n   */\n  parseLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePointList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n   * @private\n   */\n  parsePolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a multipoint.\n   * @private\n   */\n  parseMultiPointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      let coordinates;\n      if (this.token_.type == TokenType.LEFT_PAREN) {\n        coordinates = this.parsePointTextList_();\n      } else {\n        coordinates = this.parsePointList_();\n      }\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} All linestring points\n   *                                          in a multilinestring.\n   * @private\n   */\n  parseMultiLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n   * @private\n   */\n  parseMultiPolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePolygonTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<number>} A point.\n   * @private\n   */\n  parsePoint_() {\n    const coordinates = [];\n    const dimensions = this.layout_.length;\n    for (let i = 0; i < dimensions; ++i) {\n      const token = this.token_;\n      if (this.match(TokenType.NUMBER)) {\n        coordinates.push(/** @type {number} */ (token.value));\n      } else {\n        break;\n      }\n    }\n    if (coordinates.length == dimensions) {\n      return coordinates;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointList_() {\n    const coordinates = [this.parsePoint_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePoint_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointTextList_() {\n    const coordinates = [this.parsePointText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePointText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} An array of points.\n   * @private\n   */\n  parseLineStringTextList_() {\n    const coordinates = [this.parseLineStringText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parseLineStringText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n   * @private\n   */\n  parsePolygonTextList_() {\n    const coordinates = [this.parsePolygonText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePolygonText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n  isEmptyGeometry_() {\n    const isEmpty = this.isTokenType(TokenType.TEXT) &&\n        this.token_.value == EMPTY;\n    if (isEmpty) {\n      this.consume_();\n    }\n    return isEmpty;\n  }\n\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n  formatErrorMessage_() {\n    return 'Unexpected `' + this.token_.value + '` at position ' +\n        this.token_.position + ' in `' + this.lexer_.wkt + '`';\n  }\n\n  /**\n   * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n   * @private\n   */\n  parseGeometry_() {\n    const token = this.token_;\n    if (this.match(TokenType.TEXT)) {\n      const geomType = token.value;\n      this.layout_ = this.parseGeometryLayout_();\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        const geometries = this.parseGeometryCollectionText_();\n        return new GeometryCollection(geometries);\n      } else {\n        const ctor = GeometryConstructor[geomType];\n        if (!ctor) {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n\n        let coordinates;\n        switch (geomType) {\n          case 'POINT': {\n            coordinates = this.parsePointText_();\n            break;\n          }\n          case 'LINESTRING': {\n            coordinates = this.parseLineStringText_();\n            break;\n          }\n          case 'POLYGON': {\n            coordinates = this.parsePolygonText_();\n            break;\n          }\n          case 'MULTIPOINT': {\n            coordinates = this.parseMultiPointText_();\n            break;\n          }\n          case 'MULTILINESTRING': {\n            coordinates = this.parseMultiLineStringText_();\n            break;\n          }\n          case 'MULTIPOLYGON': {\n            coordinates = this.parseMultiPolygonText_();\n            break;\n          }\n          default: {\n            throw new Error('Invalid geometry type: ' + geomType);\n          }\n        }\n\n        if (!coordinates) {\n          if (ctor === GeometryConstructor['POINT']) {\n            coordinates = [NaN, NaN];\n          } else {\n            coordinates = [];\n          }\n        }\n        return new ctor(coordinates, this.layout_);\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n}\n\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nclass WKT extends TextFeature {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ = options.splitCollection !== undefined ?\n      options.splitCollection : false;\n\n  }\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default|undefined}\n   *     The geometry created.\n   * @private\n   */\n  parse_(wkt) {\n    const lexer = new Lexer(wkt);\n    const parser = new Parser(lexer);\n    return parser.parse();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeatureFromText(text, opt_options) {\n    const geom = this.readGeometryFromText(text, opt_options);\n    if (geom) {\n      const feature = new Feature();\n      feature.setGeometry(geom);\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readFeaturesFromText(text, opt_options) {\n    let geometries = [];\n    const geometry = this.readGeometryFromText(text, opt_options);\n    if (this.splitCollection_ &&\n        geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n      geometries = (/** @type {GeometryCollection} */ (geometry))\n        .getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    const features = [];\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  readGeometryFromText(text, opt_options) {\n    const geometry = this.parse_(text);\n    if (geometry) {\n      return transformGeometryWithOptions(geometry, false, opt_options);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeFeatureText(feature, opt_options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    }\n    return '';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeFeaturesText(features, opt_options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], opt_options);\n    }\n    const geometries = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    const collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, opt_options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  writeGeometryText(geometry, opt_options) {\n    return encode(transformGeometryWithOptions(geometry, true, opt_options));\n  }\n}\n\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = [];\n  const components = geom.getPoints();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = [];\n  const geoms = geom.getGeometries();\n  for (let i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  const array = [];\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = [];\n  const components = geom.getLineStrings();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = [];\n  const rings = geom.getLinearRings();\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = [];\n  const components = geom.getPolygons();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  const layout = geom.getLayout();\n  let dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  let type = geom.getType();\n  const geometryEncoder = GeometryEncoder[type];\n  const enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (typeof /** @type {?} */ (geom).getFlatCoordinates === 'function') {\n    const dimInfo = encodeGeometryLayout(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom));\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\n\nexport default WKT;\n"," /*\r\n  * https://github.com/kraaden/autocomplete\r\n  * Copyright (c) 2016 Denys Krasnoshchok\r\n  * MIT License\r\n  */\r\n\r\nexport const enum EventTrigger {\r\n    Keyboard = 0,\r\n    Focus = 1\r\n}\r\n\r\nexport interface AutocompleteItem {\r\n    label?: string;\r\n    group?: string;\r\n}\r\n\r\nexport interface AutocompleteSettings<T extends AutocompleteItem> {\r\n    input: HTMLInputElement;\r\n    render?: (item: T, currentValue: string) => HTMLDivElement | undefined;\r\n    renderGroup?: (name: string, currentValue: string) => HTMLDivElement | undefined;\r\n    className?: string;\r\n    minLength?: number;\r\n    emptyMsg?: string;\r\n    onSelect: (item: T, input: HTMLInputElement) => void;\r\n    /**\r\n     * Show autocomplete on focus event. Focus event will ignore the `minLength` property and will always call `fetch`.\r\n     */\r\n    showOnFocus?: boolean;\r\n    fetch: (text: string, update: (items: T[] | false) => void, trigger: EventTrigger) => void;\r\n    debounceWaitMs?: number;\r\n    /**\r\n     * Callback for additional autocomplete customization\r\n     * @param {HTMLInputElement} input - input box associated with autocomplete\r\n     * @param {ClientRect | DOMRect} inputRect - size of the input box and its position relative to the viewport\r\n     * @param {HTMLDivElement} container - container with suggestions\r\n     * @param {number} maxHeight - max height that can be used by autocomplete\r\n     */\r\n    customize?: (input: HTMLInputElement, inputRect: ClientRect | DOMRect, container: HTMLDivElement, maxHeight: number) => void;\r\n    /**\r\n     * Prevents automatic form submit when ENTER is pressed\r\n     */\r\n    preventSubmit?: boolean;\r\n}\r\n\r\nexport interface AutocompleteResult {\r\n    destroy: () => void;\r\n}\r\n\r\nconst enum Keys {\r\n    Enter = 13,\r\n    Esc = 27,\r\n    Up = 38,\r\n    Down = 40,\r\n    Left = 37,\r\n    Right = 39,\r\n    Shift = 16,\r\n    Ctrl = 17,\r\n    Alt = 18,\r\n    CapsLock = 20,\r\n    WindowsKey = 91,\r\n    Tab = 9,\r\n    F1 = 112,\r\n    F12 = 123\r\n}\r\n\r\nexport default function autocomplete<T extends AutocompleteItem>(settings: AutocompleteSettings<T>): AutocompleteResult {\r\n\r\n    // just an alias to minimize JS file size\r\n    const doc = document;\r\n\r\n    const container: HTMLDivElement = doc.createElement(\"div\");\r\n    const containerStyle = container.style;\r\n    const userAgent = navigator.userAgent;\r\n    const mobileFirefox = userAgent.indexOf(\"Firefox\") !== -1 && userAgent.indexOf(\"Mobile\") !== -1;\r\n    const debounceWaitMs = settings.debounceWaitMs || 0;\r\n    const preventSubmit = settings.preventSubmit || false;\r\n    \r\n    // 'keyup' event will not be fired on Mobile Firefox, so we have to use 'input' event instead\r\n    const keyUpEventName = mobileFirefox ? \"input\" : \"keyup\";\r\n    \r\n    let items: T[] = [];\r\n    let inputValue = \"\";\r\n    let minLen = 2;\r\n    const showOnFocus = settings.showOnFocus;\r\n    let selected: T | undefined;\r\n    let keypressCounter = 0;\r\n    let debounceTimer : number | undefined;\r\n\r\n    if (settings.minLength !== undefined) {\r\n        minLen = settings.minLength;\r\n    }\r\n\r\n    if (!settings.input) {\r\n        throw new Error(\"input undefined\");\r\n    }\r\n\r\n    const input: HTMLInputElement = settings.input;\r\n\r\n    container.className = \"autocomplete \" + (settings.className || \"\");\r\n\r\n    // IOS implementation for fixed positioning has many bugs, so we will use absolute positioning\r\n    containerStyle.position = \"absolute\";\r\n\r\n    /**\r\n     * Detach the container from DOM\r\n     */\r\n    function detach(): void {\r\n        const parent = container.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(container);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear debouncing timer if assigned\r\n     */\r\n    function clearDebounceTimer(): void {\r\n        if (debounceTimer) {\r\n            window.clearTimeout(debounceTimer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attach the container to DOM\r\n     */\r\n    function attach(): void {\r\n        if (!container.parentNode) {\r\n            doc.body.appendChild(container);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if container for autocomplete is displayed\r\n     */\r\n    function containerDisplayed(): boolean {\r\n        return !!container.parentNode;\r\n    }\r\n\r\n    /**\r\n     * Clear autocomplete state and hide container\r\n     */\r\n    function clear(): void {\r\n        keypressCounter++;\r\n        items = [];\r\n        inputValue = \"\";\r\n        selected = undefined;\r\n        detach();\r\n    }\r\n\r\n    /**\r\n     * Update autocomplete position\r\n     */\r\n    function updatePosition(): void {\r\n        if (!containerDisplayed()) {\r\n            return;\r\n        }\r\n\r\n        containerStyle.height = \"auto\";\r\n        containerStyle.width = input.offsetWidth + \"px\";\r\n\r\n        let maxHeight = 0;\r\n        let inputRect: ClientRect | DOMRect | undefined;\r\n\r\n        function calc() {\r\n            const docEl = doc.documentElement as HTMLElement;\r\n            const clientTop = docEl.clientTop || doc.body.clientTop || 0;\r\n            const clientLeft = docEl.clientLeft || doc.body.clientLeft || 0;\r\n            const scrollTop = window.pageYOffset || docEl.scrollTop;\r\n            const scrollLeft = window.pageXOffset || docEl.scrollLeft;\r\n\r\n            inputRect = input.getBoundingClientRect();\r\n        \r\n            const top = inputRect.top + input.offsetHeight + scrollTop - clientTop;\r\n            const left = inputRect.left + scrollLeft - clientLeft;\r\n    \r\n            containerStyle.top = top + \"px\";\r\n            containerStyle.left = left + \"px\";\r\n    \r\n            maxHeight = window.innerHeight - (inputRect.top + input.offsetHeight);\r\n    \r\n            if (maxHeight < 0) {\r\n                maxHeight = 0;\r\n            }\r\n    \r\n            containerStyle.top = top + \"px\";\r\n            containerStyle.bottom = \"\";\r\n            containerStyle.left = left + \"px\";\r\n            containerStyle.maxHeight = maxHeight + \"px\";\r\n        }\r\n\r\n        // the calc method must be called twice, otherwise the calculation may be wrong on resize event (chrome browser)\r\n        calc();\r\n        calc();\r\n\r\n        if (settings.customize && inputRect) {\r\n            settings.customize(input, inputRect, container, maxHeight);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Redraw the autocomplete div element with suggestions\r\n     */\r\n    function update(): void {\r\n        \r\n        // delete all children from autocomplete DOM container\r\n        while (container.firstChild) {\r\n            container.removeChild(container.firstChild);\r\n        }\r\n\r\n        // function for rendering autocomplete suggestions\r\n        let render = function(item: T, currentValue: string): HTMLDivElement | undefined {\r\n            const itemElement = doc.createElement(\"div\");\r\n            itemElement.textContent = item.label || \"\";\r\n            return itemElement;\r\n        };\r\n        if (settings.render) {\r\n            render = settings.render;\r\n        }\r\n\r\n        // function to render autocomplete groups\r\n        let renderGroup = function(groupName: string, currentValue: string): HTMLDivElement | undefined {\r\n            const groupDiv = doc.createElement(\"div\");\r\n            groupDiv.textContent = groupName;\r\n            return groupDiv;\r\n        };\r\n        if (settings.renderGroup) {\r\n            renderGroup = settings.renderGroup;\r\n        }\r\n\r\n        const fragment = doc.createDocumentFragment();\r\n        let prevGroup = \"#9?$\";\r\n\r\n        items.forEach(function(item: T): void {\r\n            if (item.group && item.group !== prevGroup) {\r\n                prevGroup = item.group;\r\n                const groupDiv = renderGroup(item.group, inputValue);\r\n                if (groupDiv) {\r\n                    groupDiv.className += \" group\";\r\n                    fragment.appendChild(groupDiv);\r\n                }\r\n            }\r\n            const div = render(item, inputValue);\r\n            if (div) {\r\n                div.addEventListener(\"click\", function(ev: MouseEvent): void {\r\n                    settings.onSelect(item, input);\r\n                    clear();\r\n                    ev.preventDefault();\r\n                    ev.stopPropagation();\r\n                });\r\n                if (item === selected) {\r\n                    div.className += \" selected\";\r\n                }\r\n                fragment.appendChild(div);\r\n            }\r\n        });\r\n        container.appendChild(fragment);\r\n        if (items.length < 1) {\r\n            if (settings.emptyMsg) {\r\n                const empty = doc.createElement(\"div\");\r\n                empty.className = \"empty\";\r\n                empty.textContent = settings.emptyMsg;\r\n                container.appendChild(empty);\r\n            } else {\r\n                clear();\r\n                return;\r\n            }\r\n        }\r\n\r\n        attach();\r\n        updatePosition();\r\n\r\n        updateScroll();\r\n    }\r\n\r\n    function updateIfDisplayed(): void {\r\n        if (containerDisplayed()) {\r\n            update();\r\n        }\r\n    }\r\n\r\n    function resizeEventHandler(): void {\r\n        updateIfDisplayed();\r\n    }\r\n\r\n    function scrollEventHandler(e: Event): void {\r\n        if (e.target !== container) {\r\n            updateIfDisplayed();\r\n        } else {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    function keyupEventHandler(ev: KeyboardEvent): void {\r\n        const keyCode = ev.which || ev.keyCode || 0;\r\n\r\n        const ignore = [Keys.Up, Keys.Enter, Keys.Esc, Keys.Right, Keys.Left, Keys.Shift, Keys.Ctrl, Keys.Alt, Keys.CapsLock, Keys.WindowsKey, Keys.Tab];\r\n        for (const key of ignore) {\r\n            if (keyCode === key) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (keyCode >= Keys.F1 && keyCode <= Keys.F12) {\r\n            return;\r\n        }\r\n\r\n        // the down key is used to open autocomplete\r\n        if (keyCode === Keys.Down && containerDisplayed()) {\r\n            return;\r\n        }\r\n\r\n        startFetch(EventTrigger.Keyboard);\r\n    }\r\n\r\n    /**\r\n     * Automatically move scroll bar if selected item is not visible\r\n     */\r\n    function updateScroll(): void {\r\n        const elements = container.getElementsByClassName(\"selected\");\r\n        if (elements.length > 0) {\r\n            let element = elements[0] as HTMLDivElement;\r\n            \r\n            // make group visible\r\n            const previous = element.previousElementSibling as HTMLDivElement;\r\n            if (previous && previous.className.indexOf(\"group\") !== -1 && !previous.previousElementSibling) {\r\n                element = previous;\r\n            }\r\n\r\n            if (element.offsetTop < container.scrollTop) {\r\n                container.scrollTop = element.offsetTop;\r\n            } else {\r\n                const selectBottom = element.offsetTop + element.offsetHeight;\r\n                const containerBottom = container.scrollTop + container.offsetHeight;\r\n                if (selectBottom > containerBottom) {\r\n                    container.scrollTop += selectBottom - containerBottom;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select the previous item in suggestions\r\n     */\r\n    function selectPrev(): void {\r\n        if (items.length < 1) {\r\n            selected = undefined;\r\n        } else {\r\n            if (selected === items[0]) {\r\n                selected = items[items.length - 1];\r\n            } else {\r\n                for (let i = items.length - 1; i > 0; i--) {\r\n                    if (selected === items[i] || i === 1) {\r\n                        selected = items[i - 1];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select the next item in suggestions\r\n     */\r\n    function selectNext(): void {\r\n        if (items.length < 1) {\r\n            selected = undefined;\r\n        }\r\n        if (!selected || selected === items[items.length - 1]) {\r\n            selected = items[0];\r\n            return;\r\n        }\r\n        for (let i = 0; i < (items.length - 1); i++) {\r\n            if (selected === items[i]) {\r\n                selected = items[i + 1];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function keydownEventHandler(ev: KeyboardEvent): void {\r\n        const keyCode = ev.which || ev.keyCode || 0;\r\n\r\n        if (keyCode === Keys.Up || keyCode === Keys.Down || keyCode === Keys.Esc) {\r\n            const containerIsDisplayed = containerDisplayed();\r\n\r\n            if (keyCode === Keys.Esc) {\r\n                clear();\r\n            } else {\r\n                if (!containerDisplayed || items.length < 1) {\r\n                    return;\r\n                }\r\n                keyCode === Keys.Up\r\n                    ? selectPrev()\r\n                    : selectNext();\r\n                update();\r\n            }\r\n\r\n            ev.preventDefault();\r\n            if (containerIsDisplayed) {\r\n                ev.stopPropagation();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (keyCode === Keys.Enter) {\r\n            if (selected) {\r\n                settings.onSelect(selected, input);\r\n                clear();\r\n            }\r\n    \r\n            if (preventSubmit) {\r\n                ev.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    function focusEventHandler(): void {\r\n        if (showOnFocus) {\r\n            startFetch(EventTrigger.Focus);\r\n        }\r\n    }\r\n\r\n    function startFetch(trigger: EventTrigger) {\r\n        // if multiple keys were pressed, before we get update from server,\r\n        // this may cause redrawing our autocomplete multiple times after the last key press.\r\n        // to avoid this, the number of times keyboard was pressed will be\r\n        // saved and checked before redraw our autocomplete box.\r\n        const savedKeypressCounter = ++keypressCounter;\r\n\r\n        const val = input.value;\r\n        if (val.length >= minLen || trigger === EventTrigger.Focus) {\r\n            clearDebounceTimer();\r\n            debounceTimer = window.setTimeout(function(): void {\r\n                settings.fetch(val, function(elements: T[] | false): void {\r\n                    if (keypressCounter === savedKeypressCounter && elements) {\r\n                        items = elements;\r\n                        inputValue = val;\r\n                        selected = items.length > 0 ? items[0] : undefined;\r\n                        update();\r\n                    }\r\n                }, EventTrigger.Keyboard);\r\n            }, trigger === EventTrigger.Keyboard ? debounceWaitMs : 0);\r\n        } else {\r\n            clear();\r\n        }\r\n    }\r\n\r\n    function blurEventHandler(): void {\r\n        // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM\r\n        setTimeout(() => {\r\n            if (doc.activeElement !== input) {\r\n                clear();\r\n            }\r\n        }, 200);\r\n    }\r\n\r\n    /**\r\n     * Fixes #26: on long clicks focus will be lost and onSelect method will not be called\r\n     */\r\n    container.addEventListener(\"mousedown\", function(evt: Event) {\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n    });\r\n\r\n    /**\r\n     * This function will remove DOM elements and clear event handlers\r\n     */\r\n    function destroy(): void {\r\n        input.removeEventListener(\"focus\", focusEventHandler);\r\n        input.removeEventListener(\"keydown\", keydownEventHandler);\r\n        input.removeEventListener(keyUpEventName, keyupEventHandler as EventListenerOrEventListenerObject);\r\n        input.removeEventListener(\"blur\", blurEventHandler);\r\n        window.removeEventListener(\"resize\", resizeEventHandler);\r\n        doc.removeEventListener(\"scroll\", scrollEventHandler, true);\r\n        clearDebounceTimer();\r\n        clear();\r\n\r\n        // prevent the update call if there are pending AJAX requests\r\n        keypressCounter++;\r\n    }\r\n\r\n    // setup event handlers\r\n    input.addEventListener(\"keydown\", keydownEventHandler);\r\n    input.addEventListener(keyUpEventName, keyupEventHandler as EventListenerOrEventListenerObject);\r\n    input.addEventListener(\"blur\", blurEventHandler);\r\n    input.addEventListener(\"focus\", focusEventHandler);\r\n    window.addEventListener(\"resize\", resizeEventHandler);\r\n    doc.addEventListener(\"scroll\", scrollEventHandler, true);\r\n\r\n    return {\r\n        destroy\r\n    };\r\n}\r\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  const timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n","/**\n * @module ol/source/BingMaps\n */\n\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n      'Terms of Use</a>';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    const url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n        this.imagerySet_ +\n        '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n        '&c=' + this.culture_;\n\n    requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n      'jsonp');\n\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (response.statusCode != 200 ||\n        response.statusDescription != 'OK' ||\n        response.authenticationResultCode != 'ValidCredentials' ||\n        response.resourceSets.length != 1 ||\n        response.resourceSets[0].resources.length != 1) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize = resource.imageWidth == resource.imageHeight ?\n      resource.imageWidth / scale :\n      [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function(subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function(tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n              let url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      }));\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'), this.getProjection());\n\n      this.setAttributions(function(frameState) {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(viewState.resolution, this.zDirection);\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(viewState.center, z);\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function(imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      }.bind(this));\n    }\n\n    this.setState(SourceState.READY);\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options=} opt_options XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection\n    });\n\n  }\n\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/CartoDB\n */\n\nimport {assign} from '../obj.js';\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nclass CartoDB extends XYZ {\n  /**\n   * @param {Options} options CartoDB options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  getConfig() {\n    return this.config_;\n  }\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  updateConfig(config) {\n    assign(this.config_, config);\n    this.initializeMap_();\n  }\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  setConfig(config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  }\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  initializeMap_() {\n    const paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    let mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  }\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  handleInitResponse_(paramHash, event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      let response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.setState(SourceState.ERROR);\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState(SourceState.READY);\n    } else {\n      this.setState(SourceState.ERROR);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  handleInitError_(event) {\n    this.setState(SourceState.ERROR);\n  }\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  applyTemplate_(data) {\n    const tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n        '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  }\n}\n\n\nexport default CartoDB;\n","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction = options.geometryFunction || function(feature) {\n      const geometry = feature.getGeometry();\n      assert(geometry.getType() == GeometryType.POINT,\n        10); // The default `geometryFunction` can only handle `Point` geometries\n      return geometry;\n    };\n\n    /**\n     * @type {VectorSource}\n     * @protected\n     */\n    this.source = options.source;\n\n    this.source.addEventListener(EventType.CHANGE, this.refresh.bind(this));\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.clear();\n      this.resolution = resolution;\n      this.cluster();\n      this.addFeatures(this.features);\n    }\n  }\n\n  /**\n   * Set the distance in pixels between clusters.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.distance = distance;\n    this.refresh();\n  }\n\n  /**\n   * handle the source changing\n   * @override\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined) {\n      return;\n    }\n    this.features.length = 0;\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /**\n     * @type {!Object<string, boolean>}\n     */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          let neighbors = this.source.getFeaturesInExtent(extent);\n          neighbors = neighbors.filter(function(neighbor) {\n            const uid = getUid(neighbor);\n            if (!(uid in clustered)) {\n              clustered[uid] = true;\n              return true;\n            } else {\n              return false;\n            }\n          });\n          this.features.push(this.createCluster(neighbors));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n\n    const cluster = new Feature(new Point(centroid));\n    cluster.set('features', features);\n    return cluster;\n  }\n}\n\n\nexport default Cluster;\n","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nconst TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\nexport class CustomTile extends ImageTile {\n\n  /**\n   * @param {import(\"../size.js\").Size} tileSize Full tile size.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {TileState} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"../Tile.js\").Options=} opt_options Tile options.\n   */\n  constructor(tileSize, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    super(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tileSize_ = tileSize;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    const image = super.getImage();\n    if (this.state == TileState.LOADED) {\n      const tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      } else {\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n        context.drawImage(image, 0, 0);\n        this.zoomifyImage_ = context.canvas;\n        return context.canvas;\n      }\n    } else {\n      return image;\n    }\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} [size] Size of the image.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n * @property {number} [zDirection] Indicate which resolution should be used\n * by a renderer if the views resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nclass Zoomify extends TileImage {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    const size = options.size;\n    const tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n      options.tierSizeCalculation :\n      TierSizeCalculation.DEFAULT;\n\n    const tilePixelRatio = options.tilePixelRatio || 1;\n    const imageWidth = size[0];\n    const imageHeight = size[1];\n    const tierSizeInTiles = [];\n    const tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    let tileSizeForTierSizeCalculation = tileSize * tilePixelRatio;\n\n    switch (tierSizeCalculation) {\n      case TierSizeCalculation.DEFAULT:\n        while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case TierSizeCalculation.TRUNCATED:\n        let width = imageWidth;\n        let height = imageHeight;\n        while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation)\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default:\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    const resolutions = [tilePixelRatio];\n    const tileCountUpToTier = [0];\n    for (let i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(tilePixelRatio << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    const tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: options.extent || [0, -imageHeight, imageWidth, 0],\n      resolutions: resolutions\n    });\n\n    let url = options.url;\n    if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    const urls = expandUrl(url);\n\n    const tileWidth = tileSize * tilePixelRatio;\n\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n\n      return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            const tileCoordZ = tileCoord[0];\n            const tileCoordX = tileCoord[1];\n            const tileCoordY = tileCoord[2];\n            const tileIndex =\n                tileCoordX +\n                tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            const tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n            const localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    const tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n    const ZoomifyTileClass = CustomTile.bind(null, toSize(tileSize * tilePixelRatio));\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      tilePixelRatio: tilePixelRatio,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition\n    });\n\n    /**\n     * @inheritDoc\n     */\n    this.zDirection = options.zDirection;\n\n  }\n\n}\n\nexport default Zoomify;\n","/**\n * @module ol/format/IIIFInfo\n */\n\nimport {assert} from '../asserts.js';\n\n\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n\n/**\n * @typedef {Object<string,string|number|Array<number|string|IiifProfile>|Object<string, number>|TileInfo>}\n *    ImageInformationResponse\n */\n\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\nconst Versions = {\n  VERSION1: 'version1',\n  VERSION2: 'version2',\n  VERSION3: 'version3'\n};\n\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nconst IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n  'level0': {\n    supports: [],\n    formats: [],\n    qualities: ['native']\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['native']\n  },\n  'level2': {\n    supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct',\n      'sizeByConfinedWh', 'sizeByWh'],\n    formats: ['jpg', 'png'],\n    qualities: ['native', 'color', 'grey', 'bitonal']\n  }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default']\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['default']\n  },\n  'level2': {\n    supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct',\n      'sizeByConfinedWh', 'sizeByDistortedWh', 'sizeByWh'],\n    formats: ['jpg', 'png'],\n    qualities: ['default', 'bitonal']\n  }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default']\n  },\n  'level1': {\n    supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH', 'sizeByWh'],\n    formats: ['jpg'],\n    qualities: ['default']\n  },\n  'level2': {\n    supports: ['regionByPx', 'regionSquare', 'regionByPct',\n      'sizeByW', 'sizeByH', 'sizeByPct', 'sizeByConfinedWh', 'sizeByWh'],\n    formats: ['jpg', 'png'],\n    qualities: ['default']\n  }\n};\nIIIF_PROFILE_VALUES['none'] = {\n  'none': {\n    supports: [],\n    formats: [],\n    qualities: []\n  }\n};\n\nconst COMPLIANCE_VERSION1 = new RegExp('^https?\\:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(1\\.1\\/)?compliance\\.html#level[0-2]$');\nconst COMPLIANCE_VERSION2 = new RegExp('^https?\\:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](\\.json)?$');\nconst COMPLIANCE_VERSION3 = new RegExp('(^https?\\:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](\\.json)?$)|(^level[0-2]$)');\n\nfunction generateVersion1Options(iiifInfo) {\n  let levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n  // Version 1.0 and 1.1 do not require a profile.\n  if (levelProfile === undefined) {\n    levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n  }\n  return {\n    url: iiifInfo.imageInfo['@id'] === undefined ? undefined : iiifInfo.imageInfo['@id'].replace(/\\/?(info.json)?$/g, ''),\n    supports: levelProfile.supports,\n    formats: [...levelProfile.formats, iiifInfo.imageInfo.formats === undefined ?\n      [] : iiifInfo.imageInfo.formats\n    ],\n    qualities: [...levelProfile.qualities, iiifInfo.imageInfo.qualities === undefined ?\n      [] : iiifInfo.imageInfo.qualities\n    ],\n    resolutions: iiifInfo.imageInfo.scale_factors,\n    tileSize: iiifInfo.imageInfo.tile_width !== undefined ? (iiifInfo.imageInfo.tile_height !== undefined ?\n      [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height] : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]) :\n      (iiifInfo.imageInfo.tile_height != undefined ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height] : undefined)\n  };\n}\n\nfunction generateVersion2Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n      additionalProfile = Array.isArray(iiifInfo.imageInfo.profile) && iiifInfo.imageInfo.profile.length > 1,\n      profileSupports = additionalProfile && iiifInfo.imageInfo.profile[1].supports ? iiifInfo.imageInfo.profile[1].supports : [],\n      profileFormats = additionalProfile && iiifInfo.imageInfo.profile[1].formats ? iiifInfo.imageInfo.profile[1].formats : [],\n      profileQualities = additionalProfile && iiifInfo.imageInfo.profile[1].qualities ? iiifInfo.imageInfo.profile[1].qualities : [];\n  return {\n    url: iiifInfo.imageInfo['@id'].replace(/\\/?(info.json)?$/g, ''),\n    sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function(size) {\n      return [size.width, size.height];\n    }),\n    tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [\n      iiifInfo.imageInfo.tiles.map(function(tile) {\n        return tile.width;\n      })[0],\n      iiifInfo.imageInfo.tiles.map(function(tile) {\n        return tile.height === undefined ? tile.width : tile.height;\n      })[0]\n    ],\n    resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined :\n      iiifInfo.imageInfo.tiles.map(function(tile) {\n        return tile.scaleFactors;\n      })[0],\n    supports: [...levelProfile.supports, ...profileSupports],\n    formats: [...levelProfile.formats, ...profileFormats],\n    qualities: [...levelProfile.qualities, ...profileQualities]\n  };\n}\n\nfunction generateVersion3Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n      formats = iiifInfo.imageInfo.extraFormats === undefined ? levelProfile.formats :\n        [...levelProfile.formats, ...iiifInfo.imageInfo.extraFormats],\n      preferredFormat = iiifInfo.imageInfo.preferredFormats !== undefined && Array.isArray(iiifInfo.imageInfo.preferredFormats) &&\n        iiifInfo.imageInfo.preferredFormats.length > 0 ?\n        iiifInfo.imageInfo.preferredFormats.filter(function(format) {\n          return ['jpg', 'png', 'gif'].includes(format);\n        }).reduce(function(acc, format) {\n          return acc === undefined && formats.includes(format) ? format : acc;\n        }, undefined) : undefined;\n  return {\n    url: iiifInfo.imageInfo['id'],\n    sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function(size) {\n      return [size.width, size.height];\n    }),\n    tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [\n      iiifInfo.imageInfo.tiles.map(function(tile) {\n        return tile.width;\n      })[0],\n      iiifInfo.imageInfo.tiles.map(function(tile) {\n        return tile.height;\n      })[0]\n    ],\n    resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined :\n      iiifInfo.imageInfo.tiles.map(function(tile) {\n        return tile.scaleFactors;\n      })[0],\n    supports: iiifInfo.imageInfo.extraFeatures === undefined ? levelProfile.supports :\n      [...levelProfile.supports, ...iiifInfo.imageInfo.extraFeatures],\n    formats: formats,\n    qualities: iiifInfo.imageInfo.extraQualities === undefined ? levelProfile.qualities :\n      [...levelProfile.qualities, ...iiifInfo.imageInfo.extraQualities],\n    preferredFormat: preferredFormat\n  };\n}\n\nconst versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nclass IIIFInfo {\n\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   */\n  constructor(imageInfo) {\n    this.setImageInfo(imageInfo);\n  }\n\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   * @api\n   */\n  setImageInfo(imageInfo) {\n    if (typeof imageInfo == 'string') {\n      this.imageInfo = JSON.parse(imageInfo);\n    } else {\n      this.imageInfo = imageInfo;\n    }\n  }\n\n  /**\n   * @returns {Versions} Major IIIF version.\n   * @api\n   */\n  getImageApiVersion() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n    let context = this.imageInfo['@context'] || 'ol-no-context';\n    if (typeof context == 'string') {\n      context = [context];\n    }\n    for (let i = 0; i < context.length; i++) {\n      switch (context[i]) {\n        case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n        case 'http://iiif.io/api/image/1/context.json':\n          return Versions.VERSION1;\n        case 'http://iiif.io/api/image/2/context.json':\n          return Versions.VERSION2;\n        case 'http://iiif.io/api/image/3/context.json':\n          return Versions.VERSION3;\n        case 'ol-no-context':\n          // Image API 1.0 has no '@context'\n          if (this.getComplianceLevelEntryFromProfile(Versions.VERSION1) && this.imageInfo.identifier) {\n            return Versions.VERSION1;\n          }\n          break;\n        default:\n      }\n    }\n    assert(false, 61);\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @returns {string} Compliance level as it appears in the IIIF image information\n   * response.\n   */\n  getComplianceLevelEntryFromProfile(version) {\n    if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n      return;\n    }\n    if (version === undefined) {\n      version = this.getImageApiVersion();\n    }\n    switch (version) {\n      case Versions.VERSION1:\n        if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION3:\n        if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION2:\n        if (typeof this.imageInfo.profile === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        if (Array.isArray(this.imageInfo.profile) && this.imageInfo.profile.length > 0\n          && typeof this.imageInfo.profile[0] === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])) {\n          return this.imageInfo.profile[0];\n        }\n        break;\n      default:\n    }\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @returns {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n   */\n  getComplianceLevelFromProfile(version) {\n    const complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n    if (complianceLevel === undefined) {\n      return undefined;\n    }\n    const level = complianceLevel.match(/level[0-2](\\.json)?$/g);\n    return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n  }\n\n  /**\n   * @returns {SupportedFeatures} Image formats, qualities and region / size calculation\n   * methods that are supported by the IIIF service.\n   */\n  getComplianceLevelSupportedFeatures() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n    const version = this.getImageApiVersion();\n    const level = this.getComplianceLevelFromProfile(version);\n    if (level === undefined) {\n      return IIIF_PROFILE_VALUES['none']['none'];\n    }\n    return IIIF_PROFILE_VALUES[version][level];\n  }\n\n  /**\n   * @param {PreferredOptions} opt_preferredOptions Optional options for preferred format and quality.\n   * @returns {import(\"../source/IIIF.js\").Options} IIIF tile source ready constructor options.\n   * @api\n   */\n  getTileSourceOptions(opt_preferredOptions) {\n    const options = opt_preferredOptions || {},\n        version = this.getImageApiVersion();\n    if (version === undefined) {\n      return;\n    }\n    const imageOptions = version === undefined ? undefined : versionFunctions[version](this);\n    if (imageOptions === undefined) {\n      return;\n    }\n    return {\n      url: imageOptions.url,\n      version: version,\n      size: [this.imageInfo.width, this.imageInfo.height],\n      sizes: imageOptions.sizes,\n      format: options.format !== undefined && imageOptions.formats.includes(options.format) ? options.format :\n        imageOptions.preferredFormat !== undefined ? imageOptions.preferredFormat : 'jpg',\n      supports: imageOptions.supports,\n      quality: options.quality && imageOptions.qualities.includes(options.quality) ?\n        options.quality : imageOptions.qualities.includes('native') ? 'native' : 'default',\n      resolutions: Array.isArray(imageOptions.resolutions) ? imageOptions.resolutions.sort(function(a, b) {\n        return b - a;\n      }) : undefined,\n      tileSize: imageOptions.tileSize\n    };\n  }\n\n}\n\nexport default IIIFInfo;\nexport {Versions};\n","/**\n * @module ol/source/IIIF\n */\n\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\nimport {getTopLeft} from '../extent.js';\nimport {CustomTile} from './Zoomify.js';\nimport {Versions} from '../format/IIIFInfo.js';\nimport {assert} from '../asserts.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {null|string} [crossOrigin]\n * @property {import(\"../extent.js\").Extent} [extent=[0, -height, width, 0]]\n * @property {string} [format='jpg'] Requested image format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {string} [quality] Requested IIIF image quality. Default is 'native'\n * for version 1, 'default' for versions 2 and 3.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Array<number>} [resolutions] Supported resolutions as given in IIIF 'scaleFactors'\n * @property {import(\"../size.js\").Size} size Size of the image [width, height].\n * @property {Array<import(\"../size.js\").Size>} [sizes] Supported scaled image sizes.\n * Content of the IIIF info.json 'sizes' property, but as array of Size objects.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {Array<string>} [supports=[]] Supported IIIF region and size calculation\n * features.\n * @property {number} [tilePixelRatio]\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Same tile size is used for all zoom levels. If tile size is a number,\n * a square tile is assumed. If the IIIF image service supports arbitrary\n * tiling (sizeByH, sizeByW, sizeByWh or sizeByPct as well as regionByPx or regionByPct\n * are supported), the default tilesize is 256.\n * @property {number} [transition]\n * @property {string} [url] Base URL of the IIIF Image service.\n * This should be the same as the IIIF Image ID.\n * @property {Versions} [version=Versions.VERSION2] Service's IIIF Image API version.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\nfunction formatPercentage(percentage) {\n  return percentage.toLocaleString('en', {maximumFractionDigits: 10});\n}\n\n/**\n * @classdesc\n * Layer source for IIIF Image API services.\n * @api\n */\nclass IIIF extends TileImage {\n\n  /**\n   * @param {Options} opt_options Tile source options. Use {@link import(\"../format/IIIFInfo.js\").IIIFInfo}\n   * to parse Image API service information responses into constructor options.\n   * @api\n   */\n  constructor(opt_options) {\n\n    /**\n     * @type {Partial<Options>}\n     */\n    const options = opt_options || {};\n\n    let baseUrl = options.url || '';\n    baseUrl = baseUrl + (baseUrl.lastIndexOf('/') === baseUrl.length - 1 || baseUrl === '' ? '' : '/');\n    const version = options.version || Versions.VERSION2;\n    const sizes = options.sizes || [];\n    const size = options.size;\n    assert(size != undefined && Array.isArray(size) && size.length == 2 &&\n      !isNaN(size[0]) && size[0] > 0 && !isNaN(size[1]) && size[1] > 0, 60);\n    const width = size[0];\n    const height = size[1];\n    const tileSize = options.tileSize;\n    const tilePixelRatio = options.tilePixelRatio || 1;\n    const format = options.format || 'jpg';\n    const quality = options.quality || (options.version == Versions.VERSION1 ? 'native' : 'default');\n    let resolutions = options.resolutions || [];\n    const supports = options.supports || [];\n    const extent = options.extent || [0, -height, width, 0];\n\n    const supportsListedSizes = sizes != undefined && Array.isArray(sizes) && sizes.length > 0;\n    const supportsListedTiles = tileSize !== undefined && (typeof tileSize === 'number' && Number.isInteger(tileSize) && tileSize > 0 || Array.isArray(tileSize) && tileSize.length > 0);\n    const supportsArbitraryTiling = supports != undefined && Array.isArray(supports) &&\n      (supports.includes('regionByPx') || supports.includes('regionByPct')) &&\n      (supports.includes('sizeByWh') || supports.includes('sizeByH') ||\n      supports.includes('sizeByW') || supports.includes('sizeByPct'));\n\n    let tileWidth,\n        tileHeight,\n        maxZoom;\n\n    resolutions.sort(function(a, b) {\n      return b - a;\n    });\n\n    if (supportsListedTiles || supportsArbitraryTiling) {\n      if (tileSize != undefined) {\n        if (typeof tileSize === 'number' && Number.isInteger(tileSize) && tileSize > 0) {\n          tileWidth = tileSize;\n          tileHeight = tileSize;\n        } else if (Array.isArray(tileSize) && tileSize.length > 0) {\n          if (tileSize.length == 1 || tileSize[1] == undefined && Number.isInteger(tileSize[0])) {\n            tileWidth = tileSize[0];\n            tileHeight = tileSize[0];\n          }\n          if (tileSize.length == 2) {\n            if (Number.isInteger(tileSize[0]) && Number.isInteger(tileSize[1])) {\n              tileWidth = tileSize[0];\n              tileHeight = tileSize[1];\n            } else if (tileSize[0] == undefined && Number.isInteger(tileSize[1])) {\n              tileWidth = tileSize[1];\n              tileHeight = tileSize[1];\n            }\n          }\n        }\n      }\n      if (tileWidth === undefined || tileHeight === undefined) {\n        tileWidth = DEFAULT_TILE_SIZE;\n        tileHeight = DEFAULT_TILE_SIZE;\n      }\n      if (resolutions.length == 0) {\n        maxZoom = Math.max(\n          Math.ceil(Math.log(width / tileWidth) / Math.LN2),\n          Math.ceil(Math.log(height / tileHeight) / Math.LN2)\n        );\n        for (let i = maxZoom; i >= 0; i--) {\n          resolutions.push(Math.pow(2, i));\n        }\n      } else {\n        const maxScaleFactor = Math.max(...resolutions);\n        // TODO maxScaleFactor might not be a power to 2\n        maxZoom = Math.round(Math.log(maxScaleFactor) / Math.LN2);\n      }\n    } else {\n      // No tile support.\n      tileWidth = width;\n      tileHeight = height;\n      resolutions = [];\n      if (supportsListedSizes) {\n        /*\n         * 'sizes' provided. Use full region in different resolutions. Every\n         * resolution has only one tile.\n         */\n        sizes.sort(function(a, b) {\n          return a[0] - b[0];\n        });\n        maxZoom = -1;\n        const ignoredSizesIndex = [];\n        for (let i = 0; i < sizes.length; i++) {\n          const resolution = width / sizes[i][0];\n          if (resolutions.length > 0 && resolutions[resolutions.length - 1] == resolution) {\n            ignoredSizesIndex.push(i);\n            continue;\n          }\n          resolutions.push(resolution);\n          maxZoom++;\n        }\n        if (ignoredSizesIndex.length > 0) {\n          for (let i = 0; i < ignoredSizesIndex.length; i++) {\n            sizes.splice(ignoredSizesIndex[i] - i, 1);\n          }\n        }\n      } else {\n        // No useful image information at all. Try pseudo tile with full image.\n        resolutions.push(1);\n        sizes.push([width, height]);\n        maxZoom = 0;\n      }\n    }\n\n    const tileGrid = new TileGrid({\n      tileSize: [tileWidth, tileHeight],\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions\n    });\n\n    const tileUrlFunction = function(tileCoord, pixelRatio, projection) {\n      let regionParam,\n          sizeParam;\n      const zoom = tileCoord[0];\n      if (zoom > maxZoom) {\n        return;\n      }\n      const tileX = tileCoord[1],\n          tileY = tileCoord[2],\n          scale = resolutions[zoom];\n      if (tileX === undefined || tileY === undefined || scale === undefined ||\n      tileX < 0 || Math.ceil(width / scale / tileWidth) <= tileX ||\n      tileY < 0 || Math.ceil(height / scale / tileHeight) <= tileY) {\n        return;\n      }\n      if (supportsArbitraryTiling || supportsListedTiles) {\n        const regionX = tileX * tileWidth * scale,\n            regionY = tileY * tileHeight * scale;\n        let regionW = tileWidth * scale,\n            regionH = tileHeight * scale,\n            sizeW = tileWidth,\n            sizeH = tileHeight;\n        if (regionX + regionW > width) {\n          regionW = width - regionX;\n        }\n        if (regionY + regionH > height) {\n          regionH = height - regionY;\n        }\n        if (regionX + tileWidth * scale > width) {\n          sizeW = Math.floor((width - regionX + scale - 1) / scale);\n        }\n        if (regionY + tileHeight * scale > height) {\n          sizeH = Math.floor((height - regionY + scale - 1) / scale);\n        }\n        if (regionX == 0 && regionW == width && regionY == 0 && regionH == height) {\n          // canonical full image region parameter is 'full', not 'x,y,w,h'\n          regionParam = 'full';\n        } else if (!supportsArbitraryTiling || supports.includes('regionByPx')) {\n          regionParam = regionX + ',' + regionY + ',' + regionW + ',' + regionH;\n        } else if (supports.includes('regionByPct')) {\n          const pctX = formatPercentage(regionX / width * 100),\n              pctY = formatPercentage(regionY / height * 100),\n              pctW = formatPercentage(regionW / width * 100),\n              pctH = formatPercentage(regionH / height * 100);\n          regionParam = 'pct:' + pctX + ',' + pctY + ',' + pctW + ',' + pctH;\n        }\n        if (version == Versions.VERSION3 && (!supportsArbitraryTiling || supports.includes('sizeByWh'))) {\n          sizeParam = sizeW + ',' + sizeH;\n        } else if (!supportsArbitraryTiling || supports.includes('sizeByW')) {\n          sizeParam = sizeW + ',';\n        } else if (supports.includes('sizeByH')) {\n          sizeParam = ',' + sizeH;\n        } else if (supports.includes('sizeByWh')) {\n          sizeParam = sizeW + ',' + sizeH;\n        } else if (supports.includes('sizeByPct')) {\n          sizeParam = 'pct:' + formatPercentage(100 / scale);\n        }\n      } else {\n        regionParam = 'full';\n        if (supportsListedSizes) {\n          const regionWidth = sizes[zoom][0],\n              regionHeight = sizes[zoom][1];\n          if (version == Versions.VERSION3) {\n            if (regionWidth == width && regionHeight == height) {\n              sizeParam = 'max';\n            } else {\n              sizeParam = regionWidth + ',' + regionHeight;\n            }\n          } else {\n            if (regionWidth == width) {\n              sizeParam = 'full';\n            } else {\n              sizeParam = regionWidth + ',';\n            }\n          }\n        } else {\n          sizeParam = version == Versions.VERSION3 ? 'max' : 'full';\n        }\n      }\n      return baseUrl + regionParam + '/' + sizeParam + '/0/' + quality + '.' + format;\n    };\n\n    const IiifTileClass = CustomTile.bind(null, toSize(tileSize || 256).map(function(size) {\n      return size * tilePixelRatio;\n    }));\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: options.state,\n      tileClass: IiifTileClass,\n      tileGrid: tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition\n    });\n\n    /**\n     * @inheritDoc\n     */\n    this.zDirection = options.zDirection;\n\n  }\n\n}\n\nexport default IIIF;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   */\n  constructor(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            const sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  }\n}\n\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport {abstract} from '../util.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n\n\n/**\n * @enum {string}\n */\nconst ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   * @override\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    if (this.resolutions_) {\n      const idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  }\n}\n\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options=} opt_options Image ArcGIS Rest Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    const image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    extent = extent.slice();\n    const centerX = (extent[0] + extent[2]) / 2;\n    const centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      const halfWidth = this.ratio_ * getWidth(extent) / 2;\n      const halfHeight = this.ratio_ * getHeight(extent) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    const width = Math.ceil(getWidth(extent) / imageResolution);\n    const height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - imageResolution * width / 2;\n    extent[2] = centerX + imageResolution * width / 2;\n    extent[1] = centerY - imageResolution * height / 2;\n    extent[3] = centerY + imageResolution * height / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    const url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n\n    return this.image_;\n\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    const srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    const url = this.url_;\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  }\n}\n\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport ImageSource from './Image.js';\n\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./State.js\").default} [state] Source state.\n */\n\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options=} opt_options ImageCanvas options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state\n    });\n\n    /**\n    * @private\n    * @type {FunctionType}\n    */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n    * @private\n    * @type {import(\"../ImageCanvas.js\").default}\n    */\n    this.canvas_ = null;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.renderedRevision_ = 0;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.ratio_ = options.ratio !== undefined ?\n      options.ratio : 1.5;\n\n  }\n\n  /**\n  * @inheritDoc\n  */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (canvas &&\n       this.renderedRevision_ == this.getRevision() &&\n       canvas.getResolution() == resolution &&\n       canvas.getPixelRatio() == pixelRatio &&\n       containsExtent(canvas.getExtent(), extent)) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this, extent, resolution, pixelRatio, size, projection);\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport ImageWrapper from '../Image.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageMapGuide extends ImageSource {\n  /**\n   * @param {Options} options ImageMapGuide options.\n   */\n  constructor(options) {\n\n    super({\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ = options.displayDpi !== undefined ?\n      options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n      options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ = options.useOverlay !== undefined ?\n      options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    let image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      const imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n        projection);\n      image = new ImageWrapper(extent, resolution, pixelRatio,\n        imageUrl, this.crossOrigin_,\n        this.imageLoadFunction_);\n      image.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object<string, string|number>} params Request parameters.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  getUrl(baseUrl, params, extent, size, projection) {\n    const scale = getScale(extent, size,\n      this.metersPerUnit_, this.displayDpi_);\n    const center = getCenter(extent);\n    const baseParams = {\n      'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1]\n    };\n    assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  }\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n}\n\n\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  const mcsW = getWidth(extent);\n  const mcsH = getHeight(extent);\n  const devW = size[0];\n  const devH = size[1];\n  const mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\nexport default ImageMapGuide;\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined ?\n          options.imageLoadFunction : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      projection: getProjection(options.projection)\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(this.imageExtent_, undefined, 1, this.url_, crossOrigin, imageLoadFunction);\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const resolution = getHeight(imageExtent) / imageHeight;\n      const targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        const context = createCanvasContext2D(targetWidth, imageHeight);\n        const canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight,\n          0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\n\nexport default Static;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  /**\n   * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n   * @api\n   */\n  CARMENTA_SERVER: 'carmentaserver',\n  /**\n   * HiDPI support for [GeoServer](https://geoserver.org/)\n   * @api\n   */\n  GEOSERVER: 'geoserver',\n  /**\n   * HiDPI support for [MapServer](https://mapserver.org/)\n   * @api\n   */\n  MAPSERVER: 'mapserver',\n  /**\n   * HiDPI support for [QGIS](https://qgis.org/)\n   * @api\n   */\n  QGIS: 'qgis'\n};\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options=} [opt_options] ImageWMS options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png'\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection() ? this.getProjection().getMetersPerUnit() : 1;\n      const dpi = 25.4 / 0.28;\n      const inchesPerMeter = 39.37;\n      baseParams['SCALE'] = resolution * mpu * inchesPerMeter * dpi;\n    }\n\n    assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    const requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    const image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n\n    return this.image_;\n\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\n\nexport default ImageWMS;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options=} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    const url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n}\n\nexport default OSM;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n    super(options);\n  }\n\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ViewHint from '../../ViewHint.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {compose as composeTransform, makeInverse} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n      let projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        const sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      const image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const size = frameState.size;\n    const scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n\n    let width = Math.round(size[0] * pixelRatio);\n    let height = Math.round(size[1] * pixelRatio);\n    const rotation = viewState.rotation;\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    // set forward and inverse pixel transforms\n    composeTransform(this.pixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / pixelRatio, 1 / pixelRatio,\n      rotation,\n      -width / 2, -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = this.createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n      clipped = !containsExtent(layerExtent, frameState.extent) && intersects(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(this.tempTransform_,\n      width / 2, height / 2,\n      scale, scale,\n      0,\n      imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n      imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n\n    const dx = transform[4];\n    const dy = transform[5];\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    this.preRender(context, frameState);\n    if (dw >= 0.5 && dh >= 0.5) {\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = this.context.globalAlpha;\n        this.context.globalAlpha = opacity;\n      }\n      this.context.drawImage(img, 0, 0, +img.width, +img.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      if (opacity !== 1) {\n        this.context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n\n  }\n\n}\n\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n\n  /**\n   * @param {import(\"./BaseImage.js\").Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/source/Raster\n */\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport {create as createTransform} from '../transform.js';\nimport ImageSource from './Image.js';\nimport TileSource from './Tile.js';\nimport SourceState from './State.js';\nimport Source from './Source.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nconst RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n   * @param {Object} data An object made available to operations.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n\n  }\n\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null\n    });\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.worker_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ = options.operationType !== undefined ?\n      options.operationType : RasterOperationType.PIXEL;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function() {\n      return 1;\n    }, this.changed.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      declutterItems: []\n    };\n\n    this.setAttributions(function(frameState) {\n      const attributions = [];\n      for (let index = 0, iMax = options.sources.length; index < iMax; ++index) {\n        const sourceOrLayer = options.sources[index];\n        const source = sourceOrLayer instanceof Source ? sourceOrLayer : sourceOrLayer.getSource();\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object=} opt_lib Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, opt_lib) {\n    this.worker_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === RasterOperationType.IMAGE,\n      queue: 1,\n      lib: opt_lib,\n      threads: this.threads_\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n\n    const frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n\n    const center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Infinity;\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (source.getState() !== SourceState.READY) {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n    this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object} data The user data.\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (resolution !== this.requestedFrameState_.viewState.resolution ||\n        !equals(extent, this.requestedFrameState_.extent)) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n  }\n\n  /**\n   * @override\n   */\n  getImageInternal() {\n    return null; // not implemented\n  }\n}\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container) {\n    element = container.firstElementChild;\n  }\n  if (!(element instanceof HTMLCanvasElement)) {\n    throw new Error('Unsupported rendered element: ' + element);\n  }\n  if (element.width === width && element.height === height) {\n    const context = element.getContext('2d');\n    return context.getImageData(0, 0, width, height);\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function(layer) {\n    return layer.getLayerState();\n  });\n}\n\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\n\nexport default RasterSource;\n","/**\n * @module ol/source/Stamen\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\nimport XYZ from './XYZ.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url = options.url !== undefined ? options.url :\n      'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n        '/{z}/{x}/{y}.' + layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n}\n\nexport default Stamen;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options=} opt_options Tile ArcGIS Rest options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    const srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? /** @type {number} */ (pixelRatio) : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n}\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileArcGISRest}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && !this.hidpi_) {\n    pixelRatio = 1;\n  }\n\n  const tileExtent = tileGrid.getTileCoordExtent(\n    tileCoord, this.tmpExtent_);\n  let tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  // Apply default params and override with user specified values.\n  const baseParams = {\n    'F': 'image',\n    'FORMAT': 'PNG32',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport XYZ from './XYZ.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\nclass LabeledTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {string} text Text.\n   */\n  constructor(tileCoord, tileSize, text) {\n\n    super(tileCoord, TileState.LOADED);\n\n    /**\n    * @private\n    * @type {import(\"../size.js\").Size}\n    */\n    this.tileSize_ = tileSize;\n\n    /**\n    * @private\n    * @type {string}\n    */\n    this.text_ = text;\n\n    /**\n    * @private\n    * @type {HTMLCanvasElement}\n    */\n    this.canvas_ = null;\n\n  }\n\n  /**\n  * Get the image element for this tile.\n  * @return {HTMLCanvasElement} Image.\n  */\n  getImage() {\n    if (this.canvas_) {\n      return this.canvas_;\n    } else {\n      const tileSize = this.tileSize_;\n      const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n      context.strokeStyle = 'grey';\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n      context.fillStyle = 'grey';\n      context.strokeStyle = 'white';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = '24px sans-serif';\n      context.lineWidth = 4;\n      context.strokeText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n      context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n      this.canvas_ = context.canvas;\n      return context.canvas;\n    }\n  }\n\n  /**\n  * @override\n  */\n  load() {}\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [zDirection=0] Set to `1` when debugging `VectorTile` sources with\n * a default configuration. Indicates which resolution should be used by a renderer if\n * the view resolution does not match any resolution of the tile source. If 0, the nearest\n * resolution will be used. If 1, the nearest lower resolution will be used. If -1, the\n * nearest higher resolution will be used.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options=} opt_options Debug tile options.\n   */\n  constructor(opt_options) {\n    /**\n     * @type {Options}\n     */\n    const options = opt_options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection\n    });\n\n  }\n\n  /**\n  * @inheritDoc\n  */\n  getTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n    } else {\n      const tileSize = toSize(this.tileGrid.getTileSize(z));\n      const tileCoord = [z, x, y];\n      const textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n      let text;\n      if (textTileCoord) {\n        text = 'z:' + textTileCoord[0] + ' x:' + textTileCoord[1] + ' y:' + textTileCoord[2];\n      } else {\n        text = 'none';\n      }\n      const tile = new LabeledTile(tileCoord, tileSize, text);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  }\n}\n\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      let response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState(SourceState.ERROR);\n  }\n}\n\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options=} [opt_options] Tile WMS options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : /** @type {Options} */ ({});\n\n    const params = options.params || {};\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png'\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection() ? this.getProjection().getMetersPerUnit() : 1;\n      const dpi = 25.4 / 0.28;\n      const inchesPerMeter = 39.37;\n      baseParams['SCALE'] = resolution * mpu * inchesPerMeter * dpi;\n    }\n\n    assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTilePixelRatio(pixelRatio) {\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n    /** @type {number} */ (pixelRatio);\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileWMS;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileSource from './Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\n\nexport class CustomTile extends Tile {\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {TileState} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative = (coordinate[0] - this.extent_[0]) /\n        (this.extent_[2] - this.extent_[0]);\n    const yRelative = (coordinate[1] - this.extent_[1]) /\n        (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, opt_request) {\n    if (this.state == TileState.EMPTY && opt_request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(this, EventType.CHANGE, function(e) {\n        callback(this.getData(coordinate));\n      }, this);\n      this.loadInternal_();\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback(this.getData(coordinate));\n        }.bind(this), 0);\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.src_;\n  }\n\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(this.src_, this.handleLoad_.bind(this),\n          this.handleError_.bind(this));\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n\n  /**\n   * @override\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `opt_request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = options.preemptive !== undefined ?\n      options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(\n    coordinate, resolution, callback, opt_request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */(this.getTile(\n        tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n      tile.forDataAtCoordinate(coordinate, callback, opt_request);\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState(SourceState.ERROR);\n  }\n\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      const attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState(SourceState.READY);\n\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      const tileCoord = [z, x, y];\n      const urlTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n      const tile = new CustomTile(\n        tileCoord,\n        tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n        tileUrl !== undefined ? tileUrl : '',\n        this.tileGrid.getTileCoordExtent(tileCoord),\n        this.preemptive_,\n        this.jsonp_);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\n\nexport default UTFGrid;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport TileState from '../TileState.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport Tile from '../VectorTile.js';\nimport {toSize} from '../size.js';\nimport UrlTile from './UrlTile.js';\nimport {getKeyZXY, fromKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection, createForProjection} from '../tilegrid.js';\nimport {buffer as bufferExtent, getIntersection, intersects} from '../extent.js';\nimport EventType from '../events/EventType.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {equals} from '../array.js';\nimport TileCache from '../TileCache.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=128] Cache size.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number} [zDirection=1] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid = options.tileGrid || createXYZ({\n      extent: extent,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize || 512\n    });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @type {Object<string, import(\"./VectorTile\").default>}\n     */\n    this.loadingTiles_ = {};\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    const urlTileCoord = tile.wrappedTileCoord;\n    const tileGrid = this.getTileGridForProjection(projection);\n    const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n    const z = urlTileCoord[0];\n    const resolution = tileGrid.getResolution(z);\n    // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n    bufferExtent(extent, -resolution, extent);\n    const sourceTileGrid = this.tileGrid;\n    const sourceExtent = sourceTileGrid.getExtent();\n    if (sourceExtent) {\n      getIntersection(extent, sourceExtent, extent);\n    }\n    const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n    const minZoom = sourceTileGrid.getMinZoom();\n\n    const previousSourceTiles = tile.sourceTiles;\n    let sourceTiles, covered, loadedZ;\n    if (previousSourceTiles && previousSourceTiles.length > 0 && previousSourceTiles[0].tileCoord[0] === sourceZ) {\n      sourceTiles = previousSourceTiles;\n      covered = true;\n      loadedZ = sourceZ;\n    } else {\n      sourceTiles = [];\n      loadedZ = sourceZ + 1;\n      do {\n        --loadedZ;\n        covered = true;\n        sourceTileGrid.forEachTileCoord(extent, loadedZ, function(sourceTileCoord) {\n          const tileUrl = this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n          let sourceTile;\n          if (tileUrl !== undefined) {\n            if (this.sourceTileCache.containsKey(tileUrl)) {\n              sourceTile = this.sourceTileCache.get(tileUrl);\n              const state = sourceTile.getState();\n              if (state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n                sourceTiles.push(sourceTile);\n                return;\n              }\n            } else if (loadedZ === sourceZ) {\n              sourceTile = new this.tileClass(sourceTileCoord, TileState.IDLE, tileUrl,\n                this.format_, this.tileLoadFunction);\n              sourceTile.extent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n              sourceTile.projection = projection;\n              sourceTile.resolution = sourceTileGrid.getResolution(sourceTileCoord[0]);\n              this.sourceTileCache.set(tileUrl, sourceTile);\n              sourceTile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n              sourceTile.load();\n            }\n          }\n          covered = covered && sourceTile && sourceTile.getState() === TileState.LOADED;\n          if (!sourceTile) {\n            return;\n          }\n          if (sourceTile.getState() !== TileState.EMPTY && tile.getState() === TileState.IDLE) {\n            tile.loadingSourceTiles++;\n            sourceTile.addEventListener(EventType.CHANGE, function listenChange() {\n              const state = sourceTile.getState();\n              const sourceTileKey = sourceTile.getKey();\n              if (state === TileState.LOADED || state === TileState.ERROR) {\n                if (state === TileState.LOADED) {\n                  sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n                  tile.loadingSourceTiles--;\n                  delete tile.errorSourceTileKeys[sourceTileKey];\n                } else if (state === TileState.ERROR) {\n                  tile.errorSourceTileKeys[sourceTileKey] = true;\n                }\n                const errorTileCount = Object.keys(tile.errorSourceTileKeys).length;\n                if (tile.loadingSourceTiles - errorTileCount === 0) {\n                  tile.hifi = errorTileCount === 0;\n                  tile.sourceZ = sourceZ;\n                  tile.setState(TileState.LOADED);\n                }\n              }\n            });\n          }\n        }.bind(this));\n        if (!covered) {\n          sourceTiles.length = 0;\n        }\n      } while (!covered && loadedZ > minZoom);\n    }\n\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n    }\n    if (covered) {\n      tile.hifi = sourceZ === loadedZ;\n      tile.sourceZ = loadedZ;\n      if (tile.getState() < TileState.LOADED) {\n        tile.setState(TileState.LOADED);\n      } else if (!previousSourceTiles || !equals(sourceTiles, previousSourceTiles)) {\n        tile.sourceTiles = sourceTiles;\n      }\n    }\n    this.sourceTileCache.expireCache({});\n    return sourceTiles;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(coordKey));\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n        empty = empty && !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      }.bind(this));\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection));\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      tileGrid = createForProjection(projection, undefined,\n        sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n  }\n}\n\n\nexport default VectorTile;\n\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  const loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n","/**\n * @module ol/source\n */\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n","import 'ol/ol.css'\nimport { Map, View } from 'ol'\nimport WMTSSource from 'ol/source/WMTS'\nimport TileLayer from 'ol/layer/Tile.js'\nimport WMTSTileGrid from 'ol/tilegrid/WMTS.js'\nimport { get as getProjection, fromLonLat } from 'ol/proj'\nimport { getTopLeft, getWidth } from 'ol/extent.js'\nimport { Control } from 'ol/control'\nimport WKT from 'ol/format/WKT'\nimport autocomplete from 'autocompleter'\nimport 'autocompleter/autocomplete.css'\nimport VectorLayer from 'ol/layer/Vector'\nimport { Vector as VectorSource } from 'ol/source'\n\nconst locatieServerUrl = 'https://geodata.nationaalgeoregister.nl/locatieserver/v3'\n\nconst projection = getProjection('EPSG:3857')\nconst projectionExtent = projection.getExtent()\nconst size = getWidth(projectionExtent) / 256\nconst resolutions = new Array(20)\nconst matrixIds = new Array(20)\n\nfor (var z = 0; z < 20; ++z) {\n  // generate resolutions and matrixIds arrays for this WMTS\n  resolutions[z] = size / Math.pow(2, z)\n  matrixIds[z] = z\n}\n\nconst baseMapLayer = new TileLayer({\n  extent: projectionExtent,\n  source: new WMTSSource({\n    url: 'https://geodata.nationaalgeoregister.nl/tiles/service/wmts',\n    layer: 'brtachtergrondkaartgrijs',\n    matrixSet: 'EPSG:3857',\n    format: 'image/png',\n    attributions: 'BRT achtergrondkaart: <a href=\"http://www.kadaster.nl\">Kadaster</a>',\n    tileGrid: new WMTSTileGrid({\n      origin: getTopLeft(projectionExtent),\n      resolutions: resolutions,\n      matrixIds: matrixIds\n    }),\n    style: 'default'\n  })\n})\n\nconst vectorSource = new VectorSource()\n\nconst vectorLayer = new VectorLayer({\n  source: vectorSource,\n  declutter: true\n})\n\nconst map = new Map({\n  layers: [\n    baseMapLayer,\n    vectorLayer\n  ],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([5.43, 52.18]),\n    // change zoomlevel, due to the scale dependent layer in WMS service\n    zoom: 8\n  })\n})\n\nvar LocationServerControl = /* @__PURE__ */(function (Control) {\n  function LocationServerControl (optOptions) {\n    var options = optOptions || {}\n    var input = document.createElement('input')\n    input.id = 'input-loc'\n    var element = document.createElement('div')\n    element.className = 'input-loc ol-unselectable ol-control'\n    element.appendChild(input)\n    Control.call(this, {\n      element: element,\n      target: options.target\n    })\n    autocomplete({\n      input: input,\n      debounceWaitMs: 10,\n      showOnFocus: true,\n      fetch: function (text, update) {\n        fetch(`${locatieServerUrl}/suggest?q=${text}`)\n          .then((response) => {\n            return response.json()\n          })\n          .then((data) => {\n            const suggestions = []\n            if (data.response.docs.length > 0) {\n              data.response.docs.forEach(function (item) {\n                const name = item.weergavenaam\n                const id = item.id\n                suggestions.push({ label: name, value: id })\n              })\n              update(suggestions)\n            }\n          })\n      },\n      onSelect: function (item, input) {\n        input.value = item.label\n        const id = item.value\n        fetch(`${locatieServerUrl}/lookup?id=${id}&fl=id,geometrie_ll`)\n          .then((response) => {\n            return response.json()\n          })\n          .then((data) => {\n            const wktLoc = data.response.docs[0].geometrie_ll\n            const format = new WKT()\n            const feature = format.readFeature(wktLoc, {\n              dataProjection: 'EPSG:4326',\n              featureProjection: 'EPSG:3857'\n            })\n            vectorSource.clear()\n            vectorSource.addFeature(feature)\n            const ext = feature.getGeometry().getExtent()\n            map.getView().fit(ext, {\n              // maxZoom: 20,\n              minResolution: 0.21,\n              duration: 500\n            })\n          })\n      }\n    })\n  }\n  if (Control) LocationServerControl.__proto__ = Control // eslint-disable-no-proto\n  LocationServerControl.prototype = Object.create(Control && Control.prototype)\n  LocationServerControl.prototype.constructor = LocationServerControl\n  return LocationServerControl\n}(Control))\n\nmap.addControl(new LocationServerControl())\n"]}