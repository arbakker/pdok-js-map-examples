{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-87997c17dd7ad522.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/has.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/WMTSRequestEncoding.js","node_modules/ol/src/uri.js","node_modules/ol/src/tilegrid/WMTS.js","node_modules/ol/src/source/WMTS.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/TextFeature.js","node_modules/ol/src/format/WKT.js","locatie-server-control.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-6d1674b4d183db8c.js","index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"6GIEr\\\":\\\"index.b5f2fe2a.js\\\",\\\"zkrys\\\":\\\"index.aef40736.css\\\"}\"));","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function () {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  preventDefault() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*=} opt_target Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[\n            i\n          ]).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[\n            i\n          ]).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key)\n    ? changeEventTypeCache[key]\n    : (changeEventTypeCache[key] = 'change:' + key);\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean=} opt_managed Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex =\n      zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(\n      LayerProperty.EXTENT\n    ));\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\nimport {toString} from '../transform.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let div;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!div) {\n          div = document.createElement('div');\n          div.innerHTML = 'M';\n          div.style.margin = '0 !important';\n          div.style.padding = '0 !important';\n          div.style.position = 'absolute !important';\n          div.style.left = '-99999px !important';\n        }\n        div.style.font = fontSpec;\n        document.body.appendChild(div);\n        height = div.offsetHeight;\n        document.body.removeChild(div);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nlet createTransformStringCanvas = null;\n\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return toString(transform);\n  } else {\n    if (!createTransformStringCanvas) {\n      createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n    }\n    createTransformStringCanvas.style.transform = toString(transform);\n    return createTransformStringCanvas.style.transform;\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(layer);\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*=} opt_element Element.\n   * @param {number=} opt_index The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>=} opt_array Array.\n   * @param {Options=} opt_options Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getChangeEventType} from '../Object.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addEventListener(\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_\n    );\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(\n      Property.LAYERS\n    ));\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    this.originalEvent.preventDefault();\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    this.originalEvent.stopPropagation();\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends EventTarget {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance\n      ? moveTolerance * DEVICE_PIXEL_RATIO\n      : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.propagationStopped &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    if (\n      !this.originalPointerMoveEvent_ ||\n      this.originalPointerMoveEvent_.defaultPrevented\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      (tile.hifi && state === TileState.LOADED) ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry = this.getSimplifiedGeometryInternal(\n      squaredTolerance\n    );\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; offset + stride < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions=} opt_options View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * Padding (in css pixels).\n     * If the map viewport is partially covered with other content (overlays) along\n     * its edges, this setting allows to shift the center of the viewport away from that\n     * content. The order of the values in the array is top, right, bottom, left.\n     * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n     * @type {Array<number>|undefined}\n     * @api\n     */\n    this.padding = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (let i = 0; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(\n      ViewProperty.CENTER\n    ));\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.minResolution_\n    ));\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.getZoomForResolution(\n      this.maxResolution_\n    ));\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view shoud allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSize_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = /** @type {number} */ (this.getResolution());\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n    const padding = this.padding;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n          .clone()\n          .transform(userProjection, this.getProjection()));\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions=} opt_options Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n    const coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(-rotation);\n    let sinAngle = Math.sin(-rotation);\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    const stride = geometry.getStride();\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]\n    );\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    let centerRotX = (minRotX + maxRotX) / 2;\n    let centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n   * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number=} opt_duration The animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number=} opt_duration Animation duration in ms.\n   * @param {number=} opt_resolutionDirection Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number=} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {\n  DEVICE_PIXEL_RATIO,\n  IMAGE_DECODE,\n  PASSIVE_EVENT_LISTENERS,\n} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addEventListener(\n      getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_\n    );\n    this.addEventListener(\n      getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_\n    );\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(\n      MapProperty.TARGET\n    ));\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(\n      MapProperty.SIZE\n    ));\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    return this.getTargetElement()\n      ? this.getTargetElement().ownerDocument\n      : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target =\n        'host' in rootNode // ShadowRoot\n          ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(\n              originalEvent.clientX,\n              originalEvent.clientY\n            )\n          : /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget =\n            !IMAGE_DECODE && Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    this.set(MapProperty.VIEW, view);\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      const computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth']),\n      ]);\n    }\n\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view !== undefined ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options=} opt_options Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options=} opt_options Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options=} opt_options Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n    .originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n   * @param {boolean=} opt_renderEdges Render reprojection edges.\n   * @param {object=} opt_contextOptions Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      this.sourceTiles_.forEach(function (tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*=} opt_options Options (reserverd for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number=} opt_direction If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(\n            tileCoordKey\n          ));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(\n          projection\n        );\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST', // see spec §10\n};\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  opt_extent,\n  opt_matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {appendParams} from '../uri.js';\nimport {assign} from '../obj.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {find, findIndex, includes} from '../array.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined\n        ? /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding)\n        : WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n      assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == WMTSRequestEncoding.KVP\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this\n      .tileGrid);\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': tileCoord[2],\n          };\n          assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == WMTSRequestEncoding.KVP) {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function (elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        const tileMatrixSet = find(tileMatrixSets, function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        } else {\n          return supportedCRS == config['projection'];\n        }\n      });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function (elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function (elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  const wrapX = false;\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // substract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = find(\n      matrixSetObj.TileMatrix,\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchOriginXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n\n  const extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (projection.getExtent() === null) {\n    projection.setExtent(extent);\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(\n      TileProperty.USE_INTERIM_TILES_ON_ERROR\n    ));\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === '' &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (\n      context &&\n      (context.canvas.width === 0 ||\n        context.canvas.style.transform === transform)\n    ) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {createTransformString} from '../../render/canvas.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[\n          tileCoordKey\n        ]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = origin[0] - (originTileCoord[1] - tileCoord[1]) * dx;\n        const nextX = Math.round(floatX + dx);\n        const floatY = origin[1] - (originTileCoord[2] - tileCoord[2]) * dy;\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n          layerState.opacity\n        );\n        if (clips && !inTransition) {\n          context.restore();\n        }\n        this.renderedTiles.push(tile);\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /*\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      const renderOptions = this.createRenderOptions();\n\n      this.createHitDetectionCanvas_(renderOptions);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    if (!this.canvas_[pixelRatio || 1]) {\n      const renderOptions = this.createRenderOptions();\n\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio || 1,\n        renderOptions.size * pixelRatio || 1\n      );\n\n      this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n\n      this.canvas_[pixelRatio || 1] = context.canvas;\n    }\n    return this.canvas_[pixelRatio || 1];\n  }\n\n  /*\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @returns {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    const renderOptions = this.createRenderOptions();\n\n    const context = createCanvasContext2D(\n      renderOptions.size,\n      renderOptions.size\n    );\n\n    this.draw_(renderOptions, context, 0, 0, 1);\n\n    this.canvas_ = {};\n    this.canvas_[1] = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    const size = context.canvas.width;\n    const imageSize = size;\n    const displacement = this.getDisplacement();\n\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, x, y, pixelRatio) {\n    let i, angle0, radiusC;\n\n    // reset transform\n    context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionCanvas_ = this.getImage(1);\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2,\n        renderOptions.size / 2,\n        this.radius_,\n        0,\n        2 * Math.PI,\n        true\n      );\n    } else {\n      const radius2 =\n        this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(\n          renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0)\n        );\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options=} opt_options Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(\n          geometry\n        ));\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(\n      Property.RENDER_ORDER\n    ));\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          offset,\n          endss[i],\n          stride,\n          myEnds\n        );\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEndss,\n        geometry,\n        renderer,\n        inflateMultiCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.POLYGON ||\n      type == GeometryType.MULTI_LINE_STRING\n    ) {\n      builderEnds = [];\n      flatCoordinates =\n        type == GeometryType.POLYGON\n          ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n          : geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(\n        flatCoordinates,\n        0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride,\n        builderEnds\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnds,\n        geometry,\n        renderer,\n        inflateCoordinatesArray,\n      ]);\n    } else if (\n      type == GeometryType.LINE_STRING ||\n      type == GeometryType.CIRCLE\n    ) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        false,\n        false\n      );\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n        inflateCoordinates,\n      ]);\n    } else if (type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (builderEnd > builderBegin) {\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n      }\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([\n        CanvasInstruction.CUSTOM,\n        builderBegin,\n        builderEnd,\n        geometry,\n        renderer,\n      ]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object=} opt_sharedData Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      const geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object=} opt_sharedData Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate = (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    let previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  let previousAngle;\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {*} value\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX\n * @property {number} drawImageY\n * @property {number} drawImageW\n * @property {number} drawImageH\n * @property {number} originX\n * @property {number} originY\n * @property {Array<number>} scale\n * @property {BBox} declutterBox\n * @property {import(\"../../transform.js\").Transform} canvasTransform\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context[\n      'strokeStyle'\n    ] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              if (!declutterImageWithText[d]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[d] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[d];\n              delete declutterImageWithText[d];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceet that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number=} opt_renderBuffer Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      const renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          renderBuffer\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize)\n        .data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      2,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(\n        this.squaredTolerance_,\n        this.userTransform_\n      ));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset\n          ? strokeStyleLineDashOffset\n          : defaultLineDashOffset,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          this.pixelRatio_ *\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth),\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageSize = imageStyle.getSize();\n      if (!imageSize) {\n        this.image_ = null;\n      } else {\n        const imageAnchor = imageStyle.getAnchor();\n        // FIXME pixel ratio\n        const imageImage = imageStyle.getImage(1);\n        const imageOrigin = imageStyle.getOrigin();\n        const imageScale = imageStyle.getScaleArray();\n        this.imageAnchorX_ = imageAnchor[0];\n        this.imageAnchorY_ = imageAnchor[1];\n        this.imageHeight_ = imageSize[1];\n        this.image_ = imageImage;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = [\n          this.pixelRatio_ * imageScale[0],\n          this.pixelRatio_ * imageScale[1],\n        ];\n        this.imageWidth_ = imageSize[0];\n      }\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio]) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ration of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n    const displacement = this.getDisplacement();\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    offset[0] += displacement[0];\n    offset[1] += displacement[1];\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped =\n        !containsExtent(layerExtent, frameState.extent) &&\n        intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    this.renderWorlds(replayGroup, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : String(opacity);\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] / 2;\n          const height = size[1] / 2;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              0.5,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  0.5,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  0.5,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)\n    ) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(\n          toUserExtent(loadExtents[i], projection),\n          resolution,\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] / 2;\n  const height = size[1] / 2;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    0.5,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const canvas = document.createElement('canvas');\n        canvas.width = imgSize[0];\n        canvas.height = imgSize[1];\n        const imgContext = canvas.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        const img = imgContext.canvas;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        const width = imgSize ? imgSize[0] : img.width;\n        const height = imgSize ? imgSize[1] : img.height;\n        const iconContext = createCanvasContext2D(width, height);\n        iconContext.drawImage(img, 0, 0);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            size: image.getSize(),\n            opacity: image.getOpacity(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = Number(style.getZIndex());\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      const geometry = style.getGeometryFunction()(feature);\n      if (geometry && intersects(extent, geometry.getExtent())) {\n        byGeometryType[geometry.getType().replace('Multi', '')].push(\n          geometry,\n          style\n        );\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const index =\n      (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number=} opt_maxEntries Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n","/**\n * @module ol/loadingstrategy\n */\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection and success and failure callbacks as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (format.readFeatures(source, {\n            extent: extent,\n            featureProjection: projection,\n          })),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(): void=} success Success\n   *      Function called when loading succeeded.\n   * @param {function(): void=} failure Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        if (success !== undefined) {\n          success(features);\n        }\n        source.addFeatures(features);\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>=} opt_features Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options=} opt_options Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element)\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray();\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this.loading = this.loader_ !== VOID;\n      }\n    }\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Feature\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(\n      this.hasProperties() ? this.getProperties() : null\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.geometryName_ = name;\n    this.addEventListener(\n      getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_\n    );\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>=} opt_geometries Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (geometries[\n            i\n          ]).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(\n        squaredTolerance\n      );\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = null;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.defaultFeatureProjection = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.TEXT;\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport TextFeature from './TextFeature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, import(\"../geom/GeometryLayout.js\").default)}\n */\nconst GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon,\n};\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY';\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z';\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M';\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM';\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6,\n};\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst WKTGeometryType = {};\nfor (const type in GeometryType) {\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n\n/**\n * Class to tokenize a WKT string.\n */\nclass Lexer {\n  /**\n   * @param {string} wkt WKT string.\n   */\n  constructor(wkt) {\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = -1;\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n  isAlpha_(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z');\n  }\n\n  /**\n   * @param {string} c Character.\n   * @param {boolean=} opt_decimal Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n  isNumeric_(c, opt_decimal) {\n    const decimal = opt_decimal !== undefined ? opt_decimal : false;\n    return (c >= '0' && c <= '9') || (c == '.' && !decimal);\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n  isWhiteSpace_(c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n  }\n\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n  nextChar_() {\n    return this.wkt.charAt(++this.index_);\n  }\n\n  /**\n   * Fetch and return the next token.\n   * @return {!Token} Next string token.\n   */\n  nextToken() {\n    const c = this.nextChar_();\n    const position = this.index_;\n    /** @type {number|string} */\n    let value = c;\n    let type;\n\n    if (c == '(') {\n      type = TokenType.LEFT_PAREN;\n    } else if (c == ',') {\n      type = TokenType.COMMA;\n    } else if (c == ')') {\n      type = TokenType.RIGHT_PAREN;\n    } else if (this.isNumeric_(c) || c == '-') {\n      type = TokenType.NUMBER;\n      value = this.readNumber_();\n    } else if (this.isAlpha_(c)) {\n      type = TokenType.TEXT;\n      value = this.readText_();\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken();\n    } else if (c === '') {\n      type = TokenType.EOF;\n    } else {\n      throw new Error('Unexpected character: ' + c);\n    }\n\n    return {position: position, value: value, type: type};\n  }\n\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n  readNumber_() {\n    let c;\n    const index = this.index_;\n    let decimal = false;\n    let scientificNotation = false;\n    do {\n      if (c == '.') {\n        decimal = true;\n      } else if (c == 'e' || c == 'E') {\n        scientificNotation = true;\n      }\n      c = this.nextChar_();\n    } while (\n      this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      (!scientificNotation && (c == 'e' || c == 'E')) ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      (scientificNotation && (c == '-' || c == '+'))\n    );\n    return parseFloat(this.wkt.substring(index, this.index_--));\n  }\n\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n  readText_() {\n    let c;\n    const index = this.index_;\n    do {\n      c = this.nextChar_();\n    } while (this.isAlpha_(c));\n    return this.wkt.substring(index, this.index_--).toUpperCase();\n  }\n}\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nclass Parser {\n  /**\n   * @param {Lexer} lexer The lexer.\n   */\n  constructor(lexer) {\n    /**\n     * @type {Lexer}\n     * @private\n     */\n    this.lexer_ = lexer;\n\n    /**\n     * @type {Token}\n     * @private\n     */\n    this.token_;\n\n    /**\n     * @type {import(\"../geom/GeometryLayout.js\").default}\n     * @private\n     */\n    this.layout_ = GeometryLayout.XY;\n  }\n\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n  consume_() {\n    this.token_ = this.lexer_.nextToken();\n  }\n\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  isTokenType(type) {\n    const isMatch = this.token_.type == type;\n    return isMatch;\n  }\n\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  match(type) {\n    const isMatch = this.isTokenType(type);\n    if (isMatch) {\n      this.consume_();\n    }\n    return isMatch;\n  }\n\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   */\n  parse() {\n    this.consume_();\n    const geometry = this.parseGeometry_();\n    return geometry;\n  }\n\n  /**\n   * Try to parse the dimensional info.\n   * @return {import(\"../geom/GeometryLayout.js\").default} The layout.\n   * @private\n   */\n  parseGeometryLayout_() {\n    let layout = GeometryLayout.XY;\n    const dimToken = this.token_;\n    if (this.isTokenType(TokenType.TEXT)) {\n      const dimInfo = dimToken.value;\n      if (dimInfo === Z) {\n        layout = GeometryLayout.XYZ;\n      } else if (dimInfo === M) {\n        layout = GeometryLayout.XYM;\n      } else if (dimInfo === ZM) {\n        layout = GeometryLayout.XYZM;\n      }\n      if (layout !== GeometryLayout.XY) {\n        this.consume_();\n      }\n    }\n    return layout;\n  }\n\n  /**\n   * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n   * @private\n   */\n  parseGeometryCollectionText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const geometries = [];\n      do {\n        geometries.push(this.parseGeometry_());\n      } while (this.match(TokenType.COMMA));\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return geometries;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {Array<number>} All values in a point.\n   * @private\n   */\n  parsePointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePoint_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return null;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a linestring.\n   * @private\n   */\n  parseLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePointList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n   * @private\n   */\n  parsePolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a multipoint.\n   * @private\n   */\n  parseMultiPointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      let coordinates;\n      if (this.token_.type == TokenType.LEFT_PAREN) {\n        coordinates = this.parsePointTextList_();\n      } else {\n        coordinates = this.parsePointList_();\n      }\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} All linestring points\n   *                                          in a multilinestring.\n   * @private\n   */\n  parseMultiLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n   * @private\n   */\n  parseMultiPolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePolygonTextList_();\n      if (this.match(TokenType.RIGHT_PAREN)) {\n        return coordinates;\n      }\n    } else if (this.isEmptyGeometry_()) {\n      return [];\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<number>} A point.\n   * @private\n   */\n  parsePoint_() {\n    const coordinates = [];\n    const dimensions = this.layout_.length;\n    for (let i = 0; i < dimensions; ++i) {\n      const token = this.token_;\n      if (this.match(TokenType.NUMBER)) {\n        coordinates.push(/** @type {number} */ (token.value));\n      } else {\n        break;\n      }\n    }\n    if (coordinates.length == dimensions) {\n      return coordinates;\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointList_() {\n    const coordinates = [this.parsePoint_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePoint_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointTextList_() {\n    const coordinates = [this.parsePointText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePointText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} An array of points.\n   * @private\n   */\n  parseLineStringTextList_() {\n    const coordinates = [this.parseLineStringText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parseLineStringText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n   * @private\n   */\n  parsePolygonTextList_() {\n    const coordinates = [this.parsePolygonText_()];\n    while (this.match(TokenType.COMMA)) {\n      coordinates.push(this.parsePolygonText_());\n    }\n    return coordinates;\n  }\n\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n  isEmptyGeometry_() {\n    const isEmpty =\n      this.isTokenType(TokenType.TEXT) && this.token_.value == EMPTY;\n    if (isEmpty) {\n      this.consume_();\n    }\n    return isEmpty;\n  }\n\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n  formatErrorMessage_() {\n    return (\n      'Unexpected `' +\n      this.token_.value +\n      '` at position ' +\n      this.token_.position +\n      ' in `' +\n      this.lexer_.wkt +\n      '`'\n    );\n  }\n\n  /**\n   * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n   * @private\n   */\n  parseGeometry_() {\n    const token = this.token_;\n    if (this.match(TokenType.TEXT)) {\n      const geomType = token.value;\n      this.layout_ = this.parseGeometryLayout_();\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        const geometries = this.parseGeometryCollectionText_();\n        return new GeometryCollection(geometries);\n      } else {\n        const ctor = GeometryConstructor[geomType];\n        if (!ctor) {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n\n        let coordinates;\n        switch (geomType) {\n          case 'POINT': {\n            coordinates = this.parsePointText_();\n            break;\n          }\n          case 'LINESTRING': {\n            coordinates = this.parseLineStringText_();\n            break;\n          }\n          case 'POLYGON': {\n            coordinates = this.parsePolygonText_();\n            break;\n          }\n          case 'MULTIPOINT': {\n            coordinates = this.parseMultiPointText_();\n            break;\n          }\n          case 'MULTILINESTRING': {\n            coordinates = this.parseMultiLineStringText_();\n            break;\n          }\n          case 'MULTIPOLYGON': {\n            coordinates = this.parseMultiPolygonText_();\n            break;\n          }\n          default: {\n            throw new Error('Invalid geometry type: ' + geomType);\n          }\n        }\n\n        if (!coordinates) {\n          if (ctor === GeometryConstructor['POINT']) {\n            coordinates = [NaN, NaN];\n          } else {\n            coordinates = [];\n          }\n        }\n        return new ctor(coordinates, this.layout_);\n      }\n    }\n    throw new Error(this.formatErrorMessage_());\n  }\n}\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nclass WKT extends TextFeature {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ =\n      options.splitCollection !== undefined ? options.splitCollection : false;\n  }\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default|undefined}\n   *     The geometry created.\n   * @private\n   */\n  parse_(wkt) {\n    const lexer = new Lexer(wkt);\n    const parser = new Parser(lexer);\n    return parser.parse();\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    const geom = this.readGeometryFromText(text, opt_options);\n    if (geom) {\n      const feature = new Feature();\n      feature.setGeometry(geom);\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    let geometries = [];\n    const geometry = this.readGeometryFromText(text, opt_options);\n    if (\n      this.splitCollection_ &&\n      geometry.getType() == GeometryType.GEOMETRY_COLLECTION\n    ) {\n      geometries = /** @type {GeometryCollection} */ (geometry).getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    const features = [];\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    const geometry = this.parse_(text);\n    if (geometry) {\n      return transformGeometryWithOptions(geometry, false, opt_options);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    }\n    return '';\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], opt_options);\n    }\n    const geometries = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    const collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, opt_options);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    return encode(transformGeometryWithOptions(geometry, true, opt_options));\n  }\n}\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = [];\n  const components = geom.getPoints();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = [];\n  const geoms = geom.getGeometries();\n  for (let i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  const array = [];\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = [];\n  const components = geom.getLineStrings();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = [];\n  const rings = geom.getLinearRings();\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = [];\n  const components = geom.getPolygons();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  const layout = geom.getLayout();\n  let dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry,\n};\n\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  let type = geom.getType();\n  const geometryEncoder = GeometryEncoder[type];\n  const enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (typeof (/** @type {?} */ (geom).getFlatCoordinates) === 'function') {\n    const dimInfo = encodeGeometryLayout(\n      /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom)\n    );\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\nexport default WKT;\n","import style from 'bundle-text:./component-style.css'\nimport WKT from 'ol/format/WKT'\n\nconst LOCATIE_SERVER_URL = 'https://geodata.nationaalgeoregister.nl/locatieserver/v3'\n\nclass LocatieServerControl extends HTMLElement {\n  constructor () {\n    super()\n    const _style = document.createElement('style')\n    const _template = document.createElement('template')\n    this.query = ''\n    _style.innerHTML = `\n        ${style}\n        #locationServerControl{\n            display: flex;\n            position: absolute;\n            bottom: 0.5em;\n            right: 0.5em;\n        }\n        @media only screen and (max-width: 1024px) {\n          #locationServerControl{\n            bottom: 3em;\n            left: 0.5em;\n          }\n        }\n      `\n    _template.innerHTML = `\n        <div id=\"locationServerControl\" class=\"parentControl\">\n            <input autoComplete=\"off\" id=\"lsInput\" class=\"control\" type=\"text\" placeholder=\"zoek in locatieserver\" title=\"Zoek in PDOK Locatieserver\" list=\"locatie-auto-complete\">\n            <datalist id=\"locatie-auto-complete\"></datalist>\n        </div>\n    `\n\n    this.shadow = this.attachShadow({ mode: 'open' })\n    this.shadow.appendChild(_style)\n    this.shadow.appendChild(_template.content.cloneNode(true))\n\n    this.shadow.getElementById('lsInput').addEventListener('input', (event) => {\n      console.log(event.inputType)\n      if (event.inputType === 'insertReplacementText' || event.inputType === undefined) {\n        const options = this.shadow.getElementById('locatie-auto-complete').querySelectorAll('option')\n        let id = ''\n        for (let option of options) {\n          if (option.value === event.target.value) {\n            id = option.id\n          }\n        }\n        fetch(`${LOCATIE_SERVER_URL}/lookup?id=${id}&fl=id,geometrie_ll`)\n          .then((response) => {\n            return response.json()\n          })\n          .then((data) => {\n            const wktLoc = data.response.docs[0].geometrie_ll\n            const format = new WKT()\n            const feature = format.readFeature(wktLoc, {\n              dataProjection: 'EPSG:4326',\n              featureProjection: 'EPSG:3857'\n            })\n            const ext = feature.getGeometry().getExtent()\n            this.dispatchEvent(new CustomEvent('location-selected', { bubbles: true, composed: true, detail: { extent: ext } }))\n            this.shadow.getElementById('locatie-auto-complete').innerHTML = ''\n            this.shadow.getElementById('lsInput').blur()\n          })\n      }\n    })\n\n    this.shadow.getElementById('lsInput').addEventListener('keyup', (e) => {\n      if (this.query === e.target.value) {\n        return\n      }\n      this.query = e.target.value\n      fetch(`${LOCATIE_SERVER_URL}/suggest?q=${this.query}`)\n        .then((response) => {\n          return response.json()\n        })\n        .then((data) => {\n          if (data.response.docs.length > 0) {\n            let options = data.response.docs.map(x => `<option value=\"${x.weergavenaam}\" id=\"${x.id}\">`)\n            let optionsHtml = options.join('')\n            this.shadow.getElementById('locatie-auto-complete').innerHTML = optionsHtml\n          }\n        })\n    })\n  }\n  connectedCallback () {\n    this.shadow.addEventListener('keydown', (event) => {\n      event.stopPropagation()\n    })\n  }\n}\n\nexport default LocatieServerControl\n","module.exports = \"618cf32320b39ba6\";","import 'ol/ol.css'\nimport { Map, View } from 'ol'\nimport WMTSSource from 'ol/source/WMTS'\nimport TileLayer from 'ol/layer/Tile.js'\nimport WMTSTileGrid from 'ol/tilegrid/WMTS.js'\nimport { get as getProjection, fromLonLat } from 'ol/proj'\nimport { getTopLeft, getWidth } from 'ol/extent.js'\nimport { Control } from 'ol/control'\nimport VectorLayer from 'ol/layer/Vector'\nimport { Vector as VectorSource } from 'ol/source'\nimport LocationServerControl from './locatie-server-control'\n\nconst projection = getProjection('EPSG:3857')\nconst projectionExtent = projection.getExtent()\nconst size = getWidth(projectionExtent) / 256\nconst resolutions = new Array(20)\nconst matrixIds = new Array(20)\n\nfor (var z = 0; z < 20; ++z) {\n  // generate resolutions and matrixIds arrays for this WMTS\n  resolutions[z] = size / Math.pow(2, z)\n  matrixIds[z] = z\n}\n\nconst baseMapLayer = new TileLayer({\n  extent: projectionExtent,\n  source: new WMTSSource({\n    url: 'https://service.pdok.nl/brt/achtergrondkaart/wmts/v2_0',\n    layer: 'grijs',\n    matrixSet: 'EPSG:3857',\n    crossOrigin: 'Anonymous',\n    format: 'image/png',\n    attributions: 'BRT achtergrondkaart: <a href=\"http://www.kadaster.nl\">Kadaster</a>',\n    tileGrid: new WMTSTileGrid({\n      origin: getTopLeft(projectionExtent),\n      resolutions: resolutions,\n      matrixIds: matrixIds\n    }),\n    style: 'default'\n  })\n})\n\nconst vectorSource = new VectorSource()\n\nconst vectorLayer = new VectorLayer({\n  source: vectorSource,\n  declutter: true\n})\n\nconst map = new Map({\n  layers: [\n    baseMapLayer,\n    vectorLayer\n  ],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([5.43, 52.18]),\n    // change zoomlevel, due to the scale dependent layer in WMS service\n    zoom: 8\n  })\n})\n\nfunction locationSelectedHandler (event) {\n  // let extentRd = transformExtent(event.detail.extent, 'EPSG:3857', rdProjection)\n  map.getView().fit(event.detail.extent, { maxZoom: 18 })\n}\n\nfunction addLsInput () {\n  let myControl = new Control({ element: lsCOntrol })\n  map.addControl(myControl)\n  lsCOntrol.addEventListener('location-selected', locationSelectedHandler, false)\n}\n\ncustomElements.define('locatieserver-control', LocationServerControl)\nconst lsCOntrol = document.createElement('locatieserver-control')\n\naddLsInput()\n"],"names":["$5b2b3cdd5d136d36$export$357eb1b4f03c1402","$5b2b3cdd5d136d36$var$mapping","pairs","keys","Object","i","length","parcelRequire","register","JSON","parse","$1386f4ed5b3d2a4b$export$9099ad97b570f7c","Disposable","this","disposed","prototype","dispose","disposeInternal","$16831c8b3cdccec7$export$8eda8fbd1364c8a1","a","b","$16831c8b3cdccec7$export$45934da9231b7323","arr","target","direction","n","$16831c8b3cdccec7$export$1f4f991ce94838ce","begin","end","tmp","$16831c8b3cdccec7$export$46e35401bc090c62","data","extension","Array","isArray","$16831c8b3cdccec7$export$7ad150f61db3b289","func","value","$16831c8b3cdccec7$export$bcc761834e33d339","arr1","arr2","len1","$16831c8b3cdccec7$export$4d0d05f1b8a16b84","index","every","el","idx","$20af65f7a38205f7$export$ad8dd69aa6772cd0","$20af65f7a38205f7$export$5c50afa32081505e","$20af65f7a38205f7$export$3850addf0fb4e6a7","$b1e57fdd8dde574a$export$18e1b4ff5b3c2297","Error","$b1e57fdd8dde574a$var$uidCounter_","$b1e57fdd8dde574a$export$604e9536b9e0488a","obj","ol_uid","String","$9a566a9848e727af$export$9099ad97b570f7c","_super","AssertionError","code","_this","message","split","call","name","$9a566a9848e727af$var$__extends","$20a6d17585e78d64$export$b8795f4f643ce74f","assertion","errorCode","$9a566a9848e727af$exports","default","$ffc5f3d579aca584$export$77f8d2fc923b14e3","transform","c","d","e","f","$ffc5f3d579aca584$export$6af9bbf310c9e4bf","coordinate","x","y","$ffc5f3d579aca584$export$452ae967caf14641","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$ffc5f3d579aca584$export$6e6aac0f60e83c70","source","mat","det","$ffc5f3d579aca584$export$47bee913e0e80eb4","join","$ecbf3a0b36c7b4ac$export$9099ad97b570f7c","$92fe712ceb0b4cf4$export$9099ad97b570f7c","$d333a56ccd100cfd$export$a7ecbd362d65c1fe","coordinates","extent","$d333a56ccd100cfd$export$dbb3d72606cdc11","ii","$d333a56ccd100cfd$export$2852acc8f8b94686","$d333a56ccd100cfd$export$14e1765886db335a","opt_extent","$d333a56ccd100cfd$export$d6a0542127b96c83","slice","$d333a56ccd100cfd$export$c7d6a927f416dd39","dx","dy","$d333a56ccd100cfd$export$c422a9fcb5f1ee5c","$d333a56ccd100cfd$export$cc70e7e516e4370f","$d333a56ccd100cfd$export$4f55e2d709659e7b","extent1","extent2","$d333a56ccd100cfd$export$9bdde4fe01cd4b6b","minX","minY","maxX","maxY","relationship","Infinity","$d333a56ccd100cfd$export$ea8082d0226d35a5","$d333a56ccd100cfd$export$80741250c74fd4fa","$d333a56ccd100cfd$export$355d8dd7ec88232f","flatCoordinates","offset","stride","$d333a56ccd100cfd$export$4b116deb3079b147","$d333a56ccd100cfd$export$bcc761834e33d339","$d333a56ccd100cfd$export$46e35401bc090c62","$d333a56ccd100cfd$export$bfc2e43ae5c3c00c","$d333a56ccd100cfd$export$8696fee511ea7c7a","min","max","$d333a56ccd100cfd$export$c26f7b9c5adc34b4","callback","val","$d333a56ccd100cfd$export$3932426cd8118930","$d333a56ccd100cfd$export$4e2fc25ce97f3583","$d333a56ccd100cfd$export$35aedeaeee8be6cd","$d333a56ccd100cfd$export$5100f0815ea32995","$d333a56ccd100cfd$export$ab4e37d31d15614d","area","$d333a56ccd100cfd$export$988399e568471db1","$d333a56ccd100cfd$export$3dc3550566517965","$d333a56ccd100cfd$export$e178c8044d3d0a05","$d333a56ccd100cfd$export$339e303bf205caae","$d333a56ccd100cfd$export$38622892ed79bdc7","corner","$d333a56ccd100cfd$export$3212225221d5bc14","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$d333a56ccd100cfd$export$c491031eb9adcc3a","intersection","$d333a56ccd100cfd$export$c3bd2c3b798b0350","$d333a56ccd100cfd$export$76e02248c0889c3e","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$d333a56ccd100cfd$var$_boundingExtentXYs","$11d79372009851c4$export$4b8705656de00c72","$11d79372009851c4$export$4a376e0f60d976ee","cosh","exp","$11d79372009851c4$export$e08236045caaa3e1","log2","log","LOG2E","$11d79372009851c4$export$fd0b1e5ac4df516c","t","$11d79372009851c4$export$8b6706701cd75ea9","$11d79372009851c4$export$11468133b1231643","angleInRadians","PI","$11d79372009851c4$export$4fc80c88d72f096","angleInDegrees","$11d79372009851c4$export$3334706ffb3dccb1","r","$11d79372009851c4$export$45ca8e7f50ccf2e0","$24f1b8341536f1fa$var$HEX_COLOR_RE_","$24f1b8341536f1fa$var$NAMED_COLOR_RE_","$24f1b8341536f1fa$export$9fe004474d6f7f65","color","$24f1b8341536f1fa$export$47bee913e0e80eb4","$24f1b8341536f1fa$var$fromNamed","document","createElement","style","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$24f1b8341536f1fa$export$21528ce64591bf2","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","indexOf","$24f1b8341536f1fa$export$2e33abec8aecd572","map","Number","$24f1b8341536f1fa$var$fromStringInternal_","$24f1b8341536f1fa$export$7266a24c0caa2a8","undefined","$6184461a452b3df9$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","get","src","crossOrigin","$6184461a452b3df9$var$getKey","set","setSize","maxCacheSize","$6184461a452b3df9$export$601b9e2be44c7cb2","$3d78a3a2062be6dd$export$9099ad97b570f7c","BaseEvent","type","propagationStopped","preventDefault","stopPropagation","$727bf6738fdde94d$export$9099ad97b570f7c","$1ed278ebd065aaf6$export$f3c88f5a058bec38","assign","var_sources","TypeError","output","arguments","$1ed278ebd065aaf6$export$97fff7491bd246bd","object","property","$1ed278ebd065aaf6$export$207c30846165e93a","values","$1ed278ebd065aaf6$export$988399e568471db1","$c8df8fba8e9f5c07$var$Target","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$c8df8fba8e9f5c07$var$__extends","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","opt_type","splice","$c8df8fba8e9f5c07$export$9099ad97b570f7c","$00d29b6ace6e67fa$export$9099ad97b570f7c","$46e86cc58f3e2235$export$ff95bcce2965a200","opt_this","opt_once","bind","originalListener_1","eventsKey","$46e86cc58f3e2235$export$d2df825b2d8bc2ba","$46e86cc58f3e2235$export$6dee5fd4fdf600ff","$11407e360abf7d44$var$Observable","Observable","revision_","$11407e360abf7d44$var$__extends","changed","getRevision","on","len","once","ol_key","un","$11407e360abf7d44$export$21f63b82add5980c","$c8df8fba8e9f5c07$exports","$11407e360abf7d44$export$9099ad97b570f7c","$3e906ccbcd24be16$export$b902cfd711fa7f06","ObjectEvent","oldValue","$3e906ccbcd24be16$var$__extends","$3e906ccbcd24be16$var$BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","$3e906ccbcd24be16$export$b958104f5d8e9527","opt_silent","applyProperties","unset","$11407e360abf7d44$exports","$3e906ccbcd24be16$var$changeEventTypeCache","$3e906ccbcd24be16$export$9099ad97b570f7c","$6755f2167754dc52$export$9099ad97b570f7c","$7436508a8164a9fe$export$9099ad97b570f7c","BaseLayer","options","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$7436508a8164a9fe$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$3e906ccbcd24be16$exports","$b9d5daa9625d320c$export$9099ad97b570f7c","$021387f4bbb0e320$export$9099ad97b570f7c","$d78a3f8d945e8ec2$export$16970faadcd3f29b","layerState","viewState","zoom","$d78a3f8d945e8ec2$export$9099ad97b570f7c","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","getChangeEventType","handleSourcePropertyChange_","setSource","$d78a3f8d945e8ec2$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$7436508a8164a9fe$exports","$31a6ec27eb422148$export$bcc761834e33d339","coordinate1","coordinate2","equals","$31a6ec27eb422148$export$d40e2456b1281660","cosAngle","sinAngle","$31a6ec27eb422148$export$5a0d9577a24f3c5b","projection","canWrapX","worldWidth","worldsAway","$31a6ec27eb422148$export$c8ebaff90a21375a","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$ba9cc254c2e615b0$var$MapRenderer","MapRenderer","map_","$ba9cc254c2e615b0$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","j","$d78a3f8d945e8ec2$exports","inView","getWrapX","callback_1","order","forEach","m","i1","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ba9cc254c2e615b0$var$expireIconCache","$ba9cc254c2e615b0$export$9099ad97b570f7c","$7246c595371691cc$export$9099ad97b570f7c","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$7246c595371691cc$var$__extends","$35f3eb34fb00a437$var$fontRegEx","RegExp","$35f3eb34fb00a437$var$fontRegExMatchIndex","$35f3eb34fb00a437$export$b705256ab57c20ca","fontSpec","match","lineHeight","weight","variant","families","family","$f8271a0713c10a69$var$ua","navigator","userAgent","toLowerCase","$f8271a0713c10a69$export$543c908bf17a24fb","$f8271a0713c10a69$export$bccc8605349feea7","$f8271a0713c10a69$export$f16ffc71033a7aaa","$f8271a0713c10a69$export$1940d5d2b4cf824d","devicePixelRatio","$f8271a0713c10a69$export$b011c43406458fa9","WorkerGlobalScope","OffscreenCanvas","self","$f8271a0713c10a69$export$9544418e5c6fedfe","Image","decode","$f8271a0713c10a69$export$700ce540937d8c69","passive","defineProperty","window","error","$158e6a8754c20e7c$export$fe55455cced7aebb","opt_width","opt_height","opt_canvasPool","canvas","shift","getContext","$158e6a8754c20e7c$export$495cfc7e7a2968e6","newNode","oldNode","parent","parentNode","replaceChild","$158e6a8754c20e7c$export$47503d53c08beb29","node","$33ba1dda25080cc3$export$6ad0413f8fea3c71","$33ba1dda25080cc3$export$70c5a077e5d6beb9","$33ba1dda25080cc3$export$907cf5cff4a8acb1","console","warn","$33ba1dda25080cc3$var$measureFont","div","$33ba1dda25080cc3$var$measureContext","$33ba1dda25080cc3$export$384c0f09c94ed6cc","$33ba1dda25080cc3$export$6491effd8671e9f6","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$33ba1dda25080cc3$export$85ae5018a2fb98b4","check","done","fonts","font","clearInterval","setInterval","$33ba1dda25080cc3$export$a2bf16790cd8f004","metrics","$33ba1dda25080cc3$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","margin","padding","position","left","offsetHeight","measureText","$33ba1dda25080cc3$export$4b2ca35321179b27","$33ba1dda25080cc3$export$c02f953f8e44cc0a","offsetX","offsetY","translate","rotate","$33ba1dda25080cc3$export$3004e0c7927eb2d1","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","label","$33ba1dda25080cc3$var$executeLabelInstructions","drawImage","restore","$33ba1dda25080cc3$var$createTransformStringCanvas","$2d3983d3c236cd0f$var$CompositeMapRenderer","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$35f3eb34fb00a437$export$2fbf9d496fb0d5a8","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$2d3983d3c236cd0f$var$__extends","event_1","$7246c595371691cc$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$158e6a8754c20e7c$export$439ebc2b0f0ec9f4","display","getDataAtPixel","$ba9cc254c2e615b0$exports","$2d3983d3c236cd0f$export$9099ad97b570f7c","$8c239c70ba402b1b$export$9099ad97b570f7c","$12698a83d5d6619d$var$Property","$12698a83d5d6619d$export$cf29312ab18b402e","CollectionEvent","opt_element","opt_index","$12698a83d5d6619d$var$__extends","$12698a83d5d6619d$var$Collection","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$12698a83d5d6619d$export$9099ad97b570f7c","$78bdbac1eaad4f08$var$Property","$78bdbac1eaad4f08$var$LayerGroup","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$12698a83d5d6619d$exports","setLayers","$78bdbac1eaad4f08$var$__extends","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$78bdbac1eaad4f08$export$9099ad97b570f7c","$5f50aaa354ee43e8$export$9099ad97b570f7c","MapEvent","$5f50aaa354ee43e8$var$__extends","$5cb33e338f86483d$var$MapBrowserEvent","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$5cb33e338f86483d$var$__extends","getEventPixel","getCoordinateFromPixel","$5f50aaa354ee43e8$exports","$5cb33e338f86483d$export$9099ad97b570f7c","$1701e629f00eed9c$export$9099ad97b570f7c","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$eef913c1b3abba70$export$9099ad97b570f7c","$5ce77a9367e71852$export$9099ad97b570f7c","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$5ce77a9367e71852$var$__extends","emulateClick_","pointerEvent","newEvent","$5cb33e338f86483d$exports","clearTimeout","setTimeout","newEvent1","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","abs","clientX","clientY","$75da2f64972311f8$export$9099ad97b570f7c","$aa15c1da5ede11e4$export$9099ad97b570f7c","$a5b5f21c6babad23$var$PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$a5b5f21c6babad23$export$9099ad97b570f7c","$7c9022c2746a8240$export$9099ad97b570f7c","$79e77b05f0af3af4$export$9099ad97b570f7c","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$79e77b05f0af3af4$var$__extends","added","getTilesLoading","tile","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$79e77b05f0af3af4$export$f7de9366327711a7","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$4d7a66b176a5dddb$export$9099ad97b570f7c","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","$ed930b4d99744cb5$var$Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$ed930b4d99744cb5$export$af68584dedf5e52c","$ed930b4d99744cb5$export$9099ad97b570f7c","$9d93d71f67d1f597$export$9099ad97b570f7c","$e90c70f3094ec23d$export$9099ad97b570f7c","$b3eb9bab7e855649$export$9099ad97b570f7c","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","$a2e3ad3c6452af0b$export$bb1f4f75177e5528","$a2e3ad3c6452af0b$export$6fd015d56b8406c9","$a2e3ad3c6452af0b$export$64afaa717a0c4932","$a2e3ad3c6452af0b$export$2126dea64bc40b7b","tan","$a2e3ad3c6452af0b$var$EPSG3857Projection","EPSG3857Projection","point","$a2e3ad3c6452af0b$var$__extends","$a2e3ad3c6452af0b$export$850c9b527a5298aa","$a2e3ad3c6452af0b$export$128bedc7a8a0ae2c","input","opt_output","opt_dimension","dimension","$a2e3ad3c6452af0b$export$f361696640082386","atan","$dbcd2854ae42c095$export$6fd015d56b8406c9","$dbcd2854ae42c095$export$af68584dedf5e52c","$dbcd2854ae42c095$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$dbcd2854ae42c095$var$__extends","$dbcd2854ae42c095$export$850c9b527a5298aa","$78eb3a0f9f69d51f$var$cache","$0e52faab48d1c258$var$transforms","$0e52faab48d1c258$export$568ed88074851180","destination","sourceCode","destinationCode","$8adf1144ec7585ad$export$aec7b6756585c081","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$8adf1144ec7585ad$export$80a87d59b6e09730","distance","bearing","lon1","dByR","lat","asin","$257c627c1e280f22$export$3fbbaef54e2e9d28","$257c627c1e280f22$export$678028d364072132","$257c627c1e280f22$export$6308908a0016f099","$78eb3a0f9f69d51f$export$568ed88074851180","$257c627c1e280f22$export$7eb84799c931fe91","projectionLike","replace","$257c627c1e280f22$export$75cdc5d556e3d9b2","opt_units","pointResolution","getter","toEPSG4326_1","$257c627c1e280f22$export$747af4f49bde2f53","vertices","$257c627c1e280f22$export$a42db349809b0c24","projections","$257c627c1e280f22$export$fd4cd3535c7ea97f","$257c627c1e280f22$export$f704437a72056fb8","defaultCode","$257c627c1e280f22$export$c7a9310bdeddab53","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$0e52faab48d1c258$export$7eb84799c931fe91","$257c627c1e280f22$export$9336879ef6599bf5","$257c627c1e280f22$export$4b169b49e1a4823b","$257c627c1e280f22$export$f2a2f51d8aa8d6b0","projections2","forwardTransform","inverseTransform","$257c627c1e280f22$var$userProjection","$257c627c1e280f22$export$352fd07bdd93dc1e","$257c627c1e280f22$export$4a182a4d53d7595c","$257c627c1e280f22$export$b5d00774755783fc","destProjection","$257c627c1e280f22$export$a7d473ff80a6a3b","$257c627c1e280f22$export$f87215506b474b9e","$7a79f648aa728795$export$33d0cf822839cfa8","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$7a79f648aa728795$export$eaafe0fae18e32b1","$0e1a1b60122676ba$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$0e1a1b60122676ba$var$getSmoothClampedResolution","$0e1a1b60122676ba$export$56cba9b4a749f219","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$bfacba8d4304d68f$export$e97ec87d2336bd4e","$bfacba8d4304d68f$export$eaafe0fae18e32b1","$69c984769656a840$export$9fbc3b1d6b2da9ec","pow","$69c984769656a840$export$673b9849e2bc032c","$69c984769656a840$export$1b5c1277e30d397d","$69c984769656a840$export$5523e35ab8ae283a","$a2e3ad3c6452af0b$exports","PROJECTIONS","$dbcd2854ae42c095$exports","fromEPSG4326","toEPSG4326","$4d6d0df5f6d473fe$export$9099ad97b570f7c","$38fbdbcddbfb2114$export$92106241c01aa541","opt_dest","dest","$38fbdbcddbfb2114$export$d40e2456b1281660","anchor","anchorX","anchorY","k","$2c40e41d9046f704$var$tmpTransform","$2c40e41d9046f704$var$Geometry","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$2c40e41d9046f704$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$d333a56ccd100cfd$export$d1e01ccfd06bf8ee","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$2c40e41d9046f704$export$9099ad97b570f7c","$fbc4cbc2dbecf2fd$var$SimpleGeometry","SimpleGeometry","layout","$fbc4cbc2dbecf2fd$var$__extends","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$fbc4cbc2dbecf2fd$export$2a65008b73824080","setCoordinates","opt_layout","setLayout","nesting","$fbc4cbc2dbecf2fd$var$getLayoutForStride","$38fbdbcddbfb2114$export$8f869025bba9609b","$38fbdbcddbfb2114$export$41b0d7466cde8385","$2c40e41d9046f704$exports","$fbc4cbc2dbecf2fd$export$36912b83e488cd77","simpleGeometry","$fbc4cbc2dbecf2fd$export$9099ad97b570f7c","$1eeaf5ba3166ef8e$var$assignClosest","offset1","offset2","$1eeaf5ba3166ef8e$export$acf7548d1f0e8581","squaredDelta","$1eeaf5ba3166ef8e$export$ba38095f6bb45df2","ends","$1eeaf5ba3166ef8e$export$cc4caddc4c9b8b6f","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$1eeaf5ba3166ef8e$export$3dd3914e22f9012e","$341fcb0cdbf81912$export$e175f505890ac90f","$341fcb0cdbf81912$export$ab1a51db55485752","coordinatess","opt_ends","jj","$54c380e0fb260ccc$export$a5f6a1911260c251","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$54c380e0fb260ccc$export$ade7859c9eb393ec","simplifiedEnds","$54c380e0fb260ccc$export$383ea8a1f2974dfb","$54c380e0fb260ccc$export$e29de4fdb2175738","$54c380e0fb260ccc$export$1df19a1eb5514c2f","$ebfee1857bdd365b$export$92f32d891164b0ac","opt_coordinates","$ebfee1857bdd365b$export$d82a8a3167f968d","opt_coordinatess","$ebfee1857bdd365b$export$db289937da1f5213","endss","opt_coordinatesss","coordinatesss","$d21f3a0ce2fde0f1$export$9bf2059fd656d5e9","twiceArea","$d21f3a0ce2fde0f1$export$99cb92d00fd73c87","$2eba2434999e946d$export$9099ad97b570f7c","LinearRing","maxDelta_","maxDeltaRevision_","$2eba2434999e946d$var$__extends","getArea","$fbc4cbc2dbecf2fd$exports","$d78f061ab8e6937f$var$Point","Point","$d78f061ab8e6937f$var$__extends","$341fcb0cdbf81912$export$a53e62528b652807","$d78f061ab8e6937f$export$9099ad97b570f7c","$3c65f17c9f70f766$export$f7b55b637f92fd7","$3c65f17c9f70f766$export$e2ed757909b25f63","wn","$3c65f17c9f70f766$export$51e46a3625992b91","$7db2c52ec52bd7cf$export$45b4e4437984917d","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$ff23e8a6e0292000$export$40f3d9558cf6e846","ret","point1","point2","$2b86337dc0cae6ce$export$26f047a5bfac4b1a","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$d333a56ccd100cfd$export$525a75abb91115e3","$2b86337dc0cae6ce$export$717c2c7c46a5bf3d","$2b86337dc0cae6ce$export$f14bd9270666b480","$4e5c47cc66c1cbb9$export$c77fe031a1447f2e","$846e7d12e139eeec$export$add61ad31d0a68b4","edge","$846e7d12e139eeec$export$586adaf930d9fdb6","opt_right","right","isClockwise","$846e7d12e139eeec$export$325e57738fd8b321","$846e7d12e139eeec$export$4efd43868de93336","$8577ba96696c7470$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$8577ba96696c7470$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$d78f061ab8e6937f$exports","getLinearRingCount","getLinearRing","$2eba2434999e946d$exports","getLinearRings","linearRings","$8577ba96696c7470$export$9099ad97b570f7c","$8577ba96696c7470$export$bbb8e839e9c5bda9","opt_n","opt_sphereRadius","$8577ba96696c7470$export$b50d271c6e9656cd","$8577ba96696c7470$export$186fa890234c5366","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$8577ba96696c7470$export$5d1798f0e1df079","getRadius","startAngle","$013cf7a9f19a8f6c$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","$013cf7a9f19a8f6c$var$__extends","resolutionConstraintInfo","$013cf7a9f19a8f6c$export$8b6914b45b83f21f","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","minZoom_","centerConstraint","$013cf7a9f19a8f6c$export$535fae5a159fbda4","resolutionConstraint","constraint","rotationConstraint","$013cf7a9f19a8f6c$export$9665b691bc2d5ca0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","$013cf7a9f19a8f6c$var$animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$013cf7a9f19a8f6c$export$5d87c27d7d9f380e","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","$013cf7a9f19a8f6c$var$calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","$8577ba96696c7470$exports","fromExtent","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$0e1a1b60122676ba$export$d1041fa75d07f305","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$0e1a1b60122676ba$export$7690ad4e930f454b","theta","opt_tolerance","enableRotation","constrainRotation","$013cf7a9f19a8f6c$export$9099ad97b570f7c","$1584674e6c442cb4$export$48d31d2725e4d98b","$f45eee633772e0e7$var$PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$78bdbac1eaad4f08$exports","view","$013cf7a9f19a8f6c$exports","$f45eee633772e0e7$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$79e77b05f0af3af4$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","toString","$f45eee633772e0e7$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","elementFromPoint","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","targetElement","$5ce77a9367e71852$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","$1584674e6c442cb4$export$c563c2b7121f8771","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","offsetWidth","parseFloat","$f45eee633772e0e7$export$9099ad97b570f7c","$52e6a1ab15a4b16d$var$Control","Control","target_","listenerKeys","$52e6a1ab15a4b16d$var$__extends","mapEvent","$52e6a1ab15a4b16d$export$9099ad97b570f7c","$d272f1a7f2d66954$var$Attribution","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$d272f1a7f2d66954$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$158e6a8754c20e7c$export$f0994cfd84ab1152","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$52e6a1ab15a4b16d$exports","$d272f1a7f2d66954$export$9099ad97b570f7c","$df8a7089a421bf2f$export$9099ad97b570f7c","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$df8a7089a421bf2f$var$__extends","resetNorth_","$1022d6743ffba880$export$9099ad97b570f7c","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$1022d6743ffba880$var$__extends","zoomByDelta_","currentZoom","newZoom","$6fe2ef1e7a750c69$export$9099ad97b570f7c","$f26f33305875ffd9$export$63568b31cb17dd4d","$f26f33305875ffd9$export$d2c07614bfd6a817","$f26f33305875ffd9$export$9099ad97b570f7c","Interaction","setActive","$f26f33305875ffd9$var$__extends","active","$247995ce03a38b1e$export$9099ad97b570f7c","DoubleClickZoom","delta_","$247995ce03a38b1e$var$__extends","stopEvent","shiftKey","$f26f33305875ffd9$exports","zoomByDelta","$15b70ec573750fa6$export$e61edea4dfe4ed9b","$15b70ec573750fa6$export$9099ad97b570f7c","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$15b70ec573750fa6$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$15b70ec573750fa6$var$isPointerDraggingEvent","$1dd9bb17917c1459$export$8dbdea330bbd6b3c","conditions","pass","$1dd9bb17917c1459$export$7576515282e06e7a","altKey","metaKey","ctrlKey","$1dd9bb17917c1459$export$584a07df7b145c47","hasAttribute","activeElement","$1dd9bb17917c1459$export$363947888fb85da6","$1dd9bb17917c1459$export$a8612972eacfc116","$1dd9bb17917c1459$export$9f5e19851eeaf2c1","$1dd9bb17917c1459$export$1734dfcac3c09b2f","$1dd9bb17917c1459$export$59c8376875f673f8","$1dd9bb17917c1459$export$5bbcce8021828272","tagName","$1dd9bb17917c1459$export$d31d3f3aa38542a8","pointerType","$1dd9bb17917c1459$export$45cd27c0322d6513","isPrimary","$f61551752c4f4f08$var$DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$f61551752c4f4f08$var$__extends","centroid","$15b70ec573750fa6$exports","update","getDistance","getAngle","centerpx","$f61551752c4f4f08$export$9099ad97b570f7c","$d813784fb0405083$export$9099ad97b570f7c","DragRotate","lastAngle_","$d813784fb0405083$var$__extends","$46289f3b330b6586$export$9099ad97b570f7c","RenderBox","geometry_","startPixel_","endPixel_","$46289f3b330b6586$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$a8d898a7bd6fd9e0$var$DragBoxEventType","$a8d898a7bd6fd9e0$export$4d9b552836937ca2","DragBoxEvent","$a8d898a7bd6fd9e0$var$__extends","$a8d898a7bd6fd9e0$export$9099ad97b570f7c","DragBox","box_","$46289f3b330b6586$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$6a3aca92466c0896$export$9099ad97b570f7c","DragZoom","out_","out","$6a3aca92466c0896$var$__extends","mapExtent","boxPixelExtent","$d333a56ccd100cfd$export$9f54817615211741","$a8d898a7bd6fd9e0$exports","$11a5f739eb17e24b$export$9099ad97b570f7c","$52d09675c125dcf1$export$9099ad97b570f7c","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$52d09675c125dcf1$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$1fae754d3ea6677a$export$9099ad97b570f7c","KeyboardZoom","$1fae754d3ea6677a$var$__extends","charCode","charCodeAt","$e0121ce5936cb4d8$export$9099ad97b570f7c","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$cd0092067e7ded9c$export$9658e13a40f6ce34","TRACKPAD","WHEEL","$cd0092067e7ded9c$export$9099ad97b570f7c","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$cd0092067e7ded9c$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$a80081c3438ffbf4$export$9099ad97b570f7c","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$a80081c3438ffbf4$var$__extends","rotationDelta","touch0","touch1","$e1a7c7fda3fcb5d0$export$9099ad97b570f7c","PinchZoom","lastDistance_","lastScaleDelta_","$e1a7c7fda3fcb5d0$var$__extends","scaleDelta","$b92278933294ec34$export$9099ad97b570f7c","Map1","$1022d6743ffba880$exports","zoomOptions","$df8a7089a421bf2f$exports","rotateOptions","attribution","$d272f1a7f2d66954$exports","attributionOptions","$3ba5c30aca7182c2$export$b403fbac94228e09","altShiftDragRotate","$d813784fb0405083$exports","doubleClickZoom","$247995ce03a38b1e$exports","zoomDelta","zoomDuration","dragPan","$f61551752c4f4f08$exports","pinchRotate","$a80081c3438ffbf4$exports","pinchZoom","$e1a7c7fda3fcb5d0$exports","keyboard","$52d09675c125dcf1$exports","$1fae754d3ea6677a$exports","mouseWheelZoom","$cd0092067e7ded9c$exports","shiftDragZoom","$6a3aca92466c0896$exports","$c930ad710d84b305$export$b403fbac94228e09","$b92278933294ec34$var$__extends","$2d3983d3c236cd0f$exports","$f45eee633772e0e7$exports","$42eaa0851eb221cf$export$9099ad97b570f7c","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","$42eaa0851eb221cf$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","$723ec55387d416d6$export$9099ad97b570f7c","ImageBase","$723ec55387d416d6$var$__extends","getImage","getPixelRatio","$cd8285e3e84f4d13$export$9099ad97b570f7c","$fced4221eaca0419$export$469eb8ba3f45955e","image","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$fced4221eaca0419$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$723ec55387d416d6$exports","$17444c5007a5df29$export$9099ad97b570f7c","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$17444c5007a5df29$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$fced4221eaca0419$exports","listenImage","$42eaa0851eb221cf$exports","$4e3d7af6ddc0a7bb$var$brokenDiagonalRendering_","$7885574070ba36b3$export$9099ad97b570f7c","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$1a48f53661f04756$export$5f986e3acaff8610","imageSmoothingEnabled","msImageSmoothingEnabled","$4e3d7af6ddc0a7bb$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","clip","$4e3d7af6ddc0a7bb$var$verifyBrokenDiagonalRendering","$4e3d7af6ddc0a7bb$export$fbbff54b3c32db8d","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$4e3d7af6ddc0a7bb$export$792a797b69be0d58","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$11d79372009851c4$export$27dc5719ceda6735","getImageData","$4e3d7af6ddc0a7bb$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$ad06dd403e0a8513$export$9099ad97b570f7c","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$4e3d7af6ddc0a7bb$export$ed73ddd0371d87e2","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$ad06dd403e0a8513$var$__extends","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","state1","unlistenSources_","$bf88e629b6ee6163$var$LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$bf88e629b6ee6163$export$9099ad97b570f7c","$153c3e950abfd740$export$ea8082d0226d35a5","opt_tileCoord","$153c3e950abfd740$export$1039fb0288fd71e3","$153c3e950abfd740$export$a0f0ccbe5bbc0789","$61823e7907e95ef6$export$9099ad97b570f7c","TileCache","$61823e7907e95ef6$var$__extends","expireCache","pruneExceptNewestZ","$153c3e950abfd740$export$5208a752d34424e5","$4bb75659bb3462f8$export$9099ad97b570f7c","$3fa87a5786fdcb68$var$adaptAttributions","attributionLike","$3fa87a5786fdcb68$export$9099ad97b570f7c","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","$3fa87a5786fdcb68$var$__extends","getContextOptions","refresh","setAttributions","$755de0abe16276c4$var$TileRange","TileRange","containsTileRange","tileRange","getHeight","getWidth","$755de0abe16276c4$export$ea8082d0226d35a5","$755de0abe16276c4$export$9099ad97b570f7c","$4957c1686d037101$var$tmpTileCoord","$4957c1686d037101$var$TileGrid","TileGrid","opt_strict","compare","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","$4957c1686d037101$export$9099ad97b570f7c","$1770d80474e42ee1$export$115502f69f929231","opt_maxZoom","opt_tileSize","opt_corner","$1770d80474e42ee1$var$resolutionsFromExtent","$1770d80474e42ee1$export$57c49ef1657592d4","$1770d80474e42ee1$export$9666e825b22d806d","$1770d80474e42ee1$export$6dfef52f91d4f582","opt_maxResolution","half","$5b2b9f9d853aaab8$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$61823e7907e95ef6$exports","tmpSize","tileOptions","zDirection","$5b2b9f9d853aaab8$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","$1770d80474e42ee1$export$5a0d9577a24f3c5b","$153c3e950abfd740$export$b46b80619528d4e5","updateCacheSize","tileCount","useTile","$3fa87a5786fdcb68$exports","$5b2b9f9d853aaab8$export$8434c8db61edbf9d","TileSourceEvent","$5b2b9f9d853aaab8$export$9099ad97b570f7c","$309456a17bc9d7d9$export$ee162149bf998c0f","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$309456a17bc9d7d9$export$c6a04e0c49b28953","tileUrlFunctions","$153c3e950abfd740$export$4639c7f2947f4458","$309456a17bc9d7d9$export$47abe479fba0e55d","url","urls","startCharCode","stopCharCode","fromCharCode","stop_1","$ed8b1ee91d3b1512$var$UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","$ed8b1ee91d3b1512$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","$5b2b9f9d853aaab8$exports","setTileLoadFunction","setTileUrlFunction","templates","$309456a17bc9d7d9$export$2d2faeb2e9d58b93","$ed8b1ee91d3b1512$export$9099ad97b570f7c","$a00efaa4b8159fae$var$TileImage","TileImage","$a00efaa4b8159fae$var$defaultTileLoadFunction","tileClass","$17444c5007a5df29$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$a00efaa4b8159fae$var$__extends","usedTileCache","getGutter","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","$ad06dd403e0a8513$exports","z1","pixelRatio1","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$ed8b1ee91d3b1512$exports","imageTile","$a00efaa4b8159fae$export$9099ad97b570f7c","$59af0e30920ae0da$export$9099ad97b570f7c","$6593ad344842fe04$export$8626442242d77803","uri","params","keyParams","encodeURIComponent","qs","$5c81279c416d079d$var$WMTSTileGrid","WMTSTileGrid","matrixIds_","matrixIds","$5c81279c416d079d$var$__extends","getMatrixId","getMatrixIds","$5c81279c416d079d$export$9099ad97b570f7c","$5c81279c416d079d$export$363b339ecb1a4a6a","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","$0254a37eddedec7f$var$WMTS","WMTS","requestEncoding","version_","version","format_","format","dimensions_","dimensions","layer_","matrixSet_","style_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","$0254a37eddedec7f$var$__extends","getDimensions","getFormat","getLayer","getMatrixSet","getRequestEncoding","getStyle","getVersion","updateDimensions","p","localContext_1","$a00efaa4b8159fae$exports","$0254a37eddedec7f$export$9099ad97b570f7c","$0254a37eddedec7f$export$d7772025db6228c3","wmtsCap","config","tileMatrixSets","supportedCRS","proj1","proj2","matrixSetObj","projConfig","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","$5c81279c416d079d$exports","createFromCapabilitiesMatrixSet","gets","encodings","$353a86b6785d23cf$export$9099ad97b570f7c","$289d8a06dd383ff7$export$9099ad97b570f7c","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$289d8a06dd383ff7$var$__extends","getPreload","getUseInterimTilesOnError","$0d7ccc2184bbb6ae$export$9099ad97b570f7c","LayerRenderer","boundHandleImageChange_","handleImageChange_","declutterExecutorGroup","$0d7ccc2184bbb6ae$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","renderIfReadyAndVisible","loadImage","imageState","$48340b1070105b4e$export$9099ad97b570f7c","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$48340b1070105b4e$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","err","Uint8Array","$0d7ccc2184bbb6ae$exports","$9056ddaf99896c0e$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$9056ddaf99896c0e$var$__extends","isDrawableTile","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","i_1","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alpha","alphaChanged","postRenderFunction","tileSource1","frameState1","opt_tileCallback","$48340b1070105b4e$exports","$9056ddaf99896c0e$export$9099ad97b570f7c","$e61f98c73384e953$export$9099ad97b570f7c","TileLayer","$e61f98c73384e953$var$__extends","$9056ddaf99896c0e$exports","$289d8a06dd383ff7$exports","$37ca435c53f13d4d$exports","t1","t2","r1","e1","a1","h1","o","u","_maxEntries","_minEntries","n1","leaf","m2","h2","o1","all","_all","search","toBBox","o2","collides","a2","insert","_build","_splitRoot","r2","_insert","i2","r3","a3","h3","o3","s1","l1","f1","_condense","compareMinX","compareMinY","toJSON","fromJSON","e2","f2","m1","_chooseSubtree","m3","c3","e3","a4","_split","_adjustParentBBoxes","_chooseSplitAxis","h4","_chooseSplitIndex","o4","s2","l2","u3","p1","d1","v","M","_allDistMargin","define","amd","RBush","$7736c129cc15e8f7$export$9099ad97b570f7c","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$6376afaf3edc9c87$export$55029509b82b2e2b","$09e02ea90a0e8bf3$var$RegularShape","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","$09e02ea90a0e8bf3$var$__extends","getFill","getPoints","getRadius2","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","arc","setLineDash","drawHitDetectionCanvas_","$09e02ea90a0e8bf3$export$9099ad97b570f7c","$52515b32646d1620$export$9099ad97b570f7c","CircleStyle","$52515b32646d1620$var$__extends","setRadius","$09e02ea90a0e8bf3$exports","$85f396a493b4e027$export$9099ad97b570f7c","Fill","color_","setColor","$5d571ec9414fea2a$export$9099ad97b570f7c","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$b14009c8ddfadc85$var$Style","Style","geometryFunction_","$b14009c8ddfadc85$var$defaultGeometryFunction","setGeometry","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setStroke","setText","$b14009c8ddfadc85$var$defaultStyles","$b14009c8ddfadc85$export$33d0043adf82cc14","$52515b32646d1620$exports","$8b66177f43228c5f$var$Property","$8b66177f43228c5f$export$9099ad97b570f7c","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","$8b66177f43228c5f$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","opt_style","styleFunction","styles_1","$b14009c8ddfadc85$export$4aaa4bacaec09e94","$0029daffb0840ded$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$0029daffb0840ded$export$c649c04369bd3370","$0029daffb0840ded$export$2513c58bc344fc5c","$0029daffb0840ded$export$84e3c67fd41b07f5","$0029daffb0840ded$export$6cd4b1e0c0e7240c","$0029daffb0840ded$export$9099ad97b570f7c","$0d3e13e6cbc69874$export$9099ad97b570f7c","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$1894cda24582da9a$var$CanvasBuilder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$1894cda24582da9a$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$1894cda24582da9a$export$9099ad97b570f7c","$a4795f00dc9530fb$export$9099ad97b570f7c","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$a4795f00dc9530fb$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$1894cda24582da9a$exports","$9d273adc89b91f65$var$CanvasLineStringBuilder","CanvasLineStringBuilder","$9d273adc89b91f65$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$9d273adc89b91f65$export$9099ad97b570f7c","$f6fbeb90ec7648f7$var$CanvasPolygonBuilder","CanvasPolygonBuilder","$f6fbeb90ec7648f7$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$f6fbeb90ec7648f7$export$9099ad97b570f7c","$d31bc97d019705a3$export$9099ad97b570f7c","$b17755064c98f4bd$export$e8c34bbbade92a3a","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$b73d5ad30737d390$export$3964e67694391753","$b73d5ad30737d390$var$CanvasTextBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$b73d5ad30737d390$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$b73d5ad30737d390$export$9099ad97b570f7c","$ca6b30c5cbf24996$var$BATCH_CONSTRUCTORS","$f6fbeb90ec7648f7$exports","$a4795f00dc9530fb$exports","$9d273adc89b91f65$exports","$b73d5ad30737d390$exports","$ca6b30c5cbf24996$export$9099ad97b570f7c","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$af060b2ee005860e$export$9099ad97b570f7c","$f4f82de86f87f3a5$export$1829060502283fb8","startM","measureAndCacheTextWidth","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$72877ffc9795efcc$export$7326ac1b36a49776","$4382159e91befef5$var$tmpExtent","$4382159e91befef5$var$p1","$4382159e91befef5$var$p2","$4382159e91befef5$var$p3","$4382159e91befef5$var$p4","$4382159e91befef5$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$4382159e91befef5$var$rtlRegEx","$4382159e91befef5$var$horizontalTextAlign","align","test","TEXT_ALIGN","$4382159e91befef5$var$Executor","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$33ba1dda25080cc3$export$ba197a5e917e3183","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$4382159e91befef5$export$9099ad97b570f7c","$569c5f1125a255d7$var$ORDER","$569c5f1125a255d7$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$569c5f1125a255d7$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$569c5f1125a255d7$export$f610334c339a4991","featureCallback","imageData","result_1","executor","opt_builderTypes","builderTypes","$569c5f1125a255d7$export$9099ad97b570f7c","$a9d040e5a239f750$var$CanvasImmediateRenderer","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$a9d040e5a239f750$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$a9d040e5a239f750$export$9099ad97b570f7c","$f7585e292fcf6dc5$export$9099ad97b570f7c","$a451836ed9fa69af$export$9099ad97b570f7c","$e98e828d2003bc1a$var$taintedTestContext","$e98e828d2003bc1a$var$IconImage","IconImage","imageState_","tainted_","$e98e828d2003bc1a$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$e98e828d2003bc1a$export$7eb84799c931fe91","$bdd0cbe3d07330ec$export$9099ad97b570f7c","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize","iconImage_","$e98e828d2003bc1a$exports","offset_","offsetOrigin_","offsetOrigin","$bdd0cbe3d07330ec$var$__extends","setAnchor","iconImageSize","$5d8f27e59f1a1823$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$5d8f27e59f1a1823$export$65a5cfeed6fd0c33","feature1","feature2","$5d8f27e59f1a1823$export$f0ea347488340e3d","$5d8f27e59f1a1823$export$522dfd100dd96ba1","$5d8f27e59f1a1823$var$renderGeometry","$5d8f27e59f1a1823$var$renderFeatureInternal","getGeometries","$c153db647ed724b6$var$CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$c153db647ed724b6$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$ffc5f3d579aca584$export$e7468c0ae08395df","clipped","Promise","resolve","transforms","$a9d040e5a239f750$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","canvas_1","imgContext","$bdd0cbe3d07330ec$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$7a6473f1d8aeafa7$export$9fd146a6491490e3","resultFeatures","$7a6473f1d8aeafa7$export$57fd269e987b81b8","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","$d333a56ccd100cfd$export$5a0d9577a24f3c5b","declutterBuilderGroup","userTransform","loadFeatures","$5d8f27e59f1a1823$export$f3b3f9822f340683","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$c153db647ed724b6$export$9099ad97b570f7c","$072ae9021a014f94$export$9099ad97b570f7c","VectorLayer","$072ae9021a014f94$var$__extends","$c153db647ed724b6$exports","$8b66177f43228c5f$exports","$bb0e1df757854922$var$RBush","opt_maxEntries","rbush_","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","concat","rbush","$bb0e1df757854922$export$9099ad97b570f7c","$c0e76308793a8fd7$export$9099ad97b570f7c","$0d7b3e6e3fdff479$export$8dbdea330bbd6b3c","$82712b733b1390bc$export$9099ad97b570f7c","$2e1cfd628699255e$var$withCredentials","$2e1cfd628699255e$export$52988233cf090939","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$2e1cfd628699255e$export$4355fa6d12274ca5","dataProjection","addFeatures","$2649c727c2ac59b6$export$e3e368afaf9a4fc7","VectorSourceEvent","opt_feature","opt_features","$2649c727c2ac59b6$var$__extends","$2649c727c2ac59b6$var$VectorSource","VectorSource","loader_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","$2649c727c2ac59b6$export$9099ad97b570f7c","$e5266561d049a513$export$7cf753b6a6534915","$e5266561d049a513$export$9099ad97b570f7c","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","$e5266561d049a513$var$__extends","setGeometryName","getGeometryName","handleGeometryChange_","setId","$a1ed4c2e9ff299f1$var$GeometryCollection","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$a1ed4c2e9ff299f1$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","$a1ed4c2e9ff299f1$var$cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","$a1ed4c2e9ff299f1$export$9099ad97b570f7c","$ad7f8cfc102a20b1$export$55be7a9e3fef4787","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$16831c8b3cdccec7$export$26b1c556c0e0f127","$ad7f8cfc102a20b1$export$1a804b04fa5a0253","extrapolate","lo","hi","m0","$7fc9bac1c7e6a765$var$LineString","LineString","flatMidpoint_","flatMidpointRevision_","$7fc9bac1c7e6a765$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","$7fc9bac1c7e6a765$export$9099ad97b570f7c","$8e075789d295b82f$var$MultiLineString","MultiLineString","lineStrings","$8e075789d295b82f$var$__extends","appendLineString","multiLineString","opt_interpolate","$ad7f8cfc102a20b1$export$8958f67b085a89b1","getLineString","$7fc9bac1c7e6a765$exports","getLineStrings","midpoints","$2b86337dc0cae6ce$export$414b603e1c51ecd4","$8e075789d295b82f$export$9099ad97b570f7c","$ec70b77b5d212b39$var$MultiPoint","MultiPoint","$ec70b77b5d212b39$var$__extends","appendPoint","multiPoint","getPoint","$ec70b77b5d212b39$export$9099ad97b570f7c","$2b01038ad8909ddb$var$MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$2b01038ad8909ddb$var$__extends","appendPolygon","newEndss","multiPolygon","$1eeaf5ba3166ef8e$export$7bbfd5f5d0d7544b","$1eeaf5ba3166ef8e$export$6564f135364e210c","$3c65f17c9f70f766$export$664b9cb38de51b70","$d21f3a0ce2fde0f1$export$3ed76a8ff8a671c","$089899774745c253$export$3ed76a8ff8a671c","$7db2c52ec52bd7cf$export$2bd6b2f516920f59","getInteriorPoints","$ec70b77b5d212b39$exports","$846e7d12e139eeec$export$9ae9bd8fe57776c1","simplifiedEndss","$54c380e0fb260ccc$export$503109e33f5b8344","getPolygon","prevEnds","getPolygons","$2b86337dc0cae6ce$export$eae4874c99627698","$341fcb0cdbf81912$export$abe2fb3e7ce9556","lastEnds","$2b01038ad8909ddb$export$9099ad97b570f7c","$45178ee5c320f5c0$export$9099ad97b570f7c","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","$45178ee5c320f5c0$export$534b7b915a5ec453","write","transformed","decimals","power_1","$6d55395397afac84$var$getText","$6d55395397afac84$export$9099ad97b570f7c","TextFeature","$6d55395397afac84$var$__extends","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","$e59479e07434c417$var$GeometryConstructor","$8e075789d295b82f$exports","$2b01038ad8909ddb$exports","$e59479e07434c417$var$TokenType","$e59479e07434c417$var$WKTGeometryType","$e59479e07434c417$var$type","toUpperCase","$e59479e07434c417$var$Lexer","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","charAt","nextToken","readNumber_","readText_","decimal","scientificNotation","$e59479e07434c417$var$Parser","Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","token","geomType","$a1ed4c2e9ff299f1$exports","ctor","$e59479e07434c417$var$WKT","WKT","splitCollection_","splitCollection","$e59479e07434c417$var$__extends","parse_","geom","$e5266561d049a513$exports","$e59479e07434c417$var$encode","$6d55395397afac84$exports","$e59479e07434c417$var$encodePointGeometry","$e59479e07434c417$var$encodeLineStringGeometry","$e59479e07434c417$var$encodePolygonGeometry","rings","$e59479e07434c417$var$GeometryEncoder","components","geoms","enc","geometryEncoder","$e59479e07434c417$var$encodeGeometryLayout","$e59479e07434c417$export$9099ad97b570f7c","$dcd171b60c1f41f1$var$LocatieServerControl","HTMLElement","super","_style","_template","query","shadow","attachShadow","mode","content","cloneNode","inputType","querySelectorAll","option","fetch","json","wktLoc","docs","geometrie_ll","ext","$e59479e07434c417$exports","CustomEvent","bubbles","composed","detail","blur","optionsHtml","weergavenaam","connectedCallback","$dcd171b60c1f41f1$export$9099ad97b570f7c","$aa42723acc87f243$var$projectionExtent","$aa42723acc87f243$var$size","$aa42723acc87f243$var$resolutions","$aa42723acc87f243$var$matrixIds","$aa42723acc87f243$var$z","$aa42723acc87f243$var$baseMapLayer","$e61f98c73384e953$exports","$0254a37eddedec7f$exports","$aa42723acc87f243$var$vectorSource","$2649c727c2ac59b6$exports","$aa42723acc87f243$var$vectorLayer","$072ae9021a014f94$exports","$aa42723acc87f243$var$map","$b92278933294ec34$exports","$aa42723acc87f243$var$locationSelectedHandler","customElements","$aa42723acc87f243$var$lsCOntrol","myControl","$aa42723acc87f243$var$addLsInput"],"version":3,"file":"index.b5f2fe2a.js.map"}